<?xml version="1.0" encoding="utf-8"?>
<EasyQuestProfile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuestsSorted>
    <QuestsSorted Action="RunCode" NameClass="FNVQuesterAuthSettings.Load();&#xD;&#xA;        if (false)&#xD;&#xA;        {&#xD;&#xA;            FNVQuesterAuthSettings.CurrentSetting.ToForm();&#xD;&#xA;        }&#xD;&#xA;        FNVQuesterAuthSettings.CurrentSetting.Save();&#xD;&#xA;        new Authentication(FNVQuesterAuthSettings.CurrentSetting.TransactionId, &quot;e8b609dcf76e&quot;); &#xD;&#xA;        ControlAuthentication.SetControl(5);&#xD;&#xA;&#xD;&#xA;ProgressSettings.Initialize();&#xD;&#xA;wManager.Wow.Helpers.Quest.QuesterCurrentContext.CurrentStep = ProgressSettings.CurrentSettings.nightelfStart - 1;&#xD;&#xA;&#xD;&#xA;Logging.Write(&quot;[FNV_Quester]: Loading current Quester step &quot; + (ProgressSettings.CurrentSettings.nightelfStart));&#xD;&#xA;&#xD;&#xA;Thread p = new Thread(() =&gt;&#xD;&#xA;{    &#xD;&#xA;ProgressSettings.inProgress = true;&#xD;&#xA;Logging.Write(&quot;[FNV_Quester]: Progress saver initialized&quot;);&#xD;&#xA; &#xD;&#xA; while(robotManager.Products.Products.IsStarted)&#xD;&#xA; {&#xD;&#xA;if(!ProgressSettings.inProgress)&#xD;&#xA;{&#xD;&#xA;ProgressSettings.Dispose();&#xD;&#xA;Logging.Write(&quot;[FNV_Quester]: Progress saver disposed&quot;);&#xD;&#xA;break;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;  if (Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause)&#xD;&#xA;  {&#xD;&#xA; if(ProgressSettings.CurrentSettings.nightelfStart &lt; wManager.Wow.Helpers.Quest.QuesterCurrentContext.CurrentStep)&#xD;&#xA;{&#xD;&#xA;ProgressSettings.CurrentSettings.nightelfStart = wManager.Wow.Helpers.Quest.QuesterCurrentContext.CurrentStep;&#xD;&#xA;ProgressSettings.CurrentSettings.Save();&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;  Thread.Sleep(1000);&#xD;&#xA; }&#xD;&#xA;&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;p.Start();&#xD;&#xA;&#xD;&#xA;Thread t = new Thread(() =&gt;&#xD;&#xA;{&#xD;&#xA;Logging.Write(&quot;[FNV_Quester]: Starting auto equip of bags&quot;);&#xD;&#xA;bags.bagsStarted = true;&#xD;&#xA; while (robotManager.Products.Products.IsStarted)&#xD;&#xA; {&#xD;&#xA;&#xD;&#xA;  if (Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; bags.bagsStarted)&#xD;&#xA;  {&#xD;&#xA;     if(bags.canEquip())&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;if(ItemsManager.GetItemCountById(5571) &gt; 0)&#xD;&#xA;ItemsManager.UseItem(5571);&#xD;&#xA;//Small Black Pouch&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;if(ItemsManager.GetItemCountById(828) &gt; 0)&#xD;&#xA;ItemsManager.UseItem(828);&#xD;&#xA;//Small Blue Pouch&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;if(ItemsManager.GetItemCountById(4496) &gt; 0)&#xD;&#xA;ItemsManager.UseItem(4496);&#xD;&#xA;//Small Brown Pouch&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;if(ItemsManager.GetItemCountById(5572) &gt; 0)&#xD;&#xA;ItemsManager.UseItem(5572);&#xD;&#xA;//Small Green Pouch&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;if(ItemsManager.GetItemCountById(805) &gt; 0)&#xD;&#xA;ItemsManager.UseItem(805);&#xD;&#xA;//Small Red Pouch&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;Logging.Write(&quot;[FNV_Quester]: Stopping auto equip of bags&quot;);&#xD;&#xA;break;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;  }&#xD;&#xA;  Thread.Sleep(5000);&#xD;&#xA; }&#xD;&#xA;});&#xD;&#xA;if(bags.canEquip())&#xD;&#xA;t.Start();&#xD;&#xA;&#xD;&#xA;NpcDB.AcceptOnlyProfileNpc = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.AttackBeforeBeingAttacked = true;&#xD;&#xA;QuesterSettings.SettingsEasternKingdoms();&#xD;&#xA;wManager.Wow.Forms.UserControlTabGeneralSettings.ReloadGeneralSettings();" />
    <QuestsSorted Action="RunCode" NameClass="wManager.Wow.Forms.UserControlTabGeneralSettings.ReloadGeneralSettings();" />
    <QuestsSorted Action="If" NameClass="(ObjectManager.Me.PlayerRace == PlayerFactions.NightElf &amp;&amp; !Quest.GetQuestCompleted(2158))" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheBalanceofNature" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheBalanceofNature2" />
    <QuestsSorted Action="PickUp" NameClass="TheWoodlandProtector" />
    <QuestsSorted Action="PickUp" NameClass="AGoodFriend" />
    <QuestsSorted Action="PickUp" NameClass="WebwoodVenom" />
    <QuestsSorted Action="TurnIn" NameClass="TheWoodlandProtector" />
    <QuestsSorted Action="PulseAllInOne" NameClass="TheWoodlandProtector2" />
    <QuestsSorted Action="TurnIn" NameClass="AGoodFriend" />
    <QuestsSorted Action="PickUp" NameClass="AFriendinNeed" />
    <QuestsSorted Action="Pulse" NameClass="WebwoodVenom" />
    <QuestsSorted Action="TurnIn" NameClass="WebwoodVenom" />
    <QuestsSorted Action="PickUp" NameClass="WebwoodEgg" />
    <QuestsSorted Action="TurnIn" NameClass="AGoodFriend" />
    <QuestsSorted Action="PickUp" NameClass="IverronsAntidote" />
    <QuestsSorted Action="Pulse" NameClass="IverronsAntidote" />
    <QuestsSorted Action="Pulse" NameClass="IverronsAntidote2" />
    <QuestsSorted Action="Pulse" NameClass="IverronsAntidote3" />
    <QuestsSorted Action="TurnIn" NameClass="IverronsAntidote" />
    <QuestsSorted Action="PickUp" NameClass="IverronsAntidoteP2" />
    <QuestsSorted Action="TurnIn" NameClass="IverronsAntidoteP2" />
    <QuestsSorted Action="Pulse" NameClass="WebwoodEgg" />
    <QuestsSorted Action="TurnIn" NameClass="WebwoodEgg" />
    <QuestsSorted Action="Pulse" NameClass="GRINDGrindTo6" />
    <QuestsSorted Action="If" NameClass="ObjectManager.Me.WowClass == WoWClass.Mage || ObjectManager.Me.WowClass == WoWClass.Warlock || ObjectManager.Me.WowClass == WoWClass.Warrior || ObjectManager.Me.WowClass == WoWClass.Rogue || ObjectManager.Me.WowClass == WoWClass.Hunter ||&#xD;&#xA;ObjectManager.Me.WowClass == WoWClass.Druid" />
    <QuestsSorted Action="WriteLog" NameClass="[FNV_Quester]: Going to grind to level 8 as Druid / Warrior / Rogue / Hunter" />
    <QuestsSorted Action="Pulse" NameClass="GRINDGrindTo8DRWARGHU" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="PickUp" NameClass="DolanaarDelivery" />
    <QuestsSorted Action="Pulse" NameClass="ROUTEShadowglenToDolanaar" />
    <QuestsSorted Action="TurnIn" NameClass="DolanaarDelivery" />
    <QuestsSorted Action="RunCode" NameClass="wManager.Wow.Helpers.Conditions.ForceIgnoreIsAttacked = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.FlightMasterTaxiUse = true;" />
    <QuestsSorted Action="Pulse" NameClass="ROUTEGoToDarnassus" />
    <QuestsSorted Action="RunCode" NameClass="abandonQuest.abandon(&quot;Encrypted Sigil&quot;);&#xD;&#xA;abandonQuest.abandon(&quot;Etched Sigil&quot;);&#xD;&#xA;abandonQuest.abandon(&quot;Hallowed Sigil&quot;);&#xD;&#xA;abandonQuest.abandon(&quot;Simple Sigil&quot;);&#xD;&#xA;abandonQuest.abandon(&quot;Verdant Sigil&quot;);" />
    <QuestsSorted Action="RunCode" NameClass="wManager.Wow.Helpers.Conditions.ForceIgnoreIsAttacked = false;" />
    <QuestsSorted Action="RunCode" NameClass="FlightMaster.takeTaxi(&quot;Teldrassil&quot;, &quot;Darkshore&quot;);" />
    <QuestsSorted Action="RunCode" NameClass="MovementManager.StopMove();" />
    <QuestsSorted Action="If" NameClass="Usefuls.ContinentId == (int) ContinentId.Kalimdor" />
    <QuestsSorted Action="Pulse" NameClass="BOATShipAuberdineToMenethil" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="Pulse" NameClass="ROUTEShipToFlightMaster" />
    <QuestsSorted Action="RunCode" NameClass="FlightMaster.discoverTaxi(&quot;Wetlands&quot;);" />
    <QuestsSorted Action="RunCode" NameClass="wManager.Wow.Helpers.Conditions.ForceIgnoreIsAttacked = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.Repair = false;" />
    <QuestsSorted Action="Pulse" NameClass="ROUTESwimToStormwind" />
    <QuestsSorted Action="RunCode" NameClass="if(!Usefuls.MapZoneName.Contains(&quot;Elwynn&quot;))&#xD;&#xA;{&#xD;&#xA;Logging.Write(&quot;[FNV_Quester]: Going to suicide, enable Spirit Healer Rezz&quot;);&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.UseSpiritHealer = true;&#xD;&#xA;&#xD;&#xA;while(ObjectManager.Me.IsAlive)&#xD;&#xA;{&#xD;&#xA;Logging.Write(&quot;Waiting to die...&quot;);&#xD;&#xA;Thread.Sleep(5000);&#xD;&#xA;}&#xD;&#xA;}" />
    <QuestsSorted Action="RunCode" NameClass="wManager.wManagerSetting.CurrentSetting.UseSpiritHealer = false;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.Repair = true;&#xD;&#xA;wManager.Wow.Helpers.Conditions.ForceIgnoreIsAttacked = false;" />
    <QuestsSorted Action="Pulse" NameClass="ROUTESpiritHealerToStormwindTaxi" />
    <QuestsSorted Action="RunCode" NameClass="FlightMaster.discoverTaxi(&quot;Stormwind&quot;);&#xD;&#xA;bags.bagsStarted = false;&#xD;&#xA;&#xD;&#xA;ProgressSettings.Dispose();&#xD;&#xA;ProgressSettings.inProgress = false;&#xD;&#xA;" />
    <QuestsSorted Action="RunCode" NameClass="var position = new Vector3(-8867.79f, 673.673f, 97.90382f);&#xD;&#xA;int npcEntryId = 6740;&#xD;&#xA;&#xD;&#xA;if(!wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId))&#xD;&#xA;wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId);&#xD;&#xA;&#xD;&#xA; if (wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId))&#xD;&#xA;    {&#xD;&#xA;       Usefuls.SelectGossipOption(GossipOptionsType.binder);&#xD;&#xA;     System.Threading.Thread.Sleep(2000);&#xD;&#xA;     wManager.Wow.Helpers.Lua.LuaDoString(&quot;ConfirmBinder()&quot;);&#xD;&#xA;     wManager.Wow.Helpers.Lua.LuaDoString(&quot;ConfirmBinder()&quot;);&#xD;&#xA;     wManager.Wow.Helpers.Lua.LuaDoString(&quot;ConfirmBinder()&quot;);&#xD;&#xA;}" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="RunCode" NameClass="FNVSettings.Initialize();&#xD;&#xA;FNVSettings.CurrentSettings.nightelfStart = true;&#xD;&#xA;FNVSettings.Dispose();" />
    <QuestsSorted Action="LoadProfile" NameClass="FNV_V2\#1 (1-6) Humant Start.xml" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="6780" Name="Porthannius" GameObject="false">
      <PickUpQuests>
        <int>2159</int>
      </PickUpQuests>
      <TurnInQuests />
      <Position X="10214.3" Y="700.553" Z="1360.604" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="2150" Name="Zenn Foulhoof" GameObject="false">
      <PickUpQuests>
        <int>488</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>489</int>
        <int>488</int>
      </TurnInQuests>
      <Position X="9920.41" Y="735.951" Z="1313.939" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="2083" Name="Syral Bladeleaf" GameObject="false">
      <PickUpQuests>
        <int>997</int>
        <int>1581</int>
        <int>489</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>1581</int>
      </TurnInQuests>
      <Position X="9872.26" Y="959.278" Z="1308.071" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="2078" Name="Athridas Bearmantle" GameObject="false">
      <PickUpQuests>
        <int>475</int>
        <int>483</int>
        <int>486</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>476</int>
        <int>483</int>
        <int>486</int>
      </TurnInQuests>
      <Position X="9887.53" Y="965.54" Z="1313.815" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="3567" Name="Tallonkai Swiftroot" GameObject="false">
      <PickUpQuests>
        <int>2459</int>
        <int>2438</int>
        <int>932</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>2459</int>
        <int>2438</int>
        <int>932</int>
      </TurnInQuests>
      <Position X="9898.59" Y="984.968" Z="1354.802" />
    </NPCQuest>
    <NPCQuest Id="2080" Name="Denalan" GameObject="false">
      <PickUpQuests>
        <int>2499</int>
        <int>941</int>
        <int>922</int>
        <int>918</int>
        <int>919</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>997</int>
        <int>2499</int>
        <int>2498</int>
        <int>930</int>
        <int>927</int>
        <int>931</int>
        <int>918</int>
        <int>919</int>
      </TurnInQuests>
      <Position X="9506.92" Y="713.766" Z="1255.888" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="2107" Name="Gaerolas Talvethren" GameObject="false">
      <PickUpQuests>
        <int>476</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>475</int>
      </TurnInQuests>
      <Position X="9845.15" Y="440.93" Z="1317.183" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="2151" Name="Moon Priestess Amara" GameObject="false">
      <PickUpQuests>
        <int>487</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>487</int>
      </TurnInQuests>
      <Position X="9909.915" Y="1194.477" Z="1308.599" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="6736" Name="Innkeeper Keldamyr" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>2159</int>
      </TurnInQuests>
      <Position X="9802.21" Y="982.608" Z="1313.896" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="7317" Name="Oben Rageclaw" GameObject="false">
      <PickUpQuests>
        <int>2561</int>
        <int>2541</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>2561</int>
        <int>2541</int>
      </TurnInQuests>
      <Position X="9740.98" Y="1526.17" Z="1280.315" />
    </NPCQuest>
    <NPCQuest Id="6751" Name="Strange Fruited Plant" GameObject="true">
      <PickUpQuests>
        <int>930</int>
      </PickUpQuests>
      <TurnInQuests />
      <Position X="9245.65" Y="1644.85" Z="1303.61" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="3517" Name="Rellian Greenspyre" GameObject="false">
      <PickUpQuests>
        <int>2498</int>
        <int>923</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>922</int>
        <int>923</int>
      </TurnInQuests>
      <Position X="10085.6" Y="2534.25" Z="1317.558" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="3519" Name="Sentinel Arynia Cloudsbreak" GameObject="false">
      <PickUpQuests>
        <int>940</int>
        <int>937</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>938</int>
        <int>937</int>
      </TurnInQuests>
      <Position X="10665.1" Y="1863.57" Z="1324.426" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="2079" Name="Conservator Ilthalaine" GameObject="false">
      <PickUpQuests>
        <int>3118</int>
        <int>3117</int>
        <int>3119</int>
        <int>3116</int>
        <int>456</int>
        <int>457</int>
        <int>3120</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>456</int>
        <int>457</int>
      </TurnInQuests>
      <Position X="10328.9" Y="826.052" Z="1326.381" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="2077" Name="Melithar Staghelm" GameObject="false">
      <PickUpQuests>
        <int>458</int>
      </PickUpQuests>
      <TurnInQuests />
      <Position X="10389.8" Y="763.477" Z="1319.953" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="8583" Name="Dirania Silvershine" GameObject="false">
      <PickUpQuests>
        <int>4495</int>
        <int>3521</int>
        <int>3522</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>3519</int>
        <int>3521</int>
      </TurnInQuests>
      <Position X="10407.2" Y="713.794" Z="1321.618" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="2082" Name="Gilshalan Windwalker" GameObject="false">
      <PickUpQuests>
        <int>920</int>
        <int>917</int>
        <int>916</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>917</int>
        <int>916</int>
      </TurnInQuests>
      <Position X="10417.7" Y="871.194" Z="1319.409" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="1992" Name="Tarindrella" GameObject="false">
      <PickUpQuests>
        <int>459</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>458</int>
        <int>459</int>
      </TurnInQuests>
      <Position X="10296.9" Y="870.227" Z="1335.894" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="8584" Name="Iverron" GameObject="false">
      <PickUpQuests>
        <int>3519</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>4495</int>
        <int>3522</int>
      </TurnInQuests>
      <Position X="10711.6" Y="1034.91" Z="1347.26" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="1231" Name="Grif Wildheart" GameObject="false">
      <PickUpQuests>
        <int>6064</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>6064</int>
      </TurnInQuests>
      <Position X="-5618.54" Y="-454.071" Z="407.6597" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="3601" Name="Dazalar" GameObject="false">
      <PickUpQuests>
        <int>6063</int>
        <int>6101</int>
        <int>6102</int>
        <int>6103</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>6063</int>
        <int>6101</int>
        <int>6102</int>
        <int>6071</int>
        <int>6072</int>
        <int>6073</int>
        <int>6721</int>
        <int>6722</int>
      </TurnInQuests>
      <Position X="9812.33" Y="928.806" Z="1308.11" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="4146" Name="Jocaste" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>6103</int>
      </TurnInQuests>
      <Position X="10178" Y="2511.01" Z="1342.872" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="6780" Name="Porthannius" GameObject="false">
      <PickUpQuests>
        <int>2159</int>
      </PickUpQuests>
      <TurnInQuests />
      <Position X="10214.3" Y="700.553" Z="1360.604" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="6736" Name="Innkeeper Keldamyr" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>2159</int>
      </TurnInQuests>
      <Position X="9802.21" Y="982.608" Z="1313.896" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="2150" Name="Zenn Foulhoof" GameObject="false">
      <PickUpQuests>
        <int>488</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>488</int>
      </TurnInQuests>
      <Position X="9920.41" Y="735.951" Z="1313.939" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="2083" Name="Syral Bladeleaf" GameObject="false">
      <PickUpQuests>
        <int>997</int>
      </PickUpQuests>
      <TurnInQuests />
      <Position X="9872.26" Y="959.278" Z="1308.071" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="2080" Name="Denalan" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>997</int>
      </TurnInQuests>
      <Position X="9506.92" Y="713.766" Z="1255.888" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="2078" Name="Athridas Bearmantle" GameObject="false">
      <PickUpQuests>
        <int>475</int>
      </PickUpQuests>
      <TurnInQuests />
      <Position X="9887.53" Y="965.54" Z="1313.815" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="2107" Name="Gaerolas Talvethren" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>475</int>
      </TurnInQuests>
      <Position X="9845.15" Y="440.93" Z="1317.183" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="3567" Name="Tallonkai Swiftroot" GameObject="false">
      <PickUpQuests>
        <int>2438</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>2438</int>
      </TurnInQuests>
      <Position X="9898.59" Y="984.968" Z="1354.802" />
    </NPCQuest>
    <NPCQuest Id="3517" Name="Rellian Greenspyre" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>922</int>
      </TurnInQuests>
      <Position X="10085.6" Y="2534.25" Z="1317.558" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="2151" Name="Moon Priestess Amara" GameObject="false">
      <PickUpQuests>
        <int>487</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>487</int>
      </TurnInQuests>
      <Position X="9909.915" Y="1194.477" Z="1308.599" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="7317" Name="Oben Rageclaw" GameObject="false">
      <PickUpQuests>
        <int>2541</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>2541</int>
      </TurnInQuests>
      <Position X="9740.98" Y="1526.17" Z="1280.315" />
    </NPCQuest>
    <NPCQuest Id="6751" Name="Strange Fruited Plant" GameObject="true">
      <PickUpQuests>
        <int>930</int>
      </PickUpQuests>
      <TurnInQuests />
      <Position X="9245.65" Y="1644.85" Z="1303.61" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="3519" Name="Sentinel Arynia Cloudsbreak" GameObject="false">
      <PickUpQuests>
        <int>937</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>937</int>
      </TurnInQuests>
      <Position X="10665.1" Y="1863.57" Z="1324.426" Type="Flying" />
    </NPCQuest>
  </NpcQuest>
  <Npc>
    <Npc>
      <Position X="10450.2" Y="779.858" Z="1322.67" Type="Flying" />
      <Entry>6091</Entry>
      <Name>Dellylah</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="10485.9" Y="811.184" Z="1322.745" />
      <Entry>3591</Entry>
      <Name>Freja Nightwing</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="10526.6" Y="778.086" Z="1329.599" />
      <Entry>3593</Entry>
      <Name>Alyissia</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>WarriorTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="10519.1" Y="778.014" Z="1329.599" />
      <Entry>3594</Entry>
      <Name>Frahun Shadewhisper</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>RogueTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="10442.9" Y="783.989" Z="1337.287" />
      <Entry>3587</Entry>
      <Name>Lyrai</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="10458.8" Y="801.623" Z="1346.755" />
      <Entry>3595</Entry>
      <Name>Shanda</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>PriestTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="10464" Y="829.538" Z="1380.941" />
      <Entry>3597</Entry>
      <Name>Mardant Strongoak</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>DruidTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="10458.5" Y="827.868" Z="1380.939" />
      <Entry>3596</Entry>
      <Name>Ayanna Everstride</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>HunterTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="9802.21" Y="982.608" Z="1313.896" Type="Flying" />
      <Entry>6736</Entry>
      <Name>Innkeeper Keldamyr</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="9812.37" Y="947.578" Z="1308.769" Type="Flying" />
      <Entry>3609</Entry>
      <Name>Shalomon</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="9790.31" Y="943.87" Z="1308.778" Type="Flying" />
      <Entry>3599</Entry>
      <Name>Jannok Breezesong</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>RogueTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="9812.33" Y="928.806" Z="1308.11" Type="Flying" />
      <Entry>3601</Entry>
      <Name>Dazalar</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>HunterTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="9741.91" Y="966" Z="1293.695" Type="Flying" />
      <Entry>3602</Entry>
      <Name>Kal</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>DruidTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="9905.44" Y="985.433" Z="1313.832" />
      <Entry>3600</Entry>
      <Name>Laurna Morninglight</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>PriestTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
    <Npc>
      <Position X="9822.23" Y="952.007" Z="1308.775" Type="Flying" />
      <Entry>3598</Entry>
      <Name>Kyra Windblade</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>ShamanTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Kalimdor</ContinentId>
    </Npc>
  </Npc>
  <EasyQuests>
    <EasyQuest>
      <Name>A Friend in Need</Name>
      <QuestId>
        <int>3519</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>A Good Friend</Name>
      <QuestId>
        <int>4495</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>A Troubling Breeze</Name>
      <QuestId>
        <int>475</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>BAGSBuyBags</Name>
      <QuestId />
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="9891.88" Y="988.308" Z="1327.564" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro>BuyMerchantItem(6,1) </Macro>
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>3608</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return bags.canEquip();</CanCondition>
      <IsCompleteCondition>return ItemsManager.GetItemCountById(4496) &gt;= 1;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>BOATShipAuberdineToMenethil</Name>
      <QuestId />
      <QuestType>OverridePulseCSharpCode</QuestType>
      <QuestClass xsi:type="OverridePulseCSharpCodeEasyQuestClass">
        <Code>// Settings:
var zeppelinEntryId = 176310; // Zeppelin/Ship EntryId
// From
var fromZeppelinWaitPosition =  new Vector3(6406.216, 823.0809, 0); // Position where Zeppelin/Ship waits players (from)
var fromPlayerWaitPosition = new Vector3(6424.557, 820.6373, 5.520958); // Position where the player waits Zeppelin/Ship (from)
var fromPlayerInZeppelinPosition = new Vector3(6407.564, 826.9424, 6.096757); // Position where the player waits in the Zeppelin/Ship (from)
// To
var toZeppelinWaitPosition = new Vector3(-3709.475, -575.0988, 0); // Position where Zeppelin/Ship waits players (to)
var toPlayerLeavePosition = new Vector3(-3730.357, -583.0381, 6.205921); // Position to go out the Zeppelin/Ship (to)

// Change WRobot settings:
wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;

// Code:
if (!Conditions.InGameAndConnectedAndProductStartedNotInPause)
    return true;

if (Usefuls.ContinentId == (int)ContinentId.Kalimdor)
{
    if (!ObjectManager.Me.InTransport)
    {
        if (GoToTask.ToPosition(fromPlayerWaitPosition))
        {
            var zeppelin = ObjectManager.GetWoWGameObjectByEntry(zeppelinEntryId).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
            if (zeppelin != null &amp;&amp; zeppelin.Position.DistanceTo(fromZeppelinWaitPosition) &lt; 1)
            {

Lua.LuaDoString("ClearTarget()");

wManager.Wow.Helpers.MovementManager.Face(new Vector3(6409.265, 827.009, 6.097602));

while(fromPlayerInZeppelinPosition.DistanceTo(ObjectManager.Me.Position) &gt; 3)
{
wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 250);
      Thread.Sleep(robotManager.Helpful.Others.Random(25, 50));
}


                GoToTask.ToPosition(fromPlayerInZeppelinPosition);
            }
        }
    }
}
else if (Usefuls.ContinentId != (int)ContinentId.Kalimdor)
{
    if (ObjectManager.Me.InTransport)
    {
        var zeppelin = ObjectManager.GetWoWGameObjectByEntry(zeppelinEntryId).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
        if (zeppelin != null &amp;&amp; zeppelin.Position.DistanceTo(toZeppelinWaitPosition) &lt; 1)
        {

       if(!ObjectManager.Me.HaveBuff("Stealth"))
{
            wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 1500);
            wManager.Wow.Helpers.Move.StrafeLeft(Move.MoveAction.PressKey, 1000);
            wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 1200);
}
     else
{
          wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 3000);
          wManager.Wow.Helpers.Move.StrafeLeft(Move.MoveAction.PressKey, 1000);
            wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 2400);
}

            GoToTask.ToPosition(toPlayerLeavePosition);

        }
    }
}
return true;</Code>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (new Vector3(-3730.357f, -583.0381f, 6.205921f).DistanceTo(ObjectManager.Me.Position) &lt; 13 &amp;&amp; Usefuls.ContinentId != (int) ContinentId.Kalimdor &amp;&amp; !ObjectManager.Me.InTransport) || (Quest.GetQuestCompleted(2158));</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>999</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Denalan's Earth</Name>
      <QuestId>
        <int>997</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Dolanaar Delivery</Name>
      <QuestId>
        <int>2159</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>DRUIDGrindTo12</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10902.25" Y="1459.563" Z="1300.962" />
          <Vector3 X="10705.12" Y="1453.893" Z="1319.823" />
          <Vector3 X="10520.03" Y="1568.576" Z="1302.366" />
          <Vector3 X="10390.98" Y="1469.469" Z="1328.915" />
          <Vector3 X="10368.28" Y="1631.062" Z="1292.138" />
          <Vector3 X="10449.14" Y="1714.823" Z="1300.031" />
          <Vector3 X="10560.86" Y="1692.138" Z="1296.847" />
          <Vector3 X="10659" Y="1766.829" Z="1321.602" />
          <Vector3 X="10849.22" Y="1737.961" Z="1319.645" />
          <Vector3 X="10957.89" Y="1778.751" Z="1319.043" />
          <Vector3 X="10976.87" Y="1852.56" Z="1332.965" />
        </HotSpots>
        <EntryTarget>
          <int>2001</int>
          <int>1997</int>
          <int>2033</int>
          <int>2027</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>11</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ferocitas the Dream Eater</Name>
      <QuestId>
        <int>2459</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10060.4" Y="322.225" Z="1324.836" />
          <Vector3 X="9954.854" Y="273.8569" Z="1324.876" />
          <Vector3 X="10040.81" Y="270.1435" Z="1324.963" />
        </HotSpots>
        <EntryTarget>
          <int>7235</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ferocitas the Dream Eater2</Name>
      <QuestId>
        <int>2459</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10018.8" Y="282.413" Z="1322.936" />
        </HotSpots>
        <EntryTarget>
          <int>7234</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(2459) || ItemsManager.GetItemCountById(8050) &gt;= 1 || ItemsManager.GetItemCountById(8049) &gt;= 1);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Gnarlpine Corruption</Name>
      <QuestId>
        <int>476</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>GRIND_Grind for Money</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="9781.839" Y="819.5666" Z="1300.063" />
          <Vector3 X="9855.368" Y="740.7183" Z="1303.634" />
          <Vector3 X="9778.721" Y="607.1263" Z="1299.972" />
          <Vector3 X="9639.973" Y="1053.502" Z="1273.451" />
          <Vector3 X="9562.415" Y="1177.787" Z="1267.892" />
          <Vector3 X="9801.374" Y="1208.792" Z="1286.043" />
        </HotSpots>
        <EntryTarget>
          <int>1995</int>
          <int>1998</int>
          <int>2042</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return ObjectManager.Me.GetMoneyCopper &gt;= 1500 || Quest.GetQuestCompleted(488);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>GRINDERGrindTo9</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="9980.366" Y="711.9606" Z="1321.069" />
          <Vector3 X="9754.982" Y="650.1686" Z="1294.727" />
          <Vector3 X="9617.448" Y="743.2761" Z="1266.948" />
          <Vector3 X="9367.186" Y="813.3887" Z="1262.149" />
        </HotSpots>
        <EntryTarget>
          <int>1998</int>
          <int>2042</int>
          <int>1995</int>
          <int>2022</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>8</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>GRINDGrindTo6</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10582.44" Y="958.7614" Z="1317.584" />
          <Vector3 X="10637.45" Y="684.9183" Z="1327.934" />
        </HotSpots>
        <EntryTarget>
          <int>1985</int>
          <int>2032</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>5</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>GrindTo11</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10902.25" Y="1459.563" Z="1300.962" />
          <Vector3 X="10705.12" Y="1453.893" Z="1319.823" />
          <Vector3 X="10520.03" Y="1568.576" Z="1302.366" />
          <Vector3 X="10390.98" Y="1469.469" Z="1328.915" />
          <Vector3 X="10368.28" Y="1631.062" Z="1292.138" />
          <Vector3 X="10449.14" Y="1714.823" Z="1300.031" />
          <Vector3 X="10560.86" Y="1692.138" Z="1296.847" />
          <Vector3 X="10659" Y="1766.829" Z="1321.602" />
          <Vector3 X="10849.22" Y="1737.961" Z="1319.645" />
          <Vector3 X="10957.89" Y="1778.751" Z="1319.043" />
          <Vector3 X="10976.87" Y="1852.56" Z="1332.965" />
        </HotSpots>
        <EntryTarget>
          <int>2001</int>
          <int>1997</int>
          <int>2033</int>
          <int>2027</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>10</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>HUNTER Taming the Beast</Name>
      <QuestId>
        <int>6063</int>
      </QuestId>
      <QuestType>UseItemOn</QuestType>
      <QuestClass xsi:type="UseItemOnEasyQuestClass">
        <HotSpots>
          <Vector3 X="9746.95" Y="1082.332" Z="1288.631" />
          <Vector3 X="9545.064" Y="1137.399" Z="1263.266" />
        </HotSpots>
        <EntryIdTarget>
          <int>1998</int>
        </EntryIdTarget>
        <ItemId>15921</ItemId>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>10</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>HUNTER Taming the Beast3</Name>
      <QuestId>
        <int>6102</int>
      </QuestId>
      <QuestType>UseItemOn</QuestType>
      <QuestClass xsi:type="UseItemOnEasyQuestClass">
        <HotSpots>
          <Vector3 X="9271.309" Y="1463.921" Z="1291.33" />
          <Vector3 X="9201.833" Y="1585.657" Z="1304.425" />
          <Vector3 X="9402.328" Y="1684.161" Z="1304.975" />
        </HotSpots>
        <EntryIdTarget>
          <int>1996</int>
        </EntryIdTarget>
        <ItemId>15923</ItemId>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>10</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>HUNTER_GRINDGrindTo8</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="9654.776" Y="1052.572" Z="1278.455" />
          <Vector3 X="9558.266" Y="1123.122" Z="1265.515" />
          <Vector3 X="9673.628" Y="1211.353" Z="1269.434" />
          <Vector3 X="9854.95" Y="1256.258" Z="1291.462" />
        </HotSpots>
        <EntryTarget>
          <int>1995</int>
          <int>2042</int>
          <int>1998</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>7</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>Hunter</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>HUNTER_ROUTE_TamingTheBeast2</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="9800.188" Y="929.324" Z="1306.929" />
          <Vector3 X="9789.9" Y="927.3255" Z="1307.141" />
          <Vector3 X="9779.546" Y="925.5813" Z="1304.62" />
          <Vector3 X="9768.88" Y="923.7979" Z="1301.436" />
          <Vector3 X="9758.833" Y="922.1029" Z="1297.218" />
          <Vector3 X="9749.787" Y="920.554" Z="1296.042" />
          <Vector3 X="9740.723" Y="919.1194" Z="1294.19" />
          <Vector3 X="9730.298" Y="917.858" Z="1291.16" />
          <Vector3 X="9719.857" Y="916.7391" Z="1291.15" />
          <Vector3 X="9709.423" Y="915.621" Z="1292.186" />
          <Vector3 X="9699.046" Y="914.0422" Z="1292.156" />
          <Vector3 X="9689.033" Y="912.1733" Z="1289.366" />
          <Vector3 X="9678.877" Y="909.5948" Z="1284.699" />
          <Vector3 X="9669.554" Y="904.1369" Z="1279.849" />
          <Vector3 X="9662.598" Y="896.3057" Z="1273.979" />
          <Vector3 X="9656.041" Y="888.5182" Z="1269.736" />
          <Vector3 X="9648.65" Y="880.6221" Z="1267.72" />
          <Vector3 X="9642.695" Y="872.5087" Z="1266.276" />
          <Vector3 X="9640.534" Y="862.2508" Z="1265.687" />
          <Vector3 X="9640.574" Y="851.7675" Z="1265.667" />
          <Vector3 X="9641.117" Y="841.2816" Z="1265.216" />
          <Vector3 X="9641.525" Y="830.7906" Z="1264.738" />
          <Vector3 X="9640.802" Y="820.0048" Z="1265.173" />
          <Vector3 X="9641.379" Y="810.0368" Z="1267.071" />
          <Vector3 X="9640.396" Y="800.5004" Z="1267.464" />
          <Vector3 X="9632.566" Y="793.048" Z="1265.254" />
          <Vector3 X="9625.052" Y="785.7151" Z="1264.784" />
          <Vector3 X="9617.451" Y="778.9442" Z="1263.16" />
          <Vector3 X="9608.799" Y="772.9952" Z="1260.408" />
          <Vector3 X="9600.669" Y="766.3544" Z="1260.555" />
          <Vector3 X="9592.235" Y="759.2542" Z="1259.11" />
          <Vector3 X="9579.813" Y="747.6902" Z="1256.326" />
          <Vector3 X="9566.984" Y="735.7903" Z="1255.4" />
          <Vector3 X="9558.819" Y="720.4852" Z="1255.046" />
          <Vector3 X="9550.424" Y="705.2053" Z="1258.581" />
          <Vector3 X="9534.617" Y="697.3336" Z="1264.318" />
          <Vector3 X="9517.258" Y="695.2341" Z="1263.594" />
          <Vector3 X="9500.377" Y="695.2509" Z="1262.739" />
          <Vector3 X="9486.774" Y="706.4155" Z="1259.875" />
          <Vector3 X="9477.429" Y="720.5506" Z="1260.392" />
          <Vector3 X="9463.005" Y="730.3854" Z="1257.548" />
          <Vector3 X="9448.405" Y="740.007" Z="1255.682" />
          <Vector3 X="9437.817" Y="754.4067" Z="1253.995" />
          <Vector3 X="9425.451" Y="765.8317" Z="1257.125" />
          <Vector3 X="9411.076" Y="776.6411" Z="1259.981" />
          <Vector3 X="9401.974" Y="790.7365" Z="1255.798" />
          <Vector3 X="9396.249" Y="807.6447" Z="1254.553" />
          <Vector3 X="9390.127" Y="823.7529" Z="1256.111" />
          <Vector3 X="9395.366" Y="840.4166" Z="1256.833" />
          <Vector3 X="9402.021" Y="856.6016" Z="1258.782" />
          <Vector3 X="9408.439" Y="872.316" Z="1260.603" />
          <Vector3 X="9414.719" Y="889.2021" Z="1261.923" />
          <Vector3 X="9417.058" Y="906.5116" Z="1264.104" />
          <Vector3 X="9419.59" Y="923.276" Z="1266.144" />
          <Vector3 X="9419.384" Y="940.889" Z="1270.461" />
          <Vector3 X="9414.479" Y="946.6367" Z="1274.212" />
          <Vector3 X="9397.631" Y="947.2402" Z="1279.859" />
          <Vector3 X="9389.088" Y="945.3546" Z="1283.76" />
          <Vector3 X="9371.431" Y="941.7286" Z="1290.036" />
          <Vector3 X="9354.857" Y="938.0967" Z="1291.582" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>Hunter</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>HUNTERTaming the Beast2</Name>
      <QuestId>
        <int>6101</int>
      </QuestId>
      <QuestType>UseItemOn</QuestType>
      <QuestClass xsi:type="UseItemOnEasyQuestClass">
        <HotSpots>
          <Vector3 X="9324.438" Y="920.0185" Z="1303.41" />
          <Vector3 X="9378.509" Y="973.9348" Z="1283.143" />
          <Vector3 X="9369.263" Y="1069.305" Z="1279.296" />
          <Vector3 X="9215.723" Y="1218.139" Z="1316.377" />
          <Vector3 X="9216.289" Y="1282.956" Z="1310.431" />
          <Vector3 X="9245.862" Y="1255.312" Z="1297.964" />
        </HotSpots>
        <EntryIdTarget>
          <int>2043</int>
        </EntryIdTarget>
        <ItemId>15922</ItemId>
        <Range>15</Range>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>10</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>HUTERGrindTo10</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="9980.366" Y="711.9606" Z="1321.069" />
          <Vector3 X="9754.982" Y="650.1686" Z="1294.727" />
          <Vector3 X="9617.448" Y="743.2761" Z="1266.948" />
          <Vector3 X="9367.186" Y="813.3887" Z="1262.149" />
        </HotSpots>
        <EntryTarget>
          <int>1998</int>
          <int>2042</int>
          <int>1995</int>
          <int>2022</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>9</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Iverron's Antidote</Name>
      <QuestId>
        <int>3521</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="10600.37" Y="738.7363" Z="1319.947" />
          <Vector3 X="10668.03" Y="685.3295" Z="1329.97" />
          <Vector3 X="10678.61" Y="817.5904" Z="1325.259" />
          <Vector3 X="10557.28" Y="676.4018" Z="1322.792" />
          <Vector3 X="10543.61" Y="598.3678" Z="1334.691" />
          <Vector3 X="10454.72" Y="636.9852" Z="1323.809" />
          <Vector3 X="10437.9" Y="569.282" Z="1336.161" />
          <Vector3 X="10467.72" Y="521.0955" Z="1346.206" />
          <Vector3 X="10381.33" Y="496.2151" Z="1333.231" />
          <Vector3 X="10356.4" Y="616.2919" Z="1328.691" />
          <Vector3 X="10336.88" Y="630.5728" Z="1329.388" />
          <Vector3 X="10248.41" Y="732.5868" Z="1350.952" />
          <Vector3 X="10269.16" Y="769.8641" Z="1345.065" />
          <Vector3 X="10328.53" Y="741.1855" Z="1330.587" />
          <Vector3 X="10277.5" Y="785.9308" Z="1340.959" />
          <Vector3 X="10233.77" Y="811.8877" Z="1352.328" />
        </HotSpots>
        <EntryIdObjects>
          <int>152094</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Iverron's Antidote2</Name>
      <QuestId>
        <int>3521</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="10485.15" Y="892.8167" Z="1310.83" />
          <Vector3 X="10502.91" Y="909.6868" Z="1311.381" />
          <Vector3 X="10513.14" Y="937.8647" Z="1315.607" />
          <Vector3 X="10537.54" Y="925.566" Z="1312.097" />
          <Vector3 X="10555.91" Y="924.7205" Z="1314.892" />
          <Vector3 X="10576.68" Y="917.7026" Z="1313.425" />
          <Vector3 X="10528.76" Y="862.9227" Z="1309.22" />
          <Vector3 X="10556.82" Y="877.0196" Z="1309.984" />
          <Vector3 X="10572.19" Y="875.4551" Z="1308.717" />
          <Vector3 X="10606.48" Y="889.1524" Z="1312.51" />
          <Vector3 X="10621.46" Y="855.0823" Z="1312.129" />
          <Vector3 X="10604.99" Y="848.3805" Z="1315.243" />
          <Vector3 X="10593.06" Y="836.8693" Z="1309.417" />
          <Vector3 X="10562.05" Y="820.2659" Z="1308.475" />
        </HotSpots>
        <EntryIdObjects>
          <int>152095</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Iverron's Antidote3</Name>
      <QuestId>
        <int>3521</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10721.12" Y="903.8561" Z="1327.423" />
        </HotSpots>
        <EntryTarget>
          <int>1986</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>true</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Iverron's AntidoteP2</Name>
      <QuestId>
        <int>3522</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return !Quests.hasFailed("Iverron") || Quest.GetQuestCompleted(3522);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Rellian Greenspyre</Name>
      <QuestId>
        <int>922</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoDown</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="9899.991" Y="987.6512" Z="1354.802" />
          <Vector3 X="9900.694" Y="990.4048" Z="1354.802" />
          <Vector3 X="9901.759" Y="993.7388" Z="1354.802" />
          <Vector3 X="9902.835" Y="997.1786" Z="1354.81" />
          <Vector3 X="9903.031" Y="1000.492" Z="1354.978" />
          <Vector3 X="9900.234" Y="1002.491" Z="1354.921" />
          <Vector3 X="9896.906" Y="1002.073" Z="1354.501" />
          <Vector3 X="9893.796" Y="1000.279" Z="1353.812" />
          <Vector3 X="9891.25" Y="998.0327" Z="1353.155" />
          <Vector3 X="9888.718" Y="995.6211" Z="1352.384" />
          <Vector3 X="9886.765" Y="992.7355" Z="1350.884" />
          <Vector3 X="9885.8" Y="989.4075" Z="1348.748" />
          <Vector3 X="9885.994" Y="985.9141" Z="1346.108" />
          <Vector3 X="9886.887" Y="982.5518" Z="1343.936" />
          <Vector3 X="9888.737" Y="979.5915" Z="1342.139" />
          <Vector3 X="9891.176" Y="976.9448" Z="1340.749" />
          <Vector3 X="9894.219" Y="975.6021" Z="1339.71" />
          <Vector3 X="9897.715" Y="975.7349" Z="1338.876" />
          <Vector3 X="9901.156" Y="976.3592" Z="1337.896" />
          <Vector3 X="9904.034" Y="977.0271" Z="1337.211" />
          <Vector3 X="9907.439" Y="977.8297" Z="1336.291" />
          <Vector3 X="9910.579" Y="979.3684" Z="1334.707" />
          <Vector3 X="9913.18" Y="981.7096" Z="1332.564" />
          <Vector3 X="9915.397" Y="984.3577" Z="1330.757" />
          <Vector3 X="9916.292" Y="987.739" Z="1329.408" />
          <Vector3 X="9917.129" Y="991.1372" Z="1328.305" />
          <Vector3 X="9917.878" Y="994.5524" Z="1328.354" />
          <Vector3 X="9917.349" Y="996.1927" Z="1328.39" />
          <Vector3 X="9915.77" Y="995.2122" Z="1328.375" />
          <Vector3 X="9912.616" Y="993.7108" Z="1328.428" />
          <Vector3 X="9909.395" Y="992.3528" Z="1328.403" />
          <Vector3 X="9905.938" Y="991.9161" Z="1328.529" />
          <Vector3 X="9903.005" Y="993.5815" Z="1328.515" />
          <Vector3 X="9901.868" Y="996.8359" Z="1328.517" />
          <Vector3 X="9902.441" Y="1000.22" Z="1328.226" />
          <Vector3 X="9905.307" Y="1001.875" Z="1327.49" />
          <Vector3 X="9908.015" Y="999.7973" Z="1325.942" />
          <Vector3 X="9908.655" Y="996.4287" Z="1324.387" />
          <Vector3 X="9906.263" Y="994.2537" Z="1322.626" />
          <Vector3 X="9903.518" Y="996.2059" Z="1320.906" />
          <Vector3 X="9902.416" Y="999.4084" Z="1319.214" />
          <Vector3 X="9905.254" Y="1000.394" Z="1317.666" />
          <Vector3 X="9908.28" Y="998.8705" Z="1315.76" />
          <Vector3 X="9908.409" Y="995.4998" Z="1313.924" />
          <Vector3 X="9906.386" Y="992.6631" Z="1313.832" />
          <Vector3 X="9903.904" Y="990.0485" Z="1313.832" />
          <Vector3 X="9901.478" Y="987.684" Z="1313.983" />
          <Vector3 X="9898.849" Y="985.2079" Z="1313.832" />
          <Vector3 X="9896.3" Y="982.8085" Z="1313.832" />
          <Vector3 X="9893.759" Y="980.4015" Z="1313.832" />
          <Vector3 X="9891.297" Y="977.7731" Z="1313.868" />
          <Vector3 X="9889.241" Y="975.0717" Z="1313.865" />
          <Vector3 X="9887.283" Y="972.0454" Z="1313.848" />
          <Vector3 X="9885.46" Y="969.1813" Z="1313.827" />
          <Vector3 X="9883.584" Y="966.2268" Z="1313.806" />
          <Vector3 X="9881.707" Y="963.2724" Z="1312.863" />
          <Vector3 X="9879.825" Y="960.3218" Z="1311.587" />
          <Vector3 X="9877.9" Y="957.399" Z="1309.389" />
          <Vector3 X="9877.48" Y="956.762" Z="1308.806" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoDownBags</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="9889.81" Y="988.852" Z="1327.535" />
          <Vector3 X="9890.967" Y="987.253" Z="1327.528" />
          <Vector3 X="9893.709" Y="983.7219" Z="1327.52" />
          <Vector3 X="9895.618" Y="982.6855" Z="1327.576" />
          <Vector3 X="9898.527" Y="982.3961" Z="1328" />
          <Vector3 X="9900.362" Y="982.6658" Z="1327.979" />
          <Vector3 X="9903.664" Y="983.4263" Z="1327.93" />
          <Vector3 X="9906.829" Y="985.1226" Z="1328.337" />
          <Vector3 X="9908.888" Y="987.5292" Z="1328.342" />
          <Vector3 X="9908.904" Y="989.7889" Z="1328.375" />
          <Vector3 X="9907.281" Y="991.6435" Z="1328.438" />
          <Vector3 X="9904.949" Y="992.5422" Z="1328.537" />
          <Vector3 X="9903.101" Y="994.1468" Z="1328.534" />
          <Vector3 X="9902.039" Y="996.3555" Z="1328.525" />
          <Vector3 X="9902.018" Y="998.8545" Z="1328.352" />
          <Vector3 X="9903.335" Y="1000.95" Z="1328.077" />
          <Vector3 X="9905.68" Y="1001.495" Z="1327.355" />
          <Vector3 X="9907.951" Y="1000.512" Z="1326.137" />
          <Vector3 X="9909.283" Y="998.4954" Z="1325.27" />
          <Vector3 X="9908.989" Y="996.0343" Z="1324.341" />
          <Vector3 X="9907.597" Y="994.0541" Z="1323.304" />
          <Vector3 X="9905.168" Y="993.6879" Z="1322.281" />
          <Vector3 X="9903.031" Y="994.7673" Z="1321.335" />
          <Vector3 X="9902.02" Y="996.7673" Z="1320.436" />
          <Vector3 X="9902.722" Y="999.165" Z="1319.288" />
          <Vector3 X="9904.337" Y="1000.95" Z="1317.975" />
          <Vector3 X="9906.782" Y="1001.026" Z="1316.93" />
          <Vector3 X="9908.495" Y="999.3192" Z="1315.875" />
          <Vector3 X="9909.099" Y="996.9095" Z="1314.75" />
          <Vector3 X="9907.855" Y="994.7996" Z="1313.832" />
          <Vector3 X="9906.559" Y="992.6619" Z="1313.832" />
          <Vector3 X="9905.468" Y="990.9498" Z="1313.832" />
          <Vector3 X="9903.665" Y="989.097" Z="1313.832" />
          <Vector3 X="9901.146" Y="986.6693" Z="1313.832" />
          <Vector3 X="9898.466" Y="984.4174" Z="1313.832" />
          <Vector3 X="9895.623" Y="982.1998" Z="1313.832" />
          <Vector3 X="9892.983" Y="980.068" Z="1313.832" />
          <Vector3 X="9890.599" Y="977.5129" Z="1313.868" />
          <Vector3 X="9888.46" Y="974.6135" Z="1313.863" />
          <Vector3 X="9886.582" Y="971.6602" Z="1313.844" />
          <Vector3 X="9884.66" Y="968.861" Z="1313.823" />
          <Vector3 X="9882.713" Y="965.9542" Z="1313.503" />
          <Vector3 X="9880.828" Y="963.0051" Z="1312.634" />
          <Vector3 X="9878.943" Y="960.056" Z="1311.224" />
          <Vector3 X="9877.059" Y="957.107" Z="1308.862" />
          <Vector3 X="9875.411" Y="954.5295" Z="1308.131" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoToBuyBags</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="9869.707" Y="946.8328" Z="1307.007" />
          <Vector3 X="9870.616" Y="948.0579" Z="1307.051" />
          <Vector3 X="9872.598" Y="950.8145" Z="1307.356" />
          <Vector3 X="9876.343" Y="956.1859" Z="1308.39" />
          <Vector3 X="9878.183" Y="959.1636" Z="1310.609" />
          <Vector3 X="9880.157" Y="962.1797" Z="1312.279" />
          <Vector3 X="9882.017" Y="965.0201" Z="1313.12" />
          <Vector3 X="9883.99" Y="968.0361" Z="1313.816" />
          <Vector3 X="9885.85" Y="970.8765" Z="1313.835" />
          <Vector3 X="9887.824" Y="973.8926" Z="1313.855" />
          <Vector3 X="9889.868" Y="976.6005" Z="1313.865" />
          <Vector3 X="9892.383" Y="979.0067" Z="1313.832" />
          <Vector3 X="9895.376" Y="980.8192" Z="1313.832" />
          <Vector3 X="9898.183" Y="982.906" Z="1313.832" />
          <Vector3 X="9900.725" Y="985.3113" Z="1313.832" />
          <Vector3 X="9903.224" Y="987.9091" Z="1313.832" />
          <Vector3 X="9905.491" Y="990.4357" Z="1313.832" />
          <Vector3 X="9907.831" Y="993.1779" Z="1313.832" />
          <Vector3 X="9909.905" Y="995.855" Z="1314.409" />
          <Vector3 X="9910.238" Y="998.0015" Z="1315.351" />
          <Vector3 X="9909.348" Y="999.7427" Z="1315.915" />
          <Vector3 X="9907.428" Y="1001.334" Z="1316.812" />
          <Vector3 X="9904.984" Y="1001.605" Z="1317.75" />
          <Vector3 X="9902.83" Y="1000.544" Z="1318.738" />
          <Vector3 X="9901.732" Y="998.3572" Z="1319.75" />
          <Vector3 X="9902.26" Y="995.9652" Z="1320.718" />
          <Vector3 X="9904.05" Y="994.2903" Z="1321.688" />
          <Vector3 X="9906.471" Y="993.9097" Z="1322.718" />
          <Vector3 X="9908.73" Y="994.9088" Z="1323.855" />
          <Vector3 X="9909.275" Y="997.2543" Z="1324.926" />
          <Vector3 X="9908.433" Y="999.5949" Z="1325.737" />
          <Vector3 X="9906.643" Y="1001.307" Z="1326.932" />
          <Vector3 X="9904.52" Y="1002.622" Z="1327.774" />
          <Vector3 X="9902.14" Y="1003.361" Z="1328.375" />
          <Vector3 X="9899.704" Y="1003.917" Z="1328.366" />
          <Vector3 X="9897.223" Y="1003.811" Z="1328.365" />
          <Vector3 X="9894.97" Y="1002.753" Z="1327.955" />
          <Vector3 X="9893.018" Y="1001.192" Z="1328.004" />
          <Vector3 X="9891.307" Y="999.3256" Z="1327.958" />
          <Vector3 X="9889.916" Y="997.2958" Z="1327.953" />
          <Vector3 X="9888.852" Y="995.0434" Z="1327.545" />
          <Vector3 X="9888.714" Y="992.5726" Z="1327.536" />
          <Vector3 X="9889.188" Y="990.1595" Z="1327.542" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoToDarnassus</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="10205.03" Y="695.1358" Z="1361.008" />
          <Vector3 X="10179.97" Y="693.756" Z="1361.582" />
          <Vector3 X="10145.32" Y="688.9322" Z="1360.235" />
          <Vector3 X="10114.89" Y="680.5098" Z="1352.851" />
          <Vector3 X="10106.49" Y="673.5294" Z="1349.825" />
          <Vector3 X="10083.44" Y="645.8241" Z="1337.397" />
          <Vector3 X="10063.77" Y="616.8763" Z="1324.445" />
          <Vector3 X="10045.5" Y="593.7004" Z="1316.24" />
          <Vector3 X="10037.08" Y="591.351" Z="1315.711" />
          <Vector3 X="10026.09" Y="591.5273" Z="1315.704" />
          <Vector3 X="10011.29" Y="595.4623" Z="1315.704" />
          <Vector3 X="10001.62" Y="604.2441" Z="1315.704" />
          <Vector3 X="9982.034" Y="633.2322" Z="1314.024" />
          <Vector3 X="9955.495" Y="655.6987" Z="1310.133" />
          <Vector3 X="9931.089" Y="682.1352" Z="1309.851" />
          <Vector3 X="9913.058" Y="710.6052" Z="1310.021" />
          <Vector3 X="9898.604" Y="742.4324" Z="1309.821" />
          <Vector3 X="9887.05" Y="763.5429" Z="1309.821" />
          <Vector3 X="9885.07" Y="775.3304" Z="1309.886" />
          <Vector3 X="9881.477" Y="810.1387" Z="1309.232" />
          <Vector3 X="9878.141" Y="844.9775" Z="1307.222" />
          <Vector3 X="9886.755" Y="879.8076" Z="1307.25" />
          <Vector3 X="9889.318" Y="913.3529" Z="1307.431" />
          <Vector3 X="9873.454" Y="945.4146" Z="1307.129" />
          <Vector3 X="9861.64" Y="956.7568" Z="1306.068" />
          <Vector3 X="9851.33" Y="972.2281" Z="1305.519" />
          <Vector3 X="9847.688" Y="1005.848" Z="1305.469" />
          <Vector3 X="9850.183" Y="1040.748" Z="1304.944" />
          <Vector3 X="9861.607" Y="1073.291" Z="1307.605" />
          <Vector3 X="9882.37" Y="1102.225" Z="1307.992" />
          <Vector3 X="9900.333" Y="1129.627" Z="1307.862" />
          <Vector3 X="9915.818" Y="1159.42" Z="1307.909" />
          <Vector3 X="9912.342" Y="1194.004" Z="1308.557" />
          <Vector3 X="9916.639" Y="1229.19" Z="1307.829" />
          <Vector3 X="9944.482" Y="1246.745" Z="1307.776" />
          <Vector3 X="9978.976" Y="1245.8" Z="1308.046" />
          <Vector3 X="9990.447" Y="1249.015" Z="1307.858" />
          <Vector3 X="10009.44" Y="1268.087" Z="1308.037" />
          <Vector3 X="10024.78" Y="1290.752" Z="1307.417" />
          <Vector3 X="10033.27" Y="1303.513" Z="1307.189" />
          <Vector3 X="10045.76" Y="1314.09" Z="1307.306" />
          <Vector3 X="10074.4" Y="1336.078" Z="1307.516" />
          <Vector3 X="10086.36" Y="1347.264" Z="1307.516" />
          <Vector3 X="10096.98" Y="1356.709" Z="1307.533" />
          <Vector3 X="10123.15" Y="1381.596" Z="1310.074" />
          <Vector3 X="10147.29" Y="1405.355" Z="1318.026" />
          <Vector3 X="10148.61" Y="1409.562" Z="1318.792" />
          <Vector3 X="10153.51" Y="1431.9" Z="1322.212" />
          <Vector3 X="10153.52" Y="1466.871" Z="1327.275" />
          <Vector3 X="10149.45" Y="1479.311" Z="1327.51" />
          <Vector3 X="10147.98" Y="1496.345" Z="1327.165" />
          <Vector3 X="10149.52" Y="1512.519" Z="1326.412" />
          <Vector3 X="10146.18" Y="1526.332" Z="1324.811" />
          <Vector3 X="10139.71" Y="1535.013" Z="1323.385" />
          <Vector3 X="10127.22" Y="1543.895" Z="1321.628" />
          <Vector3 X="10112.17" Y="1554.861" Z="1323.792" />
          <Vector3 X="10091.71" Y="1579.07" Z="1321.274" />
          <Vector3 X="10085.92" Y="1594.312" Z="1320.457" />
          <Vector3 X="10080.9" Y="1628.77" Z="1320.508" />
          <Vector3 X="10083.72" Y="1652.672" Z="1322.996" />
          <Vector3 X="10093.08" Y="1677.083" Z="1326.983" />
          <Vector3 X="10103.54" Y="1709.304" Z="1329.753" />
          <Vector3 X="10109.17" Y="1743.824" Z="1334.248" />
          <Vector3 X="10104.16" Y="1774.721" Z="1333.873" />
          <Vector3 X="10094.64" Y="1786.737" Z="1331.208" />
          <Vector3 X="10066.69" Y="1807.09" Z="1326.375" />
          <Vector3 X="10033.78" Y="1821.846" Z="1320.085" />
          <Vector3 X="10008.01" Y="1843.708" Z="1318.747" />
          <Vector3 X="9984.228" Y="1870.829" Z="1318.596" />
          <Vector3 X="9983.941" Y="1908.068" Z="1321.741" />
          <Vector3 X="9983.947" Y="1941.946" Z="1324.887" />
          <Vector3 X="9985.972" Y="1977.998" Z="1327.063" />
          <Vector3 X="9985.896" Y="2012.933" Z="1328.089" />
          <Vector3 X="9972.837" Y="2045.026" Z="1328.046" />
          <Vector3 X="9953.981" Y="2074.305" Z="1327.739" />
          <Vector3 X="9952.538" Y="2108.002" Z="1327.73" />
          <Vector3 X="9952.601" Y="2144.121" Z="1327.661" />
          <Vector3 X="9953.074" Y="2177.998" Z="1327.458" />
          <Vector3 X="9953.547" Y="2214.036" Z="1329.71" />
          <Vector3 X="9953.038" Y="2247.895" Z="1334.621" />
          <Vector3 X="9953.08" Y="2284.015" Z="1341.395" />
          <Vector3 X="9952.902" Y="2317.894" Z="1336.552" />
          <Vector3 X="9952.447" Y="2352.891" Z="1330.679" />
          <Vector3 X="9951.982" Y="2387.888" Z="1329.274" />
          <Vector3 X="9951.148" Y="2422.878" Z="1326.07" />
          <Vector3 X="9948.749" Y="2457.767" Z="1320.263" />
          <Vector3 X="9934.705" Y="2489.265" Z="1317.354" />
          <Vector3 X="9923.141" Y="2505.176" Z="1318.002" />
          <Vector3 X="9915.678" Y="2516.016" Z="1317.035" />
          <Vector3 X="9916.894" Y="2532.007" Z="1317.041" />
          <Vector3 X="9921.901" Y="2544.159" Z="1317.059" />
          <Vector3 X="9935.034" Y="2551.822" Z="1317.192" />
          <Vector3 X="9945.318" Y="2557.866" Z="1316.245" />
          <Vector3 X="9947.473" Y="2564.647" Z="1317.14" />
          <Vector3 X="9947.143" Y="2575.632" Z="1318.325" />
          <Vector3 X="9946.849" Y="2585.427" Z="1316.1" />
          <Vector3 X="9946.696" Y="2595.25" Z="1316.202" />
          <Vector3 X="9946.708" Y="2605.041" Z="1316.188" />
          <Vector3 X="9946.713" Y="2609.451" Z="1316.254" />
          <Vector3 X="9946.722" Y="2617.151" Z="1316.557" />
          <Vector3 X="9946.722" Y="2625.151" Z="1316.557" />
          <Vector3 X="8786.36" Y="967.445" Z="30.197" />
          <Vector3 X="8786.36" Y="967.445" Z="30.197" />
          <Vector3 X="8772.411" Y="961.2587" Z="30.14088" />
          <Vector3 X="8739.147" Y="947.1824" Z="21.42322" />
          <Vector3 X="8712.889" Y="939.8173" Z="14.44555" />
          <Vector3 X="8688.763" Y="926.9307" Z="15.53399" />
          <Vector3 X="8686.579" Y="894.8465" Z="22.19754" />
          <Vector3 X="8683.023" Y="885.8737" Z="22.79432" />
          <Vector3 X="8658.593" Y="877.2725" Z="22.23314" />
          <Vector3 X="8652" Y="869.7061" Z="23.03034" />
          <Vector3 X="8646.116" Y="857.9426" Z="22.31606" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoToDarnassusQuest</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="9882.393" Y="963.5565" Z="1312.961" />
          <Vector3 X="9874.386" Y="951.997" Z="1307.723" />
          <Vector3 X="9868.943" Y="950.9478" Z="1306.885" />
          <Vector3 X="9860.809" Y="956.9898" Z="1306.07" />
          <Vector3 X="9854.968" Y="967.7167" Z="1305.52" />
          <Vector3 X="9849.042" Y="986.1622" Z="1305.261" />
          <Vector3 X="9846.438" Y="1009.629" Z="1305.446" />
          <Vector3 X="9848.991" Y="1034.782" Z="1304.866" />
          <Vector3 X="9852.813" Y="1058.168" Z="1306.097" />
          <Vector3 X="9865.162" Y="1079.967" Z="1307.992" />
          <Vector3 X="9879.335" Y="1098.959" Z="1307.992" />
          <Vector3 X="9891.354" Y="1121.062" Z="1307.857" />
          <Vector3 X="9908.771" Y="1137.133" Z="1308.05" />
          <Vector3 X="9915.794" Y="1159.675" Z="1307.913" />
          <Vector3 X="9912.842" Y="1183.993" Z="1307.977" />
          <Vector3 X="9910.57" Y="1209.125" Z="1308.148" />
          <Vector3 X="9920.456" Y="1230.428" Z="1307.823" />
          <Vector3 X="9939.814" Y="1243.139" Z="1307.847" />
          <Vector3 X="9964.277" Y="1242.522" Z="1307.857" />
          <Vector3 X="9988.217" Y="1246.363" Z="1307.858" />
          <Vector3 X="10006.69" Y="1261.821" Z="1307.882" />
          <Vector3 X="10019.57" Y="1282.664" Z="1307.635" />
          <Vector3 X="10031.86" Y="1303.845" Z="1307.205" />
          <Vector3 X="10051.28" Y="1318.167" Z="1307.37" />
          <Vector3 X="10071.11" Y="1333.304" Z="1307.515" />
          <Vector3 X="10096.04" Y="1357.868" Z="1307.552" />
          <Vector3 X="10122.45" Y="1380.771" Z="1309.852" />
          <Vector3 X="10148.09" Y="1404.33" Z="1317.973" />
          <Vector3 X="10153.04" Y="1438.767" Z="1323.188" />
          <Vector3 X="10151.6" Y="1473.599" Z="1327.509" />
          <Vector3 X="10146.93" Y="1508.011" Z="1326.599" />
          <Vector3 X="10137.73" Y="1540.219" Z="1322.538" />
          <Vector3 X="10108.69" Y="1558.355" Z="1324.178" />
          <Vector3 X="10088.04" Y="1586.547" Z="1320.88" />
          <Vector3 X="10079.9" Y="1620.329" Z="1320.172" />
          <Vector3 X="10082.38" Y="1654.987" Z="1323.243" />
          <Vector3 X="10094.69" Y="1687.701" Z="1328.119" />
          <Vector3 X="10106.73" Y="1720.509" Z="1331.187" />
          <Vector3 X="10108.54" Y="1755.205" Z="1335.134" />
          <Vector3 X="10092.39" Y="1785.529" Z="1331.137" />
          <Vector3 X="10065.29" Y="1807.537" Z="1326.191" />
          <Vector3 X="10033.26" Y="1821.628" Z="1320.044" />
          <Vector3 X="10005.72" Y="1842.778" Z="1318.674" />
          <Vector3 X="9984.17" Y="1870.144" Z="1318.505" />
          <Vector3 X="9979.278" Y="1904.251" Z="1321.14" />
          <Vector3 X="9983.822" Y="1938.88" Z="1324.714" />
          <Vector3 X="9984.461" Y="1971.687" Z="1326.904" />
          <Vector3 X="9984.849" Y="2001.121" Z="1328.088" />
          <Vector3 X="9977.987" Y="2034.922" Z="1328.053" />
          <Vector3 X="9958.665" Y="2064.104" Z="1327.931" />
          <Vector3 X="9950.88" Y="2097.615" Z="1327.756" />
          <Vector3 X="9952.37" Y="2132.537" Z="1327.657" />
          <Vector3 X="9951.823" Y="2167.53" Z="1327.459" />
          <Vector3 X="9951.991" Y="2202.504" Z="1328.403" />
          <Vector3 X="9952.35" Y="2237.5" Z="1332.848" />
          <Vector3 X="9952.708" Y="2272.498" Z="1341.395" />
          <Vector3 X="9952.388" Y="2307.491" Z="1336.552" />
          <Vector3 X="9951.059" Y="2342.466" Z="1330.775" />
          <Vector3 X="9949.775" Y="2377.442" Z="1329.893" />
          <Vector3 X="9949.521" Y="2412.439" Z="1327.381" />
          <Vector3 X="9949.582" Y="2447.439" Z="1322.335" />
          <Vector3 X="9950.054" Y="2482.415" Z="1316.219" />
          <Vector3 X="9951.659" Y="2490.968" Z="1316.813" />
          <Vector3 X="9969.588" Y="2513.017" Z="1317.763" />
          <Vector3 X="9978.352" Y="2517.552" Z="1317.144" />
          <Vector3 X="9985.664" Y="2519.715" Z="1316.41" />
          <Vector3 X="10003.29" Y="2511.08" Z="1316.879" />
          <Vector3 X="10025.93" Y="2502.941" Z="1318.399" />
          <Vector3 X="10038.72" Y="2500.044" Z="1318.426" />
          <Vector3 X="10059.31" Y="2514.122" Z="1319.823" />
          <Vector3 X="10074.64" Y="2522.768" Z="1319.524" />
          <Vector3 X="10082.31" Y="2528.376" Z="1317.407" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoToDarnassusTaxi</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="8786.36" Y="967.445" Z="30.197" />
          <Vector3 X="8786.36" Y="967.445" Z="30.197" />
          <Vector3 X="8772.411" Y="961.2587" Z="30.14088" />
          <Vector3 X="8739.147" Y="947.1824" Z="21.42322" />
          <Vector3 X="8712.889" Y="939.8173" Z="14.44555" />
          <Vector3 X="8688.763" Y="926.9307" Z="15.53399" />
          <Vector3 X="8686.579" Y="894.8465" Z="22.19754" />
          <Vector3 X="8683.023" Y="885.8737" Z="22.79432" />
          <Vector3 X="8658.593" Y="877.2725" Z="22.23314" />
          <Vector3 X="8652" Y="869.7061" Z="23.03034" />
          <Vector3 X="8646.116" Y="857.9426" Z="22.31606" />
        </Path>
        <IsCompleteWhenAtLastPath>false</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(2158) ||  new Vector3(8646.116f, 857.9426f, 22.31606f).DistanceTo(ObjectManager.Me.Position) &lt; 10);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoToIronforge</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-3749.666" Y="-682.0371" Z="8.846586" />
          <Vector3 X="-3739.833" Y="-698.4639" Z="8.511642" />
          <Vector3 X="-3735.258" Y="-714.9772" Z="8.292251" />
          <Vector3 X="-3750.084" Y="-726.8371" Z="8.240173" />
          <Vector3 X="-3760.007" Y="-741.0065" Z="8.003766" />
          <Vector3 X="-3766.912" Y="-757.0828" Z="7.871162" />
          <Vector3 X="-3772.769" Y="-773.5726" Z="8.119111" />
          <Vector3 X="-3778.365" Y="-790.1524" Z="8.357823" />
          <Vector3 X="-3783.051" Y="-807.0084" Z="8.797466" />
          <Vector3 X="-3784.762" Y="-824.9098" Z="9.893581" />
          <Vector3 X="-3778.244" Y="-840.9766" Z="9.89872" />
          <Vector3 X="-3767.929" Y="-854.3509" Z="9.89872" />
          <Vector3 X="-3753.047" Y="-863.3511" Z="9.899632" />
          <Vector3 X="-3736.15" Y="-867.5963" Z="9.899462" />
          <Vector3 X="-3718.746" Y="-866.3176" Z="9.899462" />
          <Vector3 X="-3702.401" Y="-860.3505" Z="9.922202" />
          <Vector3 X="-3688.402" Y="-849.89" Z="9.954048" />
          <Vector3 X="-3674.184" Y="-838.7847" Z="9.900249" />
          <Vector3 X="-3657.681" Y="-838.0452" Z="9.900249" />
          <Vector3 X="-3641.83" Y="-845.405" Z="8.88525" />
          <Vector3 X="-3624.728" Y="-854.2427" Z="11.24707" />
          <Vector3 X="-3602.61" Y="-864.7767" Z="12.85554" />
          <Vector3 X="-3580.663" Y="-875.661" Z="12.97281" />
          <Vector3 X="-3559.672" Y="-886.7932" Z="11.96213" />
          <Vector3 X="-3538.264" Y="-900.1518" Z="8.886825" />
          <Vector3 X="-3517.048" Y="-912.4039" Z="8.866381" />
          <Vector3 X="-3495.778" Y="-924.5618" Z="8.866381" />
          <Vector3 X="-3473.822" Y="-937.1013" Z="8.866381" />
          <Vector3 X="-3453.747" Y="-949.6635" Z="8.866381" />
          <Vector3 X="-3436.811" Y="-967.3135" Z="8.866381" />
          <Vector3 X="-3421.3" Y="-986.2762" Z="8.866381" />
          <Vector3 X="-3406.88" Y="-1005.974" Z="9.597326" />
          <Vector3 X="-3392.938" Y="-1026.111" Z="8.74136" />
          <Vector3 X="-3381.354" Y="-1046.86" Z="9.146437" />
          <Vector3 X="-3368.489" Y="-1068.562" Z="9.146267" />
          <Vector3 X="-3358.443" Y="-1090.678" Z="9.146267" />
          <Vector3 X="-3354.307" Y="-1114.819" Z="9.146267" />
          <Vector3 X="-3351.348" Y="-1139.139" Z="9.146267" />
          <Vector3 X="-3348.367" Y="-1164.247" Z="9.146156" />
          <Vector3 X="-3345.792" Y="-1188.608" Z="9.268074" />
          <Vector3 X="-3344.583" Y="-1212.29" Z="9.180069" />
          <Vector3 X="-3343.08" Y="-1237.525" Z="9.146188" />
          <Vector3 X="-3340.608" Y="-1261.108" Z="9.146252" />
          <Vector3 X="-3342.049" Y="-1286.295" Z="7.844742" />
          <Vector3 X="-3346.257" Y="-1309.634" Z="8.105723" />
          <Vector3 X="-3347.389" Y="-1334.784" Z="9.14663" />
          <Vector3 X="-3341.75" Y="-1357.717" Z="9.14663" />
          <Vector3 X="-3332.069" Y="-1380.223" Z="9.14663" />
          <Vector3 X="-3322.346" Y="-1402.7" Z="9.14663" />
          <Vector3 X="-3317.914" Y="-1426.739" Z="9.14663" />
          <Vector3 X="-3315.846" Y="-1451.151" Z="9.15078" />
          <Vector3 X="-3313.857" Y="-1475.57" Z="9.147363" />
          <Vector3 X="-3309.208" Y="-1499.504" Z="9.151477" />
          <Vector3 X="-3298.248" Y="-1521.399" Z="9.146234" />
          <Vector3 X="-3286.853" Y="-1543.081" Z="9.146234" />
          <Vector3 X="-3280.53" Y="-1566.7" Z="9.146234" />
          <Vector3 X="-3274.656" Y="-1590.469" Z="9.180602" />
          <Vector3 X="-3265.166" Y="-1612.785" Z="9.17912" />
          <Vector3 X="-3253.511" Y="-1634.162" Z="9.146287" />
          <Vector3 X="-3248.32" Y="-1658.9" Z="9.167951" />
          <Vector3 X="-3242.756" Y="-1681.939" Z="9.146167" />
          <Vector3 X="-3234.069" Y="-1705.679" Z="9.146167" />
          <Vector3 X="-3225.939" Y="-1727.954" Z="9.158839" />
          <Vector3 X="-3219.307" Y="-1751.509" Z="9.146078" />
          <Vector3 X="-3215.642" Y="-1772.282" Z="9.162431" />
          <Vector3 X="-3214.873" Y="-1796.034" Z="9.146048" />
          <Vector3 X="-3206.931" Y="-1819.674" Z="9.234398" />
          <Vector3 X="-3199.98" Y="-1843.091" Z="9.985558" />
          <Vector3 X="-3195.071" Y="-1867.094" Z="10.15763" />
          <Vector3 X="-3189.409" Y="-1890.885" Z="14.43094" />
          <Vector3 X="-3185.05" Y="-1914.993" Z="14.28622" />
          <Vector3 X="-3183.243" Y="-1939.408" Z="13.49342" />
          <Vector3 X="-3183.383" Y="-1964.663" Z="15.18088" />
          <Vector3 X="-3185.955" Y="-1989.024" Z="17.06736" />
          <Vector3 X="-3190.003" Y="-2012.392" Z="15.89806" />
          <Vector3 X="-3192.923" Y="-2037.487" Z="15.82863" />
          <Vector3 X="-3194.956" Y="-2061.116" Z="16.46419" />
          <Vector3 X="-3197.343" Y="-2086.287" Z="16.37236" />
          <Vector3 X="-3199.532" Y="-2109.854" Z="16.69751" />
          <Vector3 X="-3201.902" Y="-2135.027" Z="17.50962" />
          <Vector3 X="-3204.141" Y="-2158.637" Z="17.4067" />
          <Vector3 X="-3206.597" Y="-2183.8" Z="15.93807" />
          <Vector3 X="-3211.606" Y="-2206.951" Z="15.67718" />
          <Vector3 X="-3219.681" Y="-2230.081" Z="15.80503" />
          <Vector3 X="-3225.553" Y="-2253.826" Z="15.80546" />
          <Vector3 X="-3230.489" Y="-2277.819" Z="15.80546" />
          <Vector3 X="-3234.186" Y="-2302.038" Z="15.80546" />
          <Vector3 X="-3236.057" Y="-2326.454" Z="15.80546" />
          <Vector3 X="-3237.066" Y="-2350.933" Z="15.94807" />
          <Vector3 X="-3238.441" Y="-2375.394" Z="16.70253" />
          <Vector3 X="-3240.075" Y="-2399.837" Z="17.00434" />
          <Vector3 X="-3242.531" Y="-2417.301" Z="16.78891" />
          <Vector3 X="-3243.718" Y="-2424.057" Z="17.53365" />
          <Vector3 X="-3249.634" Y="-2443.798" Z="17.41567" />
          <Vector3 X="-3255.98" Y="-2461.042" Z="16.5553" />
          <Vector3 X="-3265.956" Y="-2483.402" Z="19.87915" />
          <Vector3 X="-3278.245" Y="-2504.592" Z="18.20842" />
          <Vector3 X="-3294.399" Y="-2526.787" Z="17.35856" />
          <Vector3 X="-3311.646" Y="-2545.176" Z="15.99186" />
          <Vector3 X="-3332.216" Y="-2556.858" Z="17.41994" />
          <Vector3 X="-3355.124" Y="-2565.536" Z="15.92506" />
          <Vector3 X="-3374.952" Y="-2579.752" Z="15.96071" />
          <Vector3 X="-3393.706" Y="-2595.517" Z="15.9657" />
          <Vector3 X="-3414.752" Y="-2607.917" Z="15.96258" />
          <Vector3 X="-3436.916" Y="-2618.358" Z="15.97297" />
          <Vector3 X="-3459.294" Y="-2628.332" Z="15.95321" />
          <Vector3 X="-3481.624" Y="-2638.412" Z="15.95321" />
          <Vector3 X="-3504.179" Y="-2647.967" Z="15.93787" />
          <Vector3 X="-3527.117" Y="-2656.576" Z="15.95195" />
          <Vector3 X="-3549.788" Y="-2667.415" Z="15.94826" />
          <Vector3 X="-3567.27" Y="-2683.438" Z="16.86121" />
          <Vector3 X="-3586.33" Y="-2698.803" Z="19.05852" />
          <Vector3 X="-3607.192" Y="-2711.647" Z="19.05702" />
          <Vector3 X="-3628.713" Y="-2723.305" Z="18.69526" />
          <Vector3 X="-3649.285" Y="-2736.426" Z="18.7826" />
          <Vector3 X="-3669.292" Y="-2750.522" Z="19.16085" />
          <Vector3 X="-3692.421" Y="-2758.406" Z="18.73987" />
          <Vector3 X="-3714.043" Y="-2769.486" Z="17.71238" />
          <Vector3 X="-3734.963" Y="-2781.975" Z="17.82164" />
          <Vector3 X="-3758.56" Y="-2788.27" Z="17.81292" />
          <Vector3 X="-3783.039" Y="-2789.211" Z="17.81292" />
          <Vector3 X="-3807.531" Y="-2788.841" Z="17.81292" />
          <Vector3 X="-3832.787" Y="-2789.396" Z="17.81292" />
          <Vector3 X="-3856.385" Y="-2791.738" Z="17.91263" />
          <Vector3 X="-3879.356" Y="-2801.988" Z="18.02373" />
          <Vector3 X="-3899.968" Y="-2813.705" Z="18.0145" />
          <Vector3 X="-3923.46" Y="-2820.274" Z="18.11328" />
          <Vector3 X="-3947.908" Y="-2819.796" Z="17.98936" />
          <Vector3 X="-3973.013" Y="-2816.792" Z="17.9254" />
          <Vector3 X="-3996.157" Y="-2811.684" Z="18.02832" />
          <Vector3 X="-4019.245" Y="-2801.729" Z="17.87032" />
          <Vector3 X="-4038.64" Y="-2788.092" Z="17.82081" />
          <Vector3 X="-4056.155" Y="-2771.05" Z="17.8658" />
          <Vector3 X="-4068.395" Y="-2749.869" Z="18.27296" />
          <Vector3 X="-4077.638" Y="-2726.361" Z="20.47903" />
          <Vector3 X="-4084.347" Y="-2703.62" Z="25.39418" />
          <Vector3 X="-4087.067" Y="-2678.562" Z="31.48162" />
          <Vector3 X="-4087.336" Y="-2654.849" Z="37.30541" />
          <Vector3 X="-4086.903" Y="-2631.088" Z="42.36572" />
          <Vector3 X="-4087.502" Y="-2605.9" Z="44.69085" />
          <Vector3 X="-4088.6" Y="-2581.426" Z="47.57191" />
          <Vector3 X="-4089.319" Y="-2556.936" Z="56.73973" />
          <Vector3 X="-4089.995" Y="-2532.446" Z="66.44753" />
          <Vector3 X="-4090.692" Y="-2507.956" Z="73.5966" />
          <Vector3 X="-4091.55" Y="-2483.471" Z="87.44116" />
          <Vector3 X="-4092.408" Y="-2458.986" Z="96.00874" />
          <Vector3 X="-4093.058" Y="-2434.496" Z="98.4631" />
          <Vector3 X="-4092.09" Y="-2420.808" Z="97.90629" />
          <Vector3 X="-4086.901" Y="-2409.739" Z="99.57826" />
          <Vector3 X="-4082.849" Y="-2406.259" Z="100.3456" />
          <Vector3 X="-4062.669" Y="-2392.508" Z="106.0925" />
          <Vector3 X="-4041.065" Y="-2381.069" Z="111.9546" />
          <Vector3 X="-4023.195" Y="-2374.204" Z="116.7384" />
          <Vector3 X="-4006.719" Y="-2382.818" Z="118.188" />
          <Vector3 X="-4006.695" Y="-2399.312" Z="121.9764" />
          <Vector3 X="-4011.779" Y="-2405.086" Z="124.8345" />
          <Vector3 X="-4017.431" Y="-2411.337" Z="128.1581" />
          <Vector3 X="-4030.802" Y="-2425.058" Z="135.9223" />
          <Vector3 X="-4033.794" Y="-2427.436" Z="137.4974" />
          <Vector3 X="-4052.012" Y="-2443.808" Z="147.2476" />
          <Vector3 X="-4070.333" Y="-2460.057" Z="154.4648" />
          <Vector3 X="-4093.289" Y="-2467.9" Z="157.581" />
          <Vector3 X="-4116.742" Y="-2464.431" Z="158.3324" />
          <Vector3 X="-4141.848" Y="-2463.201" Z="160.252" />
          <Vector3 X="-4167.101" Y="-2463.404" Z="165.77" />
          <Vector3 X="-4190.813" Y="-2463.804" Z="176.5421" />
          <Vector3 X="-4215.309" Y="-2464.255" Z="183.7616" />
          <Vector3 X="-4239.805" Y="-2464.664" Z="194.0986" />
          <Vector3 X="-4264.302" Y="-2465.056" Z="207.2748" />
          <Vector3 X="-4288.799" Y="-2465.424" Z="212.3331" />
          <Vector3 X="-4297.223" Y="-2465.264" Z="213.1903" />
          <Vector3 X="-4307.155" Y="-2464.727" Z="213.1903" />
          <Vector3 X="-4310.879" Y="-2467.385" Z="212.2026" />
          <Vector3 X="-4314.688" Y="-2471.199" Z="212.2231" />
          <Vector3 X="-4322.2" Y="-2480.875" Z="216.8299" />
          <Vector3 X="-4328.964" Y="-2489.194" Z="223.3905" />
          <Vector3 X="-4335.65" Y="-2493" Z="230.6969" />
          <Vector3 X="-4342.779" Y="-2493.725" Z="233.9853" />
          <Vector3 X="-4348.095" Y="-2494.242" Z="232.2798" />
          <Vector3 X="-4365.874" Y="-2489.603" Z="222.6284" />
          <Vector3 X="-4376.511" Y="-2485.845" Z="224.3054" />
          <Vector3 X="-4380.98" Y="-2482.919" Z="225.1426" />
          <Vector3 X="-4388.371" Y="-2478.988" Z="221.8381" />
          <Vector3 X="-4410.233" Y="-2467.93" Z="218.8287" />
          <Vector3 X="-4425.788" Y="-2465.062" Z="214.5677" />
          <Vector3 X="-4425.757" Y="-2483.21" Z="212.8849" />
          <Vector3 X="-4427.188" Y="-2503.048" Z="214.0768" />
          <Vector3 X="-4430.064" Y="-2526.638" Z="218.2663" />
          <Vector3 X="-4433.499" Y="-2551.638" Z="229.5982" />
          <Vector3 X="-4436.838" Y="-2575.167" Z="237.0165" />
          <Vector3 X="-4440.397" Y="-2600.15" Z="246.879" />
          <Vector3 X="-4443.788" Y="-2624.414" Z="260.3265" />
          <Vector3 X="-4447.183" Y="-2648.678" Z="266.1148" />
          <Vector3 X="-4450.27" Y="-2669.916" Z="266.6574" />
          <Vector3 X="-4460.595" Y="-2680.107" Z="266.033" />
          <Vector3 X="-4483.212" Y="-2689.251" Z="266.033" />
          <Vector3 X="-4507.114" Y="-2691.711" Z="267.5629" />
          <Vector3 X="-4531.582" Y="-2692.923" Z="271.7214" />
          <Vector3 X="-4555.322" Y="-2694.021" Z="282.3385" />
          <Vector3 X="-4580.539" Y="-2694.978" Z="290.5218" />
          <Vector3 X="-4605.79" Y="-2696.251" Z="300.3142" />
          <Vector3 X="-4629.476" Y="-2697.454" Z="313.4135" />
          <Vector3 X="-4653.946" Y="-2698.656" Z="319.5775" />
          <Vector3 X="-4678.438" Y="-2699.303" Z="319.5213" />
          <Vector3 X="-4702.938" Y="-2699.229" Z="318.7608" />
          <Vector3 X="-4719.771" Y="-2699.08" Z="320.8267" />
          <Vector3 X="-4738.465" Y="-2702.947" Z="323.5048" />
          <Vector3 X="-4762.282" Y="-2708.683" Z="326.2152" />
          <Vector3 X="-4786.682" Y="-2710.488" Z="326.3287" />
          <Vector3 X="-4811.953" Y="-2710.858" Z="327.7158" />
          <Vector3 X="-4835.625" Y="-2711.784" Z="328.9484" />
          <Vector3 X="-4859.558" Y="-2717.016" Z="329.1137" />
          <Vector3 X="-4883.24" Y="-2723.279" Z="328.9681" />
          <Vector3 X="-4895.777" Y="-2726.829" Z="328.9401" />
          <Vector3 X="-4903.372" Y="-2726.065" Z="329.3188" />
          <Vector3 X="-4904.564" Y="-2721.639" Z="329.5801" />
          <Vector3 X="-4902.758" Y="-2716.613" Z="330.0533" />
          <Vector3 X="-4889.995" Y="-2702.324" Z="332.6103" />
          <Vector3 X="-4875.269" Y="-2682.808" Z="336.0273" />
          <Vector3 X="-4862.614" Y="-2662.752" Z="340.5987" />
          <Vector3 X="-4849.604" Y="-2640.316" Z="345.2411" />
          <Vector3 X="-4832.693" Y="-2610.958" Z="350.9301" />
          <Vector3 X="-4816.878" Y="-2578.492" Z="355.058" />
          <Vector3 X="-4803.108" Y="-2547.561" Z="355.3117" />
          <Vector3 X="-4802.003" Y="-2536.941" Z="354.2478" />
          <Vector3 X="-4807.342" Y="-2517.183" Z="355.4698" />
          <Vector3 X="-4814.213" Y="-2504.746" Z="356.0545" />
          <Vector3 X="-4831.046" Y="-2474.062" Z="364.6638" />
          <Vector3 X="-4848.038" Y="-2443.463" Z="378.1675" />
          <Vector3 X="-4865.029" Y="-2412.865" Z="392.5726" />
          <Vector3 X="-4881.858" Y="-2382.177" Z="406.8808" />
          <Vector3 X="-4898.063" Y="-2351.155" Z="408.6232" />
          <Vector3 X="-4901.297" Y="-2345.426" Z="408.6322" />
          <Vector3 X="-4930.145" Y="-2335.253" Z="408.6228" />
          <Vector3 X="-4962.268" Y="-2321.578" Z="408.6885" />
          <Vector3 X="-4995.437" Y="-2310.747" Z="406.252" />
          <Vector3 X="-5026.267" Y="-2295.392" Z="402.2576" />
          <Vector3 X="-5056.915" Y="-2279.58" Z="400.6532" />
          <Vector3 X="-5090.568" Y="-2285.371" Z="400.1234" />
          <Vector3 X="-5121.521" Y="-2301.693" Z="400.1315" />
          <Vector3 X="-5154.854" Y="-2309.279" Z="400.3911" />
          <Vector3 X="-5187.456" Y="-2297.51" Z="400.3402" />
          <Vector3 X="-5212.935" Y="-2273.709" Z="402.1673" />
          <Vector3 X="-5235.955" Y="-2247.392" Z="409.7443" />
          <Vector3 X="-5258.589" Y="-2220.696" Z="423.3752" />
          <Vector3 X="-5281.594" Y="-2194.32" Z="425.3114" />
          <Vector3 X="-5285.216" Y="-2190.235" Z="425.2035" />
          <Vector3 X="-5293.794" Y="-2163.963" Z="421.1229" />
          <Vector3 X="-5304.925" Y="-2154.222" Z="420.9435" />
          <Vector3 X="-5322.349" Y="-2155.852" Z="419.6631" />
          <Vector3 X="-5351.794" Y="-2153.556" Z="415.6057" />
          <Vector3 X="-5361.472" Y="-2149.521" Z="413.5608" />
          <Vector3 X="-5389.612" Y="-2126.894" Z="401.9858" />
          <Vector3 X="-5414.604" Y="-2104.038" Z="399.3804" />
          <Vector3 X="-5446.607" Y="-2088.839" Z="399.3756" />
          <Vector3 X="-5475.262" Y="-2071.365" Z="399.3756" />
          <Vector3 X="-5499.219" Y="-2046.021" Z="399.3756" />
          <Vector3 X="-5511.057" Y="-2013.554" Z="399.3756" />
          <Vector3 X="-5509.247" Y="-1978.699" Z="399.3756" />
          <Vector3 X="-5500.238" Y="-1943.843" Z="399.3744" />
          <Vector3 X="-5492.65" Y="-1911.239" Z="397.1031" />
          <Vector3 X="-5505.348" Y="-1879.008" Z="397.1265" />
          <Vector3 X="-5513.251" Y="-1845.362" Z="397.1029" />
          <Vector3 X="-5511.834" Y="-1810.395" Z="397.1029" />
          <Vector3 X="-5510.857" Y="-1775.446" Z="397.3249" />
          <Vector3 X="-5514.133" Y="-1740.6" Z="397.1127" />
          <Vector3 X="-5519.743" Y="-1706.232" Z="396.4707" />
          <Vector3 X="-5541.344" Y="-1679.042" Z="392.3386" />
          <Vector3 X="-5548.115" Y="-1644.766" Z="391.7757" />
          <Vector3 X="-5556.939" Y="-1610.922" Z="391.7878" />
          <Vector3 X="-5558.656" Y="-1576.006" Z="396.9471" />
          <Vector3 X="-5576.576" Y="-1549.692" Z="399.1436" />
          <Vector3 X="-5589.477" Y="-1547.093" Z="399.1364" />
          <Vector3 X="-5603.73" Y="-1537.634" Z="399.1395" />
          <Vector3 X="-5611.629" Y="-1523.645" Z="399.0306" />
          <Vector3 X="-5613.866" Y="-1502.155" Z="399.0689" />
          <Vector3 X="-5612.153" Y="-1467.214" Z="399.145" />
          <Vector3 X="-5614.4" Y="-1442.238" Z="398.7811" />
          <Vector3 X="-5625.283" Y="-1428.534" Z="398.1082" />
          <Vector3 X="-5646.942" Y="-1416.257" Z="398.5072" />
          <Vector3 X="-5652.029" Y="-1400.65" Z="397.8392" />
          <Vector3 X="-5650.578" Y="-1387.641" Z="397.2875" />
          <Vector3 X="-5650.587" Y="-1368.021" Z="396.7477" />
          <Vector3 X="-5664.507" Y="-1347.098" Z="395.4827" />
          <Vector3 X="-5677.312" Y="-1328.041" Z="393.6915" />
          <Vector3 X="-5678.638" Y="-1308.416" Z="392.0721" />
          <Vector3 X="-5679.898" Y="-1272.329" Z="390.1397" />
          <Vector3 X="-5681.958" Y="-1238.595" Z="388.9122" />
          <Vector3 X="-5686.741" Y="-1203.927" Z="386.6657" />
          <Vector3 X="-5686.704" Y="-1173.37" Z="384.8844" />
          <Vector3 X="-5684.237" Y="-1167.271" Z="384.723" />
          <Vector3 X="-5670.559" Y="-1153.237" Z="384.9773" />
          <Vector3 X="-5654.36" Y="-1144.07" Z="386.4919" />
          <Vector3 X="-5650.696" Y="-1136.128" Z="387.6026" />
          <Vector3 X="-5631.501" Y="-1106.87" Z="391.1001" />
          <Vector3 X="-5625.549" Y="-1099.085" Z="392.1259" />
          <Vector3 X="-5619.912" Y="-1085.171" Z="393.1581" />
          <Vector3 X="-5618.92" Y="-1050.242" Z="393.0979" />
          <Vector3 X="-5600.977" Y="-1021.707" Z="393.2305" />
          <Vector3 X="-5567.096" Y="-1015.685" Z="392.9376" />
          <Vector3 X="-5532.124" Y="-1016.579" Z="392.8757" />
          <Vector3 X="-5497.81" Y="-1010.533" Z="393.1291" />
          <Vector3 X="-5476.71" Y="-1004.712" Z="392.3283" />
          <Vector3 X="-5452.439" Y="-984.3166" Z="392.2127" />
          <Vector3 X="-5426.586" Y="-961.8343" Z="392.2127" />
          <Vector3 X="-5413.128" Y="-929.6659" Z="392.213" />
          <Vector3 X="-5393.691" Y="-900.6072" Z="392.2018" />
          <Vector3 X="-5384.801" Y="-867.7192" Z="392.0027" />
          <Vector3 X="-5394.937" Y="-834.4082" Z="392.2021" />
          <Vector3 X="-5416.726" Y="-807.3353" Z="392.0465" />
          <Vector3 X="-5436.164" Y="-778.6702" Z="394.0597" />
          <Vector3 X="-5438.653" Y="-743.822" Z="393.7394" />
          <Vector3 X="-5432.712" Y="-709.6414" Z="393.7102" />
          <Vector3 X="-5416.693" Y="-678.5408" Z="393.4463" />
          <Vector3 X="-5402.327" Y="-646.6257" Z="392.0034" />
          <Vector3 X="-5387.907" Y="-614.7357" Z="391.731" />
          <Vector3 X="-5369.569" Y="-584.9866" Z="391.4503" />
          <Vector3 X="-5358.036" Y="-552.3747" Z="391.8299" />
          <Vector3 X="-5340.737" Y="-521.359" Z="391.4936" />
          <Vector3 X="-5323.869" Y="-511.9774" Z="391.3975" />
          <Vector3 X="-5320.236" Y="-513.1099" Z="391.5371" />
          <Vector3 X="-5287.01" Y="-506.5172" Z="390.6188" />
          <Vector3 X="-5255.207" Y="-508.2839" Z="386.1126" />
          <Vector3 X="-5241.87" Y="-540.4857" Z="393.8704" />
          <Vector3 X="-5235.577" Y="-574.6661" Z="406.2246" />
          <Vector3 X="-5232.307" Y="-609.4365" Z="416.7492" />
          <Vector3 X="-5224.028" Y="-643.4413" Z="424.476" />
          <Vector3 X="-5213.371" Y="-676.752" Z="432.7012" />
          <Vector3 X="-5199.922" Y="-709.0555" Z="440.6603" />
          <Vector3 X="-5176.843" Y="-734.3338" Z="448.2675" />
          <Vector3 X="-5142.469" Y="-738.862" Z="457.0015" />
          <Vector3 X="-5107.486" Y="-739.942" Z="465.9595" />
          <Vector3 X="-5087.851" Y="-741.0925" Z="471.1271" />
          <Vector3 X="-5056.903" Y="-755.4164" Z="484.0811" />
          <Vector3 X="-5043.648" Y="-786.2366" Z="495.1274" />
          <Vector3 X="-5029.393" Y="-819.0249" Z="495.129" />
          <Vector3 X="-5008.964" Y="-847.3841" Z="497.1158" />
          <Vector3 X="-4992.19" Y="-867.5751" Z="496.9845" />
          <Vector3 X="-4984.764" Y="-877.2111" Z="499.1082" />
          <Vector3 X="-4980.293" Y="-885.3707" Z="501.6454" />
          <Vector3 X="-4986.081" Y="-890.3968" Z="501.644" />
          <Vector3 X="-4997.754" Y="-903.3735" Z="501.6601" />
          <Vector3 X="-5006.903" Y="-918.1743" Z="501.6601" />
          <Vector3 X="-5008.617" Y="-935.2761" Z="501.6601" />
          <Vector3 X="-4999.288" Y="-949.353" Z="501.6601" />
          <Vector3 X="-4985.553" Y="-961.0244" Z="501.6601" />
          <Vector3 X="-4972.075" Y="-972.1857" Z="503.1171" />
          <Vector3 X="-4958.72" Y="-983.4899" Z="501.6279" />
          <Vector3 X="-4948.555" Y="-997.6418" Z="501.4476" />
          <Vector3 X="-4945.348" Y="-1007.514" Z="501.441" />
          <Vector3 X="-4945.615" Y="-1018.971" Z="501.441" />
          <Vector3 X="-4946.17" Y="-1027.606" Z="501.5083" />
          <Vector3 X="-4942.709" Y="-1029.211" Z="501.5428" />
          <Vector3 X="-4926.845" Y="-1036.598" Z="501.7105" />
          <Vector3 X="-4911.018" Y="-1044.064" Z="501.8741" />
          <Vector3 X="-4895.307" Y="-1051.769" Z="502.0456" />
          <Vector3 X="-4879.972" Y="-1060.199" Z="502.2102" />
          <Vector3 X="-4873.518" Y="-1065.252" Z="502.1904" />
          <Vector3 X="-4867.344" Y="-1072.189" Z="502.1887" />
          <Vector3 X="-4870.124" Y="-1086.124" Z="502.2125" />
          <Vector3 X="-4870.945" Y="-1103.444" Z="502.2131" />
          <Vector3 X="-4869.884" Y="-1109.37" Z="502.2131" />
          <Vector3 X="-4862.985" Y="-1128.887" Z="502.1861" />
          <Vector3 X="-4852.527" Y="-1142.892" Z="502.205" />
          <Vector3 X="-4839.075" Y="-1154.877" Z="502.2055" />
          <Vector3 X="-4829.545" Y="-1161.189" Z="502.2063" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(2158) ||  new Vector3(-4831.87f, -1160.652f, 502.206f).DistanceTo(ObjectManager.Me.Position) &lt; 30);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoToSleepingDruids</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="9847.706" Y="1013.351" Z="1305.547" />
          <Vector3 X="9847.961" Y="1023.217" Z="1305.276" />
          <Vector3 X="9848.673" Y="1047.286" Z="1305.143" />
          <Vector3 X="9843.181" Y="1072.822" Z="1308.226" />
          <Vector3 X="9835.243" Y="1088.419" Z="1304.95" />
          <Vector3 X="9828.563" Y="1121.748" Z="1297.448" />
          <Vector3 X="9834.29" Y="1150.711" Z="1290.769" />
          <Vector3 X="9838.541" Y="1186.578" Z="1290.31" />
          <Vector3 X="9846.931" Y="1219.277" Z="1288.99" />
          <Vector3 X="9862.434" Y="1250.591" Z="1290.338" />
          <Vector3 X="9880.733" Y="1280.372" Z="1296.645" />
          <Vector3 X="9895.346" Y="1303.515" Z="1302.405" />
          <Vector3 X="9897.478" Y="1306.431" Z="1302.499" />
          <Vector3 X="9903.252" Y="1314.795" Z="1301.451" />
          <Vector3 X="9908.859" Y="1323.666" Z="1302.872" />
          <Vector3 X="9913.115" Y="1333.235" Z="1305.159" />
          <Vector3 X="9915.229" Y="1340.141" Z="1305.472" />
          <Vector3 X="9920.271" Y="1349.323" Z="1303.214" />
          <Vector3 X="9927.494" Y="1356.937" Z="1300.579" />
          <Vector3 X="9935.174" Y="1364.72" Z="1299.002" />
          <Vector3 X="9947.854" Y="1377.579" Z="1295.057" />
          <Vector3 X="9958.129" Y="1390.965" Z="1292.233" />
          <Vector3 X="9966.557" Y="1406.283" Z="1292.594" />
          <Vector3 X="9969.082" Y="1414.106" Z="1291.95" />
          <Vector3 X="9972.15" Y="1424.583" Z="1292.754" />
          <Vector3 X="9977.427" Y="1441.264" Z="1293.118" />
          <Vector3 X="9979.079" Y="1459.19" Z="1295.819" />
          <Vector3 X="9977.889" Y="1467.856" Z="1296.839" />
          <Vector3 X="9975.279" Y="1485.161" Z="1297.564" />
          <Vector3 X="9973.128" Y="1502.517" Z="1299.559" />
          <Vector3 X="9971.599" Y="1511.078" Z="1301.225" />
          <Vector3 X="9966.407" Y="1518.122" Z="1304.576" />
          <Vector3 X="9962.39" Y="1523.331" Z="1307.364" />
          <Vector3 X="9948.211" Y="1532.497" Z="1312.742" />
          <Vector3 X="9935.032" Y="1536.117" Z="1315.576" />
          <Vector3 X="9918.093" Y="1540.49" Z="1320.398" />
          <Vector3 X="9907.707" Y="1543.864" Z="1323.154" />
          <Vector3 X="9901.863" Y="1545.308" Z="1324.326" />
          <Vector3 X="9885.42" Y="1549.383" Z="1327.483" />
          <Vector3 X="9876.406" Y="1551.71" Z="1328.467" />
          <Vector3 X="9867.804" Y="1556.451" Z="1329.287" />
          <Vector3 X="9864.3" Y="1559.07" Z="1329.313" />
          <Vector3 X="9856.926" Y="1569.334" Z="1329.529" />
          <Vector3 X="9855.415" Y="1573.673" Z="1328.458" />
          <Vector3 X="9853.5" Y="1576.912" Z="1327.397" />
          <Vector3 X="9847.434" Y="1578.255" Z="1325.736" />
          <Vector3 X="9840.121" Y="1572.681" Z="1323.363" />
          <Vector3 X="9839.677" Y="1569.098" Z="1322.304" />
          <Vector3 X="9841.277" Y="1562.403" Z="1320.667" />
          <Vector3 X="9844.57" Y="1560.337" Z="1319.774" />
          <Vector3 X="9849.892" Y="1559.739" Z="1318.403" />
          <Vector3 X="9857.904" Y="1565.292" Z="1315.834" />
          <Vector3 X="9858.174" Y="1570.197" Z="1314.699" />
          <Vector3 X="9856.433" Y="1576.13" Z="1313.037" />
          <Vector3 X="9850.783" Y="1580.6" Z="1311.091" />
          <Vector3 X="9847.962" Y="1583.357" Z="1311.42" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoToTumors</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="10082.29" Y="2528.393" Z="1317.408" />
          <Vector3 X="10076.06" Y="2523.594" Z="1319.07" />
          <Vector3 X="10066.91" Y="2518.477" Z="1319.903" />
          <Vector3 X="10051.25" Y="2510.666" Z="1318.388" />
          <Vector3 X="10035" Y="2504.581" Z="1318.425" />
          <Vector3 X="10017.2" Y="2506.36" Z="1318.689" />
          <Vector3 X="10001.17" Y="2511.856" Z="1315.768" />
          <Vector3 X="9984.585" Y="2517.37" Z="1316.699" />
          <Vector3 X="9969.934" Y="2509.584" Z="1317.415" />
          <Vector3 X="9959.849" Y="2494.665" Z="1316.542" />
          <Vector3 X="9950.635" Y="2474.874" Z="1316.206" />
          <Vector3 X="9948.933" Y="2449.824" Z="1321.852" />
          <Vector3 X="9949.452" Y="2426.115" Z="1325.648" />
          <Vector3 X="9949.961" Y="2399.331" Z="1328.577" />
          <Vector3 X="9950.626" Y="2364.337" Z="1330.301" />
          <Vector3 X="9951.291" Y="2329.364" Z="1333.701" />
          <Vector3 X="9951.956" Y="2294.38" Z="1340.557" />
          <Vector3 X="9952.622" Y="2259.414" Z="1336.706" />
          <Vector3 X="9953.166" Y="2224.418" Z="1330.979" />
          <Vector3 X="9953.489" Y="2189.419" Z="1327.607" />
          <Vector3 X="9952.619" Y="2154.434" Z="1327.69" />
          <Vector3 X="9951.969" Y="2119.446" Z="1327.645" />
          <Vector3 X="9952.686" Y="2084.467" Z="1327.684" />
          <Vector3 X="9966.893" Y="2053.018" Z="1328.089" />
          <Vector3 X="9985.016" Y="2023.33" Z="1328.064" />
          <Vector3 X="9983.996" Y="1987.454" Z="1327.52" />
          <Vector3 X="9982.16" Y="1962.396" Z="1326.293" />
          <Vector3 X="9983.201" Y="1948.225" Z="1325.262" />
          <Vector3 X="9981.776" Y="1920.897" Z="1322.872" />
          <Vector3 X="9983.111" Y="1887.047" Z="1320.465" />
          <Vector3 X="9985.611" Y="1872.137" Z="1318.762" />
          <Vector3 X="10000.71" Y="1853.401" Z="1317.786" />
          <Vector3 X="10026.49" Y="1829.856" Z="1319.764" />
          <Vector3 X="10056.33" Y="1811.621" Z="1324.713" />
          <Vector3 X="10086.2" Y="1793.418" Z="1329.427" />
          <Vector3 X="10114.64" Y="1773.011" Z="1335.355" />
          <Vector3 X="10126.37" Y="1765.001" Z="1341.7" />
          <Vector3 X="10141.31" Y="1755.89" Z="1340.692" />
          <Vector3 X="10155.19" Y="1747.058" Z="1336.752" />
          <Vector3 X="10180.97" Y="1742.26" Z="1329.798" />
          <Vector3 X="10214.58" Y="1737.971" Z="1324.742" />
          <Vector3 X="10236.36" Y="1736.971" Z="1322.134" />
          <Vector3 X="10257.89" Y="1751.984" Z="1321.454" />
          <Vector3 X="10266.19" Y="1759.058" Z="1322.46" />
          <Vector3 X="10280.04" Y="1762.246" Z="1322.337" />
          <Vector3 X="10314.33" Y="1769.235" Z="1317.988" />
          <Vector3 X="10334.76" Y="1773.068" Z="1315.448" />
          <Vector3 X="10342.9" Y="1776.279" Z="1314.618" />
          <Vector3 X="10374.78" Y="1790.731" Z="1315.19" />
          <Vector3 X="10392.21" Y="1796.897" Z="1312.358" />
          <Vector3 X="10404.17" Y="1797.535" Z="1312.33" />
          <Vector3 X="10421.22" Y="1776.727" Z="1311.515" />
          <Vector3 X="10423.52" Y="1770.56" Z="1310.517" />
          <Vector3 X="10427.78" Y="1754.75" Z="1308.514" />
          <Vector3 X="10432.17" Y="1734.431" Z="1306.039" />
          <Vector3 X="10432.27" Y="1726.732" Z="1304.81" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoUp</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="9871.344" Y="947.3963" Z="1307.098" />
          <Vector3 X="9872.335" Y="948.9641" Z="1307.16" />
          <Vector3 X="9874.134" Y="951.71" Z="1307.654" />
          <Vector3 X="9876.182" Y="954.8115" Z="1308.245" />
          <Vector3 X="9878.052" Y="957.7695" Z="1309.691" />
          <Vector3 X="9879.857" Y="960.644" Z="1311.742" />
          <Vector3 X="9881.646" Y="963.5215" Z="1312.897" />
          <Vector3 X="9883.609" Y="966.6785" Z="1313.808" />
          <Vector3 X="9885.457" Y="969.6511" Z="1313.828" />
          <Vector3 X="9887.305" Y="972.6236" Z="1313.847" />
          <Vector3 X="9889.165" Y="975.5877" Z="1313.864" />
          <Vector3 X="9891.286" Y="978.2344" Z="1313.865" />
          <Vector3 X="9894.141" Y="980.3935" Z="1313.832" />
          <Vector3 X="9896.254" Y="981.2888" Z="1313.832" />
          <Vector3 X="9897.697" Y="982.3924" Z="1313.832" />
          <Vector3 X="9899.652" Y="983.9529" Z="1313.832" />
          <Vector3 X="9901.427" Y="985.7145" Z="1313.832" />
          <Vector3 X="9903.2" Y="987.4761" Z="1313.832" />
          <Vector3 X="9904.884" Y="989.3223" Z="1313.832" />
          <Vector3 X="9906.445" Y="991.2725" Z="1313.832" />
          <Vector3 X="9907.889" Y="993.3133" Z="1313.832" />
          <Vector3 X="9909.296" Y="995.3763" Z="1314.127" />
          <Vector3 X="9909.777" Y="997.722" Z="1315.099" />
          <Vector3 X="9908.983" Y="1000.158" Z="1316.084" />
          <Vector3 X="9907.128" Y="1001.76" Z="1316.972" />
          <Vector3 X="9904.665" Y="1001.816" Z="1317.858" />
          <Vector3 X="9902.439" Y="1000.707" Z="1318.823" />
          <Vector3 X="9901.555" Y="998.4586" Z="1319.745" />
          <Vector3 X="9901.978" Y="996.002" Z="1320.693" />
          <Vector3 X="9903.645" Y="994.369" Z="1321.574" />
          <Vector3 X="9905.99" Y="993.4501" Z="1322.581" />
          <Vector3 X="9908.232" Y="994.36" Z="1323.569" />
          <Vector3 X="9909.338" Y="996.5502" Z="1324.576" />
          <Vector3 X="9908.729" Y="998.9283" Z="1325.38" />
          <Vector3 X="9907.685" Y="1001.188" Z="1326.368" />
          <Vector3 X="9905.343" Y="1001.54" Z="1327.48" />
          <Vector3 X="9903.147" Y="1000.414" Z="1328.089" />
          <Vector3 X="9901.995" Y="998.2316" Z="1328.33" />
          <Vector3 X="9901.925" Y="995.8379" Z="1328.517" />
          <Vector3 X="9903.205" Y="993.6282" Z="1328.524" />
          <Vector3 X="9905.029" Y="991.9321" Z="1328.514" />
          <Vector3 X="9907.425" Y="991.433" Z="1328.432" />
          <Vector3 X="9909.728" Y="992.3746" Z="1328.405" />
          <Vector3 X="9912.006" Y="993.3998" Z="1328.419" />
          <Vector3 X="9914.388" Y="994.1464" Z="1328.376" />
          <Vector3 X="9916.832" Y="993.8989" Z="1328.344" />
          <Vector3 X="9918.251" Y="991.9266" Z="1328.289" />
          <Vector3 X="9918.76" Y="989.4835" Z="1328.672" />
          <Vector3 X="9918.451" Y="986.7543" Z="1329.48" />
          <Vector3 X="9917.28" Y="983.5703" Z="1330.575" />
          <Vector3 X="9915.464" Y="980.4781" Z="1332.395" />
          <Vector3 X="9912.844" Y="978.3483" Z="1334.08" />
          <Vector3 X="9909.793" Y="976.8861" Z="1335.479" />
          <Vector3 X="9906.207" Y="975.9285" Z="1336.886" />
          <Vector3 X="9902.932" Y="975.7371" Z="1337.496" />
          <Vector3 X="9899.218" Y="975.8778" Z="1338.47" />
          <Vector3 X="9895.732" Y="976.1812" Z="1339.393" />
          <Vector3 X="9892.432" Y="976.9329" Z="1340.341" />
          <Vector3 X="9889.135" Y="978.3746" Z="1341.736" />
          <Vector3 X="9886.467" Y="980.6104" Z="1342.983" />
          <Vector3 X="9884.805" Y="983.665" Z="1345.053" />
          <Vector3 X="9884.606" Y="987.0365" Z="1346.888" />
          <Vector3 X="9885.021" Y="990.3975" Z="1349.269" />
          <Vector3 X="9886.395" Y="993.7958" Z="1351.631" />
          <Vector3 X="9888.8" Y="996.3368" Z="1352.505" />
          <Vector3 X="9891.196" Y="998.7416" Z="1353.272" />
          <Vector3 X="9894.019" Y="1000.957" Z="1353.928" />
          <Vector3 X="9897.353" Y="1001.989" Z="1354.624" />
          <Vector3 X="9898.877" Y="1002.119" Z="1354.899" />
          <Vector3 X="9901.662" Y="1001.557" Z="1354.946" />
          <Vector3 X="9903.514" Y="1000.307" Z="1354.981" />
          <Vector3 X="9903.092" Y="997.185" Z="1354.825" />
          <Vector3 X="9902.288" Y="993.6707" Z="1354.803" />
          <Vector3 X="9901.042" Y="990.4055" Z="1354.803" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoUp2</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="9871.344" Y="947.3963" Z="1307.098" />
          <Vector3 X="9872.335" Y="948.9641" Z="1307.16" />
          <Vector3 X="9874.134" Y="951.71" Z="1307.654" />
          <Vector3 X="9876.182" Y="954.8115" Z="1308.245" />
          <Vector3 X="9878.052" Y="957.7695" Z="1309.691" />
          <Vector3 X="9879.857" Y="960.644" Z="1311.742" />
          <Vector3 X="9881.646" Y="963.5215" Z="1312.897" />
          <Vector3 X="9883.609" Y="966.6785" Z="1313.808" />
          <Vector3 X="9885.457" Y="969.6511" Z="1313.828" />
          <Vector3 X="9887.305" Y="972.6236" Z="1313.847" />
          <Vector3 X="9889.165" Y="975.5877" Z="1313.864" />
          <Vector3 X="9891.286" Y="978.2344" Z="1313.865" />
          <Vector3 X="9894.141" Y="980.3935" Z="1313.832" />
          <Vector3 X="9896.254" Y="981.2888" Z="1313.832" />
          <Vector3 X="9897.697" Y="982.3924" Z="1313.832" />
          <Vector3 X="9899.652" Y="983.9529" Z="1313.832" />
          <Vector3 X="9901.427" Y="985.7145" Z="1313.832" />
          <Vector3 X="9903.2" Y="987.4761" Z="1313.832" />
          <Vector3 X="9904.884" Y="989.3223" Z="1313.832" />
          <Vector3 X="9906.445" Y="991.2725" Z="1313.832" />
          <Vector3 X="9907.889" Y="993.3133" Z="1313.832" />
          <Vector3 X="9909.296" Y="995.3763" Z="1314.127" />
          <Vector3 X="9909.777" Y="997.722" Z="1315.099" />
          <Vector3 X="9908.983" Y="1000.158" Z="1316.084" />
          <Vector3 X="9907.128" Y="1001.76" Z="1316.972" />
          <Vector3 X="9904.665" Y="1001.816" Z="1317.858" />
          <Vector3 X="9902.439" Y="1000.707" Z="1318.823" />
          <Vector3 X="9901.555" Y="998.4586" Z="1319.745" />
          <Vector3 X="9901.978" Y="996.002" Z="1320.693" />
          <Vector3 X="9903.645" Y="994.369" Z="1321.574" />
          <Vector3 X="9905.99" Y="993.4501" Z="1322.581" />
          <Vector3 X="9908.232" Y="994.36" Z="1323.569" />
          <Vector3 X="9909.338" Y="996.5502" Z="1324.576" />
          <Vector3 X="9908.729" Y="998.9283" Z="1325.38" />
          <Vector3 X="9907.685" Y="1001.188" Z="1326.368" />
          <Vector3 X="9905.343" Y="1001.54" Z="1327.48" />
          <Vector3 X="9903.147" Y="1000.414" Z="1328.089" />
          <Vector3 X="9901.995" Y="998.2316" Z="1328.33" />
          <Vector3 X="9901.925" Y="995.8379" Z="1328.517" />
          <Vector3 X="9903.205" Y="993.6282" Z="1328.524" />
          <Vector3 X="9905.029" Y="991.9321" Z="1328.514" />
          <Vector3 X="9907.425" Y="991.433" Z="1328.432" />
          <Vector3 X="9909.728" Y="992.3746" Z="1328.405" />
          <Vector3 X="9912.006" Y="993.3998" Z="1328.419" />
          <Vector3 X="9914.388" Y="994.1464" Z="1328.376" />
          <Vector3 X="9916.832" Y="993.8989" Z="1328.344" />
          <Vector3 X="9918.251" Y="991.9266" Z="1328.289" />
          <Vector3 X="9918.76" Y="989.4835" Z="1328.672" />
          <Vector3 X="9918.451" Y="986.7543" Z="1329.48" />
          <Vector3 X="9917.28" Y="983.5703" Z="1330.575" />
          <Vector3 X="9915.464" Y="980.4781" Z="1332.395" />
          <Vector3 X="9912.844" Y="978.3483" Z="1334.08" />
          <Vector3 X="9909.793" Y="976.8861" Z="1335.479" />
          <Vector3 X="9906.207" Y="975.9285" Z="1336.886" />
          <Vector3 X="9902.932" Y="975.7371" Z="1337.496" />
          <Vector3 X="9899.218" Y="975.8778" Z="1338.47" />
          <Vector3 X="9895.732" Y="976.1812" Z="1339.393" />
          <Vector3 X="9892.432" Y="976.9329" Z="1340.341" />
          <Vector3 X="9889.135" Y="978.3746" Z="1341.736" />
          <Vector3 X="9886.467" Y="980.6104" Z="1342.983" />
          <Vector3 X="9884.805" Y="983.665" Z="1345.053" />
          <Vector3 X="9884.606" Y="987.0365" Z="1346.888" />
          <Vector3 X="9885.021" Y="990.3975" Z="1349.269" />
          <Vector3 X="9886.395" Y="993.7958" Z="1351.631" />
          <Vector3 X="9888.8" Y="996.3368" Z="1352.505" />
          <Vector3 X="9891.196" Y="998.7416" Z="1353.272" />
          <Vector3 X="9894.019" Y="1000.957" Z="1353.928" />
          <Vector3 X="9897.353" Y="1001.989" Z="1354.624" />
          <Vector3 X="9898.877" Y="1002.119" Z="1354.899" />
          <Vector3 X="9901.662" Y="1001.557" Z="1354.946" />
          <Vector3 X="9903.514" Y="1000.307" Z="1354.981" />
          <Vector3 X="9903.092" Y="997.185" Z="1354.825" />
          <Vector3 X="9902.288" Y="993.6707" Z="1354.803" />
          <Vector3 X="9901.042" Y="990.4055" Z="1354.803" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoUp3</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="9871.344" Y="947.3963" Z="1307.098" />
          <Vector3 X="9872.335" Y="948.9641" Z="1307.16" />
          <Vector3 X="9874.134" Y="951.71" Z="1307.654" />
          <Vector3 X="9876.182" Y="954.8115" Z="1308.245" />
          <Vector3 X="9878.052" Y="957.7695" Z="1309.691" />
          <Vector3 X="9879.857" Y="960.644" Z="1311.742" />
          <Vector3 X="9881.646" Y="963.5215" Z="1312.897" />
          <Vector3 X="9883.609" Y="966.6785" Z="1313.808" />
          <Vector3 X="9885.457" Y="969.6511" Z="1313.828" />
          <Vector3 X="9887.305" Y="972.6236" Z="1313.847" />
          <Vector3 X="9889.165" Y="975.5877" Z="1313.864" />
          <Vector3 X="9891.286" Y="978.2344" Z="1313.865" />
          <Vector3 X="9894.141" Y="980.3935" Z="1313.832" />
          <Vector3 X="9896.254" Y="981.2888" Z="1313.832" />
          <Vector3 X="9897.697" Y="982.3924" Z="1313.832" />
          <Vector3 X="9899.652" Y="983.9529" Z="1313.832" />
          <Vector3 X="9901.427" Y="985.7145" Z="1313.832" />
          <Vector3 X="9903.2" Y="987.4761" Z="1313.832" />
          <Vector3 X="9904.884" Y="989.3223" Z="1313.832" />
          <Vector3 X="9906.445" Y="991.2725" Z="1313.832" />
          <Vector3 X="9907.889" Y="993.3133" Z="1313.832" />
          <Vector3 X="9909.296" Y="995.3763" Z="1314.127" />
          <Vector3 X="9909.777" Y="997.722" Z="1315.099" />
          <Vector3 X="9908.983" Y="1000.158" Z="1316.084" />
          <Vector3 X="9907.128" Y="1001.76" Z="1316.972" />
          <Vector3 X="9904.665" Y="1001.816" Z="1317.858" />
          <Vector3 X="9902.439" Y="1000.707" Z="1318.823" />
          <Vector3 X="9901.555" Y="998.4586" Z="1319.745" />
          <Vector3 X="9901.978" Y="996.002" Z="1320.693" />
          <Vector3 X="9903.645" Y="994.369" Z="1321.574" />
          <Vector3 X="9905.99" Y="993.4501" Z="1322.581" />
          <Vector3 X="9908.232" Y="994.36" Z="1323.569" />
          <Vector3 X="9909.338" Y="996.5502" Z="1324.576" />
          <Vector3 X="9908.729" Y="998.9283" Z="1325.38" />
          <Vector3 X="9907.685" Y="1001.188" Z="1326.368" />
          <Vector3 X="9905.343" Y="1001.54" Z="1327.48" />
          <Vector3 X="9903.147" Y="1000.414" Z="1328.089" />
          <Vector3 X="9901.995" Y="998.2316" Z="1328.33" />
          <Vector3 X="9901.925" Y="995.8379" Z="1328.517" />
          <Vector3 X="9903.205" Y="993.6282" Z="1328.524" />
          <Vector3 X="9905.029" Y="991.9321" Z="1328.514" />
          <Vector3 X="9907.425" Y="991.433" Z="1328.432" />
          <Vector3 X="9909.728" Y="992.3746" Z="1328.405" />
          <Vector3 X="9912.006" Y="993.3998" Z="1328.419" />
          <Vector3 X="9914.388" Y="994.1464" Z="1328.376" />
          <Vector3 X="9916.832" Y="993.8989" Z="1328.344" />
          <Vector3 X="9918.251" Y="991.9266" Z="1328.289" />
          <Vector3 X="9918.76" Y="989.4835" Z="1328.672" />
          <Vector3 X="9918.451" Y="986.7543" Z="1329.48" />
          <Vector3 X="9917.28" Y="983.5703" Z="1330.575" />
          <Vector3 X="9915.464" Y="980.4781" Z="1332.395" />
          <Vector3 X="9912.844" Y="978.3483" Z="1334.08" />
          <Vector3 X="9909.793" Y="976.8861" Z="1335.479" />
          <Vector3 X="9906.207" Y="975.9285" Z="1336.886" />
          <Vector3 X="9902.932" Y="975.7371" Z="1337.496" />
          <Vector3 X="9899.218" Y="975.8778" Z="1338.47" />
          <Vector3 X="9895.732" Y="976.1812" Z="1339.393" />
          <Vector3 X="9892.432" Y="976.9329" Z="1340.341" />
          <Vector3 X="9889.135" Y="978.3746" Z="1341.736" />
          <Vector3 X="9886.467" Y="980.6104" Z="1342.983" />
          <Vector3 X="9884.805" Y="983.665" Z="1345.053" />
          <Vector3 X="9884.606" Y="987.0365" Z="1346.888" />
          <Vector3 X="9885.021" Y="990.3975" Z="1349.269" />
          <Vector3 X="9886.395" Y="993.7958" Z="1351.631" />
          <Vector3 X="9888.8" Y="996.3368" Z="1352.505" />
          <Vector3 X="9891.196" Y="998.7416" Z="1353.272" />
          <Vector3 X="9894.019" Y="1000.957" Z="1353.928" />
          <Vector3 X="9897.353" Y="1001.989" Z="1354.624" />
          <Vector3 X="9898.877" Y="1002.119" Z="1354.899" />
          <Vector3 X="9901.662" Y="1001.557" Z="1354.946" />
          <Vector3 X="9903.514" Y="1000.307" Z="1354.981" />
          <Vector3 X="9903.092" Y="997.185" Z="1354.825" />
          <Vector3 X="9902.288" Y="993.6707" Z="1354.803" />
          <Vector3 X="9901.042" Y="990.4055" Z="1354.803" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEMenethilToStormwind</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-3763.554" Y="-737.6781" Z="8.031238" />
          <Vector3 X="-3771.979" Y="-741.8298" Z="8.031586" />
          <Vector3 X="-3781.381" Y="-746.504" Z="8.030112" />
          <Vector3 X="-3790.85" Y="-751.04" Z="8.034457" />
          <Vector3 X="-3800.623" Y="-755.7213" Z="8.040488" />
          <Vector3 X="-3809.839" Y="-760.0037" Z="8.046611" />
          <Vector3 X="-3815.617" Y="-762.3524" Z="8.052258" />
          <Vector3 X="-3818.875" Y="-766.0307" Z="8.056942" />
          <Vector3 X="-3824.992" Y="-774.5596" Z="8.045141" />
          <Vector3 X="-3831.014" Y="-783.134" Z="8.9018" />
          <Vector3 X="-3841.337" Y="-778.9464" Z="3.715239" />
          <Vector3 X="-3848.735" Y="-771.054" Z="-1.113626" />
          <Vector3 X="-3866.798" Y="-758.4661" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-3888.116" Y="-748.3871" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-3909.98" Y="-739.4736" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-3932.544" Y="-730.2749" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-3953.708" Y="-721.6467" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-3976.049" Y="-711.945" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-3995.928" Y="-700.6813" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4016.315" Y="-687.3358" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4035.193" Y="-674.4561" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4054.668" Y="-661.107" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4073.614" Y="-648.2391" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4093.727" Y="-634.5679" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4113.254" Y="-621.2949" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4132.781" Y="-608.0219" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4152.309" Y="-594.7488" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4171.476" Y="-580.9737" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4189.205" Y="-565.3944" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4204.845" Y="-547.72" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4219.973" Y="-529.5919" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4233.932" Y="-510.5715" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4245.584" Y="-490.0542" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4253.727" Y="-467.8998" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4261.053" Y="-445.4544" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4267.508" Y="-421.9719" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4272.924" Y="-399.7673" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4278.125" Y="-376.7505" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4280.503" Y="-353.261" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4282.119" Y="-329.709" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4283.074" Y="-306.1219" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4283.029" Y="-281.7553" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4282.987" Y="-258.8998" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4282.944" Y="-235.2887" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4282.55" Y="-211.6835" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4281.745" Y="-187.3301" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4280.918" Y="-164.49" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4277.907" Y="-141.0919" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4273.622" Y="-117.8752" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4268.795" Y="-94.7627" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4263.079" Y="-71.86216" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4256.372" Y="-49.22358" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4249.659" Y="-26.58678" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4239.611" Y="-5.27176" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4228.875" Y="15.75708" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4217.794" Y="37.45884" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4207.402" Y="57.81475" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4196.665" Y="78.84358" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4185.663" Y="99.72371" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4170.294" Y="117.6226" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4154.274" Y="134.9681" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4137.859" Y="152.9755" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4122.662" Y="170.0462" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4106.912" Y="188.6337" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4093.751" Y="207.2901" Z="-1.453826" Type="Swimming" />
          <Vector3 X="-4083.304" Y="228.4312" Z="-1.440019" Type="Swimming" />
          <Vector3 X="-4081.056" Y="240.7274" Z="-0.8281088" />
          <Vector3 X="-4080.607" Y="244.3056" Z="-0.7654799" />
          <Vector3 X="-4078.179" Y="254.521" Z="-1.414741" />
          <Vector3 X="-4077.454" Y="277.5295" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4083.794" Y="300.2005" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4092.483" Y="322.9654" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4100.443" Y="344.389" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4108.075" Y="366.7325" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4115.136" Y="389.2522" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4120.109" Y="413.1059" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4124.715" Y="435.4923" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4129.626" Y="459.3589" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4134.527" Y="481.6821" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4139.774" Y="505.4767" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4145.008" Y="527.7111" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4154.383" Y="549.3688" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4162.586" Y="571.5089" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4170.042" Y="594.7058" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4176.908" Y="616.5056" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4184.479" Y="639.6659" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4192.21" Y="661.1707" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4201.157" Y="683.8355" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4209.813" Y="704.9873" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4218.966" Y="727.5688" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4226.999" Y="748.9661" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4235.523" Y="771.793" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4245.739" Y="792.1395" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4261.375" Y="810.8091" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4277.054" Y="827.4386" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4292.193" Y="846.4597" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4304.475" Y="865.7346" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4318.795" Y="884.4842" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4336.335" Y="900.21" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4355.874" Y="913.458" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4376.384" Y="925.1251" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4396.214" Y="937.6874" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4413.076" Y="954.2068" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4429.499" Y="971.1513" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4447.086" Y="986.9042" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4462.733" Y="1004.492" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4473.085" Y="1025.439" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4472.475" Y="1049.765" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4467.122" Y="1071.934" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4453.348" Y="1090.88" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4436.17" Y="1107.077" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4419.169" Y="1123.461" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4402.422" Y="1140.093" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4391.268" Y="1160.764" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4385.633" Y="1183.56" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4380.861" Y="1207.418" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4373.408" Y="1229.003" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4362.205" Y="1249.774" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4350.319" Y="1270.175" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4339.438" Y="1291.122" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4330.45" Y="1312.829" Z="-1.445121" Type="Swimming" />
          <Vector3 X="-4327.195" Y="1332.749" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4323.418" Y="1355.29" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4318.326" Y="1379.11" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4313.467" Y="1401.438" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4309.222" Y="1425.432" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4305.829" Y="1448.034" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4302.612" Y="1472.186" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4300.336" Y="1494.926" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4299.233" Y="1518.502" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4300.718" Y="1542.063" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4303.115" Y="1565.532" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4310.354" Y="1587.912" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4322.83" Y="1608.823" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4333.076" Y="1629.212" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4341.265" Y="1651.358" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4349.805" Y="1673.367" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4359.2" Y="1695.849" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4367.639" Y="1717.085" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4375.047" Y="1739.503" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4382.266" Y="1761.983" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4389.716" Y="1785.183" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4395.97" Y="1807.164" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4402.558" Y="1829.832" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4410.593" Y="1852.011" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4423.887" Y="1872.3" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4438.499" Y="1889.875" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4454.077" Y="1908.611" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4468.947" Y="1925.968" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4484.349" Y="1943.864" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4500.267" Y="1961.254" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4518.781" Y="1975.904" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4540.158" Y="1985.434" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4563.45" Y="1985.126" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4586.788" Y="1985.748" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4609.688" Y="1993.9" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4629.351" Y="2005.472" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4648.827" Y="2018.821" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4668.408" Y="2032.013" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4688.863" Y="2045.253" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4708.332" Y="2057.216" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4729.085" Y="2068.472" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4751.417" Y="2075.439" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4775.774" Y="2075.897" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4798.629" Y="2075.899" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4822.24" Y="2076.09" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4845.842" Y="2075.898" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4870.128" Y="2073.998" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4892.604" Y="2069.875" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4915.291" Y="2061.047" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4936.393" Y="2052.27" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4958.135" Y="2043.065" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-4979.838" Y="2033.767" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5001.542" Y="2024.469" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5022.719" Y="2014.063" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5043.354" Y="2001.105" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5063.557" Y="1990.463" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5085.809" Y="1980.533" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5106.957" Y="1971.884" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5129.611" Y="1965.306" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5153.166" Y="1963.868" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5176.568" Y="1960.921" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5199.119" Y="1954.052" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5218.071" Y="1940.147" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5234.99" Y="1923.678" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5253.437" Y="1907.77" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5270.995" Y="1893.138" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5288.394" Y="1876.162" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5300.343" Y="1856.688" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5312.389" Y="1836.397" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5318.28" Y="1813.613" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5321.046" Y="1789.41" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5322.536" Y="1766.614" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5332.654" Y="1745.52" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5351.354" Y="1731.565" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5374.544" Y="1724.091" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5396.339" Y="1717.212" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5419.301" Y="1709.06" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5440.857" Y="1701.462" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5462.597" Y="1692.266" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5484.388" Y="1683.179" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5506.286" Y="1674.348" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5528.194" Y="1665.545" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5550.103" Y="1656.742" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5572.04" Y="1648.009" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5594.046" Y="1639.453" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5615.467" Y="1629.557" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5637.16" Y="1620.268" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5659.674" Y="1613.21" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5683.282" Y="1607.174" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5705.421" Y="1601.501" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5728.593" Y="1593.999" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5748.322" Y="1582.567" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5766.592" Y="1567.65" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5783.645" Y="1551.322" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5800.229" Y="1534.516" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5817.47" Y="1518.39" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5833.631" Y="1500.156" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5848.558" Y="1482.849" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5865.607" Y="1465.455" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5884.973" Y="1453.795" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5908.987" Y="1450.316" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5931.832" Y="1450.733" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5956.188" Y="1450.026" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-5978.999" Y="1448.805" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6002.806" Y="1443.635" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6025.022" Y="1438.284" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6047.695" Y="1429.422" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6068.223" Y="1419.374" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6089.954" Y="1410.154" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6111.929" Y="1401.522" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6133.581" Y="1392.114" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6154.671" Y="1381.506" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6175.857" Y="1369.48" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6195.722" Y="1358.204" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6217.339" Y="1348.719" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6239.197" Y="1339.79" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6261.639" Y="1332.676" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6284.904" Y="1328.651" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6308.272" Y="1325.275" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6331.473" Y="1320.982" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6351.902" Y="1308.221" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6368.011" Y="1292.018" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6385.052" Y="1274.614" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6402.307" Y="1259.627" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6420.255" Y="1244.288" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6440.615" Y="1232.525" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6463.873" Y="1228.921" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6486.375" Y="1235.508" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6507.425" Y="1247.652" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6526.043" Y="1260.909" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6545.891" Y="1275.043" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6563.346" Y="1289.787" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6581.594" Y="1305.934" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6600.357" Y="1318.897" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6622.985" Y="1325.438" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6646.397" Y="1328.484" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6669.646" Y="1332.49" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6692.419" Y="1338.665" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6714.993" Y="1347.822" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6735.635" Y="1357.63" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6756.376" Y="1368.91" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6777.183" Y="1380.057" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6789.338" Y="1385.496" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6807.038" Y="1392.863" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6829.63" Y="1401.988" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6850.196" Y="1411.922" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6871.016" Y="1423.052" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6892.853" Y="1432.003" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6915.956" Y="1436.495" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6939.319" Y="1439.9" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6963.611" Y="1441.677" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-6986.432" Y="1442.929" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7010.727" Y="1444.793" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7033.477" Y="1446.97" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7056.266" Y="1452.724" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7074.458" Y="1467.54" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7089.266" Y="1485.928" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7103.939" Y="1504.425" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7121.56" Y="1521.12" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7139.932" Y="1534.626" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7155.74" Y="1552.151" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7171.097" Y="1570.081" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7189.295" Y="1585.007" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7210.966" Y="1594.112" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7234.955" Y="1598.38" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7256.867" Y="1604.828" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7279.836" Y="1612.958" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7301.091" Y="1621.358" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7322.532" Y="1631.245" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7344.292" Y="1640.374" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7366.512" Y="1648.359" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7388.772" Y="1656.231" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7411.544" Y="1664.898" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7432.762" Y="1673.389" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7455.192" Y="1682.91" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7476.371" Y="1691.499" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7499.024" Y="1697.972" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7523.101" Y="1701.719" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7546.436" Y="1705.324" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7569.229" Y="1706.712" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7593.521" Y="1704.932" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7616.18" Y="1701.936" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7639.134" Y="1696.424" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7662.213" Y="1688.778" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7682.809" Y="1678.874" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7705.727" Y="1670.642" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7727.474" Y="1663.611" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7749.813" Y="1655.97" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7771.781" Y="1647.318" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7794.286" Y="1637.978" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7815.652" Y="1629.868" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7837.843" Y="1621.804" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7860.248" Y="1614.382" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7882.882" Y="1607.661" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7905.175" Y="1599.906" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7927.482" Y="1592.198" Z="-1.457547" Type="Swimming" />
          <Vector3 X="-7947.686" Y="1581.87" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-7965.337" Y="1566.307" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-7982.235" Y="1549.835" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8000.565" Y="1534.953" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8018.644" Y="1519.771" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8033.526" Y="1501.568" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8047.319" Y="1482.419" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8063" Y="1464.781" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8083.608" Y="1452.141" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8105.688" Y="1446.353" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8129.887" Y="1443.594" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8152.698" Y="1442.36" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8176.302" Y="1442.874" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8199.882" Y="1441.956" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8223.21" Y="1438.496" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8245.975" Y="1432.304" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8267.473" Y="1422.586" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8288.778" Y="1412.431" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8311.33" Y="1403.205" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8332.286" Y="1394.092" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8353.56" Y="1382.217" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8373.036" Y="1370.26" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8394.114" Y="1358.056" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8414.946" Y="1348.662" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8438.239" Y="1341.559" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8460.443" Y="1336.139" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8484.314" Y="1331.275" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8506.771" Y="1327.027" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8530.368" Y="1321.001" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8541.406" Y="1316.816" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8558.222" Y="1314.687" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8582.427" Y="1311.892" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8605.229" Y="1310.377" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8629.567" Y="1309.223" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8652.397" Y="1308.14" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8676.745" Y="1307.18" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8699.59" Y="1306.486" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8723.938" Y="1305.606" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8746.289" Y="1301.213" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8769.295" Y="1293.201" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8790.705" Y="1285.248" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8812.106" Y="1273.673" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8830.797" Y="1260.524" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8851.66" Y="1249.601" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8866.597" Y="1243.214" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8875.965" Y="1238.947" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8897.433" Y="1229.119" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8918.932" Y="1219.37" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8941.188" Y="1211.521" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8964.629" Y="1209.111" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8968.354" Y="1208.913" Z="-1.449738" Type="Swimming" />
          <Vector3 X="-8981.432" Y="1206.808" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9005.024" Y="1206.335" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9028.626" Y="1206.977" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9052.044" Y="1209.916" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9075.423" Y="1213.203" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9082.817" Y="1213.738" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9097.643" Y="1209.257" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9119.455" Y="1200.219" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9134.355" Y="1193.748" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9142.433" Y="1190.179" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9164.029" Y="1180.636" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9185.587" Y="1171.005" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9207.465" Y="1162.218" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9230.108" Y="1155.536" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9253.346" Y="1151.488" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9276.947" Y="1150.81" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9300.547" Y="1150.091" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9324.102" Y="1148.46" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9347.603" Y="1146.171" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9371.086" Y="1143.717" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9380.62" Y="1142.721" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9402.647" Y="1140.419" Z="-1.435687" Type="Swimming" />
          <Vector3 X="-9484.146" Y="1154.98" Z="-1.565794" Type="Swimming" />
          <Vector3 X="-9503.319" Y="1149.728" Z="-1.565794" Type="Swimming" />
          <Vector3 X="-9526.707" Y="1142.905" Z="-1.565794" Type="Swimming" />
          <Vector3 X="-9530.932" Y="1141.543" Z="-1.565794" Type="Swimming" />
          <Vector3 X="-9539.907" Y="1138.175" Z="-1.565794" Type="Swimming" />
          <Vector3 X="-9563.082" Y="1130.692" Z="-1.565794" Type="Swimming" />
          <Vector3 X="-9585.607" Y="1126.886" Z="-1.565794" Type="Swimming" />
          <Vector3 X="-9610.799" Y="1123.594" Z="-0.8460082" />
          <Vector3 X="-9627.996" Y="1120.663" Z="2.734427" />
          <Vector3 X="-9640.696" Y="1117.58" Z="6.846313" />
          <Vector3 X="-9645.798" Y="1116.342" Z="7.605627" />
          <Vector3 X="-9656.002" Y="1113.865" Z="7.50759" />
          <Vector3 X="-9666.205" Y="1111.388" Z="8.533131" />
          <Vector3 X="-9672.267" Y="1109.916" Z="9.410454" />
          <Vector3 X="-9730.541" Y="1096.534" Z="10.36623" />
          <Vector3 X="-9734.207" Y="1095.142" Z="10.93035" />
          <Vector3 X="-9743.953" Y="1091.251" Z="13.26395" />
          <Vector3 X="-9753.564" Y="1087.024" Z="15.87849" />
          <Vector3 X="-9761.689" Y="1083.536" Z="18.11052" />
          <Vector3 X="-9766.049" Y="1080.61" Z="19.52761" />
          <Vector3 X="-9775.025" Y="1075.17" Z="22.37531" />
          <Vector3 X="-9783.619" Y="1069.179" Z="24.73146" />
          <Vector3 X="-9788.721" Y="1060.119" Z="26.30132" />
          <Vector3 X="-9788.843" Y="1051.317" Z="27.57952" />
          <Vector3 X="-9787.271" Y="1046.358" Z="28.74833" />
          <Vector3 X="-9782.906" Y="1036.848" Z="29.50564" />
          <Vector3 X="-9778.142" Y="1027.876" Z="31.14315" />
          <Vector3 X="-9773.141" Y="1018.644" Z="32.69919" />
          <Vector3 X="-9767.603" Y="1009.33" Z="31.99794" />
          <Vector3 X="-9762.649" Y="1000.458" Z="30.93415" />
          <Vector3 X="-9758.138" Y="990.619" Z="29.20209" />
          <Vector3 X="-9756.409" Y="980.2729" Z="27.81803" />
          <Vector3 X="-9755.173" Y="970.1866" Z="28.97861" />
          <Vector3 X="-9754.866" Y="959.7142" Z="31.80806" />
          <Vector3 X="-9754.246" Y="949.2444" Z="30.82715" />
          <Vector3 X="-9753.001" Y="938.8184" Z="29.02327" />
          <Vector3 X="-9751.845" Y="928.3823" Z="28.05096" />
          <Vector3 X="-9750.773" Y="917.9372" Z="26.85276" />
          <Vector3 X="-9749.848" Y="907.4781" Z="25.60084" />
          <Vector3 X="-9748.922" Y="897.0189" Z="23.32217" />
          <Vector3 X="-9747.963" Y="886.5629" Z="20.00733" />
          <Vector3 X="-9745.841" Y="863.89" Z="19.77423" Type="Swimming" />
          <Vector3 X="-9743.9" Y="843.2979" Z="19.77423" Type="Swimming" />
          <Vector3 X="-9745.283" Y="830.9104" Z="21.04862" />
          <Vector3 X="-9748.273" Y="820.8503" Z="25.87397" />
          <Vector3 X="-9750.698" Y="810.639" Z="29.96349" />
          <Vector3 X="-9751.918" Y="800.2106" Z="29.24907" />
          <Vector3 X="-9753.198" Y="787.5914" Z="27.2868" />
          <Vector3 X="-9754.878" Y="763.168" Z="25.07907" />
          <Vector3 X="-9754.752" Y="738.6691" Z="24.96383" />
          <Vector3 X="-9756.554" Y="714.249" Z="25.1637" />
          <Vector3 X="-9759.838" Y="689.9747" Z="26.05021" />
          <Vector3 X="-9755.729" Y="665.149" Z="27.73685" />
          <Vector3 X="-9748.786" Y="642.4724" Z="28.95858" />
          <Vector3 X="-9742.15" Y="619.6826" Z="30.01375" />
          <Vector3 X="-9738.886" Y="593.9423" Z="31.22065" />
          <Vector3 X="-9740.054" Y="569.4718" Z="34.32047" />
          <Vector3 X="-9741.47" Y="545.8371" Z="35.87904" />
          <Vector3 X="-9744.369" Y="520.7229" Z="35.61287" />
          <Vector3 X="-9747.549" Y="496.43" Z="34.06021" />
          <Vector3 X="-9751.011" Y="472.9695" Z="33.55564" />
          <Vector3 X="-9754.563" Y="447.9373" Z="35.54412" />
          <Vector3 X="-9756.191" Y="423.5534" Z="37.37756" />
          <Vector3 X="-9750.297" Y="399.7961" Z="39.19507" />
          <Vector3 X="-9743.894" Y="376.9606" Z="40.90289" />
          <Vector3 X="-9735.299" Y="354.026" Z="42.44606" />
          <Vector3 X="-9723.7" Y="332.4679" Z="43.88407" />
          <Vector3 X="-9709.989" Y="312.1671" Z="45.15788" />
          <Vector3 X="-9694.987" Y="292.804" Z="46.18362" />
          <Vector3 X="-9677.697" Y="275.4912" Z="46.55201" />
          <Vector3 X="-9657.188" Y="262.1628" Z="46.41928" />
          <Vector3 X="-9634.024" Y="254.514" Z="46.67519" />
          <Vector3 X="-9609.596" Y="253.1873" Z="47.38708" />
          <Vector3 X="-9585.1" Y="252.779" Z="48.30509" />
          <Vector3 X="-9560.634" Y="251.5255" Z="49.58715" />
          <Vector3 X="-9537.466" Y="244.4616" Z="50.64334" />
          <Vector3 X="-9517.637" Y="230.2165" Z="51.94091" />
          <Vector3 X="-9501.764" Y="211.5885" Z="53.41478" />
          <Vector3 X="-9489.125" Y="190.6487" Z="54.77959" />
          <Vector3 X="-9482.205" Y="167.3986" Z="55.94913" />
          <Vector3 X="-9481.798" Y="142.9644" Z="56.57358" />
          <Vector3 X="-9483.539" Y="117.7511" Z="56.54588" />
          <Vector3 X="-9486.162" Y="94.18061" Z="56.33152" />
          <Vector3 X="-9488.212" Y="75.13381" Z="56.12712" />
          <Vector3 X="-9481.84" Y="68.6726" Z="56.34885" />
          <Vector3 X="-9470.612" Y="66.37325" Z="56.1933" />
          <Vector3 X="-9446.348" Y="67.64789" Z="56.23897" />
          <Vector3 X="-9424.922" Y="79.24314" Z="56.58344" />
          <Vector3 X="-9404.616" Y="94.29971" Z="58.21313" />
          <Vector3 X="-9382.426" Y="104.5437" Z="59.89448" />
          <Vector3 X="-9359.803" Y="113.9153" Z="61.69321" />
          <Vector3 X="-9337.957" Y="124.9611" Z="63.57322" />
          <Vector3 X="-9316.227" Y="136.2766" Z="64.79177" />
          <Vector3 X="-9294.204" Y="144.9186" Z="66.15897" />
          <Vector3 X="-9270.942" Y="152.5168" Z="67.05035" />
          <Vector3 X="-9250.347" Y="165.4926" Z="67.86732" />
          <Vector3 X="-9234.786" Y="183.4346" Z="67.66879" />
          <Vector3 X="-9218.092" Y="202.3567" Z="68.89833" />
          <Vector3 X="-9201.719" Y="220.5307" Z="71.14557" />
          <Vector3 X="-9187.184" Y="239.9464" Z="72.49689" />
          <Vector3 X="-9183.11" Y="264.0106" Z="74.32241" />
          <Vector3 X="-9181.39" Y="288.4465" Z="76.63077" />
          <Vector3 X="-9180.128" Y="312.9138" Z="79.26989" />
          <Vector3 X="-9174.53" Y="336.5843" Z="83.58405" />
          <Vector3 X="-9159.566" Y="355.7173" Z="88.57585" />
          <Vector3 X="-9141.703" Y="372.4252" Z="90.61793" />
          <Vector3 X="-9123.948" Y="389.3081" Z="91.51352" />
          <Vector3 X="-9105.975" Y="405.9531" Z="92.64664" />
          <Vector3 X="-9085.938" Y="420.0355" Z="92.35367" />
          <Vector3 X="-9065.841" Y="434.0465" Z="93.05627" />
          <Vector3 X="-9046.338" Y="448.8716" Z="93.05627" />
          <Vector3 X="-9028.808" Y="462.6818" Z="93.74458" />
          <Vector3 X="-9020.296" Y="469.3876" Z="95.2586" />
          <Vector3 X="-9008.265" Y="478.8659" Z="96.51597" />
          <Vector3 X="-8994.959" Y="489.3491" Z="96.61775" />
          <Vector3 X="-8984.302" Y="497.7444" Z="96.46755" />
          <Vector3 X="-8975.79" Y="504.4502" Z="96.38913" />
          <Vector3 X="-8967.452" Y="510.8288" Z="96.35072" />
          <Vector3 X="-8957.974" Y="515.0907" Z="96.35541" />
          <Vector3 X="-8948.055" Y="514.5797" Z="96.35562" />
          <Vector3 X="-8938.874" Y="509.5392" Z="95.3999" />
          <Vector3 X="-8929.873" Y="504.1703" Z="93.8362" />
          <Vector3 X="-8919.186" Y="503.9505" Z="93.89696" />
          <Vector3 X="-8913.38" Y="511.9799" Z="93.86458" />
          <Vector3 X="-8916.084" Y="521.5894" Z="93.82487" />
          <Vector3 X="-8920.861" Y="530.9186" Z="94.76052" />
          <Vector3 X="-8923.168" Y="541.0966" Z="94.26777" />
          <Vector3 X="-8918.807" Y="550.3024" Z="94.0716" />
          <Vector3 X="-8910.594" Y="556.3243" Z="93.61069" />
          <Vector3 X="-8902.093" Y="563.0066" Z="92.9939" />
          <Vector3 X="-8893.938" Y="569.6208" Z="92.56765" />
          <Vector3 X="-8885.782" Y="576.2349" Z="92.85041" />
          <Vector3 X="-8877.628" Y="582.8491" Z="92.99596" />
          <Vector3 X="-8869.473" Y="589.4633" Z="92.48389" />
          <Vector3 X="-8861.317" Y="596.0775" Z="92.09871" />
          <Vector3 X="-8853.163" Y="602.6917" Z="92.07234" />
          <Vector3 X="-8845.008" Y="609.3058" Z="92.68244" />
          <Vector3 X="-8836.854" Y="615.92" Z="93.12768" />
          <Vector3 X="-8829.971" Y="621.5024" Z="93.95701" />
          <Vector3 X="-8826.463" Y="619.7951" Z="94.34423" />
          <Vector3 X="-8818.605" Y="613.3491" Z="95.2165" />
          <Vector3 X="-8810.538" Y="606.1505" Z="95.99918" />
          <Vector3 X="-8805.77" Y="597.3762" Z="96.84113" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEOutSleepingDruids</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="9749.338" Y="1539.553" Z="1279.388" />
          <Vector3 X="9745.901" Y="1551.543" Z="1279.464" />
          <Vector3 X="9740.396" Y="1568.155" Z="1271.395" />
          <Vector3 X="9734.575" Y="1585.25" Z="1270.558" />
          <Vector3 X="9729.157" Y="1601.275" Z="1274.705" />
          <Vector3 X="9727.375" Y="1611.469" Z="1277.335" />
          <Vector3 X="9736.658" Y="1622.842" Z="1279" />
          <Vector3 X="9752.947" Y="1629.763" Z="1282.54" />
          <Vector3 X="9767.084" Y="1622.487" Z="1284.168" />
          <Vector3 X="9772.541" Y="1605.923" Z="1287.904" />
          <Vector3 X="9779.129" Y="1589.741" Z="1289.914" />
          <Vector3 X="9790.72" Y="1576.737" Z="1291.253" />
          <Vector3 X="9806.617" Y="1570.835" Z="1295.296" />
          <Vector3 X="9810.183" Y="1578.807" Z="1295.836" />
          <Vector3 X="9809.281" Y="1583.088" Z="1296.807" />
          <Vector3 X="9803.534" Y="1590.936" Z="1299.723" />
          <Vector3 X="9796.853" Y="1597.416" Z="1300.829" />
          <Vector3 X="9801.277" Y="1612.384" Z="1301.015" />
          <Vector3 X="9815.349" Y="1622.899" Z="1301.803" />
          <Vector3 X="9831.936" Y="1623.448" Z="1304.842" />
          <Vector3 X="9833.917" Y="1617.764" Z="1305.758" />
          <Vector3 X="9840.271" Y="1602.072" Z="1308.166" />
          <Vector3 X="9848.829" Y="1586.493" Z="1310.947" />
          <Vector3 X="9854.587" Y="1576.663" Z="1311.958" />
          <Vector3 X="9857.935" Y="1570.643" Z="1314.573" />
          <Vector3 X="9857.007" Y="1565.814" Z="1315.78" />
          <Vector3 X="9852.488" Y="1560.845" Z="1317.641" />
          <Vector3 X="9845.33" Y="1561.954" Z="1319.776" />
          <Vector3 X="9839.353" Y="1568.874" Z="1322.285" />
          <Vector3 X="9841.612" Y="1577.408" Z="1325.367" />
          <Vector3 X="9845.658" Y="1577.758" Z="1325.313" />
          <Vector3 X="9855.394" Y="1576.217" Z="1328.018" />
          <Vector3 X="9859.217" Y="1566.909" Z="1329.167" />
          <Vector3 X="9860.553" Y="1562.908" Z="1329.51" />
          <Vector3 X="9862.677" Y="1559.995" Z="1329.322" />
          <Vector3 X="9871.854" Y="1555.753" Z="1329.287" />
          <Vector3 X="9879.364" Y="1555.635" Z="1328.203" />
          <Vector3 X="9883.858" Y="1554.659" Z="1327.616" />
          <Vector3 X="9897.695" Y="1551.814" Z="1325.736" />
          <Vector3 X="9914.302" Y="1548.465" Z="1322.46" />
          <Vector3 X="9929.882" Y="1545.534" Z="1317.554" />
          <Vector3 X="9936.635" Y="1541.908" Z="1315.584" />
          <Vector3 X="9942.279" Y="1541.246" Z="1313.834" />
          <Vector3 X="9953.497" Y="1553.776" Z="1313.976" />
          <Vector3 X="9963.819" Y="1568.588" Z="1315.544" />
          <Vector3 X="9973.804" Y="1582.272" Z="1320.334" />
          <Vector3 X="9983.831" Y="1597.182" Z="1325.375" />
          <Vector3 X="9984.636" Y="1604.681" Z="1328.13" />
          <Vector3 X="9989.213" Y="1607.658" Z="1328.849" />
          <Vector3 X="10002.12" Y="1619.295" Z="1329.495" />
          <Vector3 X="10011.49" Y="1634.688" Z="1324.719" />
          <Vector3 X="10014.66" Y="1651.237" Z="1325.713" />
          <Vector3 X="10016.7" Y="1669.179" Z="1327.628" />
          <Vector3 X="10017.58" Y="1676.23" Z="1327.6" />
          <Vector3 X="10017.92" Y="1690.996" Z="1327.34" />
          <Vector3 X="10015.95" Y="1708.327" Z="1327.51" />
          <Vector3 X="10014.73" Y="1711.938" Z="1327.838" />
          <Vector3 X="10014.7" Y="1717.398" Z="1328.991" />
          <Vector3 X="10012.77" Y="1735.223" Z="1332.526" />
          <Vector3 X="10006.23" Y="1750.825" Z="1334.133" />
          <Vector3 X="9993.178" Y="1762.99" Z="1333.311" />
          <Vector3 X="9976.876" Y="1765.833" Z="1334.232" />
          <Vector3 X="9959.743" Y="1762.271" Z="1334.416" />
          <Vector3 X="9943.328" Y="1756.312" Z="1331.964" />
          <Vector3 X="9926.847" Y="1748.926" Z="1328.643" />
          <Vector3 X="9911.417" Y="1742.011" Z="1327.967" />
          <Vector3 X="9895.369" Y="1735.038" Z="1330.401" />
          <Vector3 X="9878.229" Y="1731.667" Z="1329.596" />
          <Vector3 X="9860.364" Y="1729.028" Z="1327.426" />
          <Vector3 X="9843.496" Y="1730.141" Z="1323.42" />
          <Vector3 X="9826.044" Y="1731.399" Z="1319.287" />
          <Vector3 X="9808.582" Y="1732.551" Z="1316.369" />
          <Vector3 X="9791.139" Y="1733.947" Z="1316.354" />
          <Vector3 X="9773.686" Y="1735.122" Z="1312.279" />
          <Vector3 X="9755.659" Y="1734.054" Z="1308.101" />
          <Vector3 X="9738.779" Y="1732.737" Z="1304.858" />
          <Vector3 X="9722.172" Y="1727.277" Z="1303.02" />
          <Vector3 X="9705.575" Y="1721.732" Z="1302.409" />
          <Vector3 X="9688.592" Y="1717.516" Z="1303.226" />
          <Vector3 X="9671.515" Y="1713.704" Z="1302.236" />
          <Vector3 X="9654.297" Y="1715.781" Z="1298.254" />
          <Vector3 X="9637.895" Y="1721.88" Z="1294.579" />
          <Vector3 X="9620.987" Y="1726.247" Z="1291.572" />
          <Vector3 X="9603.612" Y="1726.798" Z="1288.926" />
          <Vector3 X="9586.653" Y="1728.262" Z="1289.145" />
          <Vector3 X="9574.693" Y="1740.959" Z="1291.03" />
          <Vector3 X="9565.156" Y="1746.524" Z="1290.985" />
          <Vector3 X="9547.687" Y="1747.439" Z="1290.933" />
          <Vector3 X="9530.196" Y="1748.022" Z="1292.379" />
          <Vector3 X="9513.345" Y="1743.534" Z="1294.269" />
          <Vector3 X="9496.752" Y="1737.973" Z="1295.17" />
          <Vector3 X="9479.682" Y="1734.444" Z="1294.418" />
          <Vector3 X="9462.494" Y="1731.501" Z="1297.874" />
          <Vector3 X="9451.379" Y="1726.889" Z="1300.296" />
          <Vector3 X="9444.43" Y="1719.93" Z="1301.111" />
          <Vector3 X="9434.405" Y="1713.318" Z="1301.782" />
          <Vector3 X="9420.063" Y="1704.372" Z="1305.057" />
          <Vector3 X="9416.733" Y="1702.51" Z="1305.559" />
          <Vector3 X="9406.32" Y="1692.035" Z="1305.934" />
          <Vector3 X="9393.642" Y="1680.815" Z="1303.06" />
          <Vector3 X="9379.859" Y="1670.972" Z="1298.591" />
          <Vector3 X="9364.487" Y="1661.501" Z="1298.39" />
          <Vector3 X="9348.231" Y="1653.658" Z="1299.368" />
          <Vector3 X="9332.566" Y="1647.209" Z="1300.198" />
          <Vector3 X="9315.252" Y="1642.777" Z="1301.179" />
          <Vector3 X="9297.247" Y="1643.569" Z="1301.239" />
          <Vector3 X="9282.48" Y="1643.271" Z="1300.761" />
          <Vector3 X="9276.497" Y="1643.926" Z="1300.954" />
          <Vector3 X="9268.343" Y="1644.664" Z="1301.979" />
          <Vector3 X="9263.445" Y="1644.837" Z="1302.687" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEStormwindToHumanStart</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-8869.068" Y="590.5622" Z="92.43988" />
          <Vector3 X="-8871.964" Y="588.2355" Z="92.6389" />
          <Vector3 X="-8877.562" Y="583.3548" Z="92.99609" />
          <Vector3 X="-8890.752" Y="571.8545" Z="92.49303" />
          <Vector3 X="-8903.943" Y="560.3542" Z="93.16303" />
          <Vector3 X="-8916.696" Y="548.3981" Z="94.05532" />
          <Vector3 X="-8922.412" Y="532.9213" Z="94.75941" />
          <Vector3 X="-8915.053" Y="516.6785" Z="93.88393" />
          <Vector3 X="-8921.849" Y="501.1052" Z="93.88472" />
          <Vector3 X="-8937.604" Y="499.3647" Z="93.89021" />
          <Vector3 X="-8949.811" Y="511.881" Z="96.35817" />
          <Vector3 X="-8965.771" Y="512.8862" Z="96.35563" />
          <Vector3 X="-8978.53" Y="500.9437" Z="96.41759" />
          <Vector3 X="-8995.659" Y="487.1522" Z="96.62116" />
          <Vector3 X="-9015.137" Y="472.2898" Z="95.96643" />
          <Vector3 X="-9034.614" Y="457.4275" Z="93.05638" />
          <Vector3 X="-9053.468" Y="443.0407" Z="93.05638" />
          <Vector3 X="-9073.841" Y="428.0741" Z="93.05638" />
          <Vector3 X="-9093.854" Y="413.9436" Z="92.07334" />
          <Vector3 X="-9113.78" Y="399.6888" Z="92.51334" />
          <Vector3 X="-9131.773" Y="383.0964" Z="90.60928" />
          <Vector3 X="-9149.421" Y="366.1032" Z="90.33221" />
          <Vector3 X="-9165.53" Y="347.7027" Z="86.93872" />
          <Vector3 X="-9175.29" Y="326.3139" Z="81.53576" />
          <Vector3 X="-9177.827" Y="301.9569" Z="78.69267" />
          <Vector3 X="-9178.952" Y="277.4844" Z="75.49319" />
          <Vector3 X="-9182.044" Y="253.216" Z="73.65109" />
          <Vector3 X="-9192.75" Y="231.3149" Z="71.8184" />
          <Vector3 X="-9208.39" Y="212.4759" Z="70.46281" />
          <Vector3 X="-9224.975" Y="194.4441" Z="68.31499" />
          <Vector3 X="-9240.496" Y="175.4943" Z="67.80965" />
          <Vector3 X="-9257.59" Y="158.2078" Z="67.62733" />
          <Vector3 X="-9280.599" Y="149.91" Z="66.67028" />
          <Vector3 X="-9303.259" Y="140.7424" Z="65.68849" />
          <Vector3 X="-9324.422" Y="128.3975" Z="64.08955" />
          <Vector3 X="-9346.187" Y="117.1684" Z="62.83804" />
          <Vector3 X="-9369.425" Y="109.4347" Z="60.85164" />
          <Vector3 X="-9392.336" Y="100.817" Z="59.01754" />
          <Vector3 X="-9413.643" Y="88.75315" Z="57.30589" />
          <Vector3 X="-9433.155" Y="73.94472" Z="56.10411" />
          <Vector3 X="-9443.824" Y="62.97548" Z="56.19087" />
          <Vector3 X="-9430.276" Y="46.4063" Z="56.67581" />
          <Vector3 X="-9414.396" Y="26.73358" Z="58.01157" />
          <Vector3 X="-9397.424" Y="9.142872" Z="59.91225" />
          <Vector3 X="-9381.271" Y="-8.221945" Z="61.47866" />
          <Vector3 X="-9364.305" Y="-25.83846" Z="63.38431" />
          <Vector3 X="-9345.016" Y="-42.15033" Z="65.26314" />
          <Vector3 X="-9323.087" Y="-52.68493" Z="66.35615" />
          <Vector3 X="-9299.396" Y="-58.75017" Z="67.13561" />
          <Vector3 X="-9279.847" Y="-72.04083" Z="68.23685" />
          <Vector3 X="-9259.304" Y="-86.69941" Z="69.43369" />
          <Vector3 X="-9238.892" Y="-98.60742" Z="70.65997" />
          <Vector3 X="-9216.176" Y="-107.7328" Z="71.20568" />
          <Vector3 X="-9192.013" Y="-111.6423" Z="71.04786" />
          <Vector3 X="-9167.909" Y="-109.1086" Z="72.04552" />
          <Vector3 X="-9147.095" Y="-96.38321" Z="74.48054" />
          <Vector3 X="-9126.779" Y="-82.6888" Z="78.09924" />
          <Vector3 X="-9106.485" Y="-68.96457" Z="82.79305" />
          <Vector3 X="-9087.182" Y="-53.87806" Z="85.98546" />
          <Vector3 X="-9071.92" Y="-45.25723" Z="87.97427" />
          <Vector3 X="-9067.393" Y="-44.73969" Z="88.08285" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Seek Redemption!</Name>
      <QuestId>
        <int>489</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="9488.271" Y="740.9401" Z="1257.065" />
          <Vector3 X="9751.104" Y="808.5339" Z="1299.12" />
          <Vector3 X="9924.582" Y="809.4827" Z="1316.651" />
          <Vector3 X="9950.385" Y="852.2634" Z="1320.201" />
          <Vector3 X="9947.278" Y="818.6374" Z="1330.072" />
          <Vector3 X="10016.2" Y="679.2406" Z="1322.91" />
          <Vector3 X="10103.58" Y="516.837" Z="1326.379" />
          <Vector3 X="10012.76" Y="419.4118" Z="1312.195" />
        </HotSpots>
        <EntryIdObjects>
          <int>1673</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Balance of Nature</Name>
      <QuestId>
        <int>456</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10303.6" Y="890.2092" Z="1331.459" />
          <Vector3 X="10408.44" Y="662.6602" Z="1325.122" />
          <Vector3 X="10502.12" Y="669.5802" Z="1322.024" />
        </HotSpots>
        <EntryTarget>
          <int>1984</int>
          <int>2031</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Balance of Nature2</Name>
      <QuestId>
        <int>457</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10518.06" Y="669.0043" Z="1321.37" />
          <Vector3 X="10636.61" Y="679.3651" Z="1328.683" />
        </HotSpots>
        <EntryTarget>
          <int>1985</int>
          <int>2032</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Emerald Dreamcatcher</Name>
      <QuestId>
        <int>2438</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="9808.906" Y="353.2579" Z="1308.459" />
        </HotSpots>
        <EntryIdObjects>
          <int>126158</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Enchanted Glade</Name>
      <QuestId>
        <int>937</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10544.75" Y="1997.078" Z="1325.97" />
          <Vector3 X="10448.34" Y="1925.614" Z="1318.542" />
          <Vector3 X="10323.86" Y="1895.549" Z="1321.63" />
        </HotSpots>
        <EntryTarget>
          <int>2015</int>
          <int>2017</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return ObjectManager.Me.WowClass != WoWClass.Hunter;</CanCondition>
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Glowing Fruit</Name>
      <QuestId>
        <int>930</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Relics of Wakening</Name>
      <QuestId>
        <int>483</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="9885.769" Y="1486.676" Z="1279.081" />
        </HotSpots>
        <EntryIdObjects>
          <int>2740</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Relics of Wakening2</Name>
      <QuestId>
        <int>483</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="9753.704" Y="1583.691" Z="1299.581" />
        </HotSpots>
        <EntryIdObjects>
          <int>2739</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Relics of Wakening3</Name>
      <QuestId>
        <int>483</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="9709.838" Y="1543.607" Z="1254.606" />
        </HotSpots>
        <EntryIdObjects>
          <int>2741</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>true</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Relics of Wakening4</Name>
      <QuestId>
        <int>483</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="9776.618" Y="1553.069" Z="1300.684" />
        </HotSpots>
        <EntryIdObjects>
          <int>2742</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>true</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Road to Darnassus</Name>
      <QuestId>
        <int>487</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10002.71" Y="1352.397" Z="1283.819" />
          <Vector3 X="10033.6" Y="1409.963" Z="1276.181" />
          <Vector3 X="9999.327" Y="1473.641" Z="1288.276" />
          <Vector3 X="9976.991" Y="1507.132" Z="1298.847" />
        </HotSpots>
        <EntryTarget>
          <int>2152</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Sleeping Druid</Name>
      <QuestId>
        <int>2541</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="9782.268" Y="1588.133" Z="1289.925" />
          <Vector3 X="9753.968" Y="1630.67" Z="1282.59" />
          <Vector3 X="9740.146" Y="1574.629" Z="1269.169" />
          <Vector3 X="9748.685" Y="1556.101" Z="1263.137" />
          <Vector3 X="9794.155" Y="1506.55" Z="1257.835" />
          <Vector3 X="9836.715" Y="1495.328" Z="1259.022" />
        </HotSpots>
        <EntryTarget>
          <int>2009</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Woodland Protector</Name>
      <QuestId>
        <int>458</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Woodland Protector2</Name>
      <QuestId>
        <int>459</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10307.66" Y="986.8331" Z="1337.027" />
          <Vector3 X="10334.22" Y="1031.996" Z="1339.264" />
          <Vector3 X="10514.01" Y="1050.801" Z="1323.577" />
        </HotSpots>
        <EntryTarget>
          <int>1988</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Timberling Seeds</Name>
      <QuestId>
        <int>918</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="9554.806" Y="717.6976" Z="1255.619" />
          <Vector3 X="9610.863" Y="750.0471" Z="1265.583" />
          <Vector3 X="9437.832" Y="720.7026" Z="1260.804" />
          <Vector3 X="9381.74" Y="795.7249" Z="1259.879" />
          <Vector3 X="9435.973" Y="1083.356" Z="1251.628" />
          <Vector3 X="9350.21" Y="1135.646" Z="1253.91" />
          <Vector3 X="9338.283" Y="1251.343" Z="1250.324" />
          <Vector3 X="9412.136" Y="1243.593" Z="1253.789" />
          <Vector3 X="9471.069" Y="1163.738" Z="1254.288" />
          <Vector3 X="9516.532" Y="1102.377" Z="1257.336" />
        </HotSpots>
        <EntryTarget>
          <int>2022</int>
          <int>2025</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Timberling Sprouts</Name>
      <QuestId>
        <int>919</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="9497.083" Y="1115.989" Z="1253.331" />
          <Vector3 X="9484.978" Y="1138.968" Z="1252.524" />
          <Vector3 X="9430.219" Y="1217.182" Z="1249.751" />
          <Vector3 X="9389.185" Y="1263.419" Z="1251.335" />
          <Vector3 X="9369.043" Y="1269.133" Z="1251.254" />
          <Vector3 X="9325.974" Y="1242.954" Z="1252.825" />
          <Vector3 X="9345.225" Y="1200.405" Z="1247.245" />
          <Vector3 X="9353.248" Y="1132.612" Z="1253.606" />
          <Vector3 X="9410.237" Y="1120.119" Z="1249.793" />
          <Vector3 X="9438.412" Y="1091.531" Z="1251.897" />
          <Vector3 X="9460.852" Y="1011.783" Z="1252.72" />
          <Vector3 X="9361.001" Y="824.9019" Z="1263.642" />
          <Vector3 X="9374.333" Y="788.5007" Z="1262.831" />
          <Vector3 X="9382.869" Y="757.5236" Z="1261.877" />
          <Vector3 X="9420.354" Y="727.2607" Z="1259.782" />
          <Vector3 X="9502.094" Y="663.2361" Z="1267.799" />
          <Vector3 X="9590.625" Y="697.5635" Z="1267.719" />
          <Vector3 X="9654.538" Y="753.6727" Z="1274.636" />
        </HotSpots>
        <EntryIdObjects>
          <int>4608</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Training the Beast</Name>
      <QuestId>
        <int>6103</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Tumors</Name>
      <QuestId>
        <int>923</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10413.38" Y="1683.057" Z="1293.239" />
          <Vector3 X="10411.39" Y="1685.8" Z="1294.302" />
          <Vector3 X="10580.94" Y="1652.605" Z="1281.535" />
          <Vector3 X="10808.95" Y="1615.567" Z="1271.112" />
          <Vector3 X="10878.26" Y="1577.896" Z="1273.764" />
        </HotSpots>
        <EntryTarget>
          <int>2027</int>
          <int>2029</int>
          <int>2030</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition>return ObjectManager.Me.WowClass != WoWClass.Hunter;</CanCondition>
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Twisted Hatred</Name>
      <QuestId>
        <int>932</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10129.1" Y="1148.93" Z="1314.479" />
        </HotSpots>
        <EntryTarget>
          <int>2038</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Webwood Egg</Name>
      <QuestId>
        <int>917</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="10934.27" Y="923.3567" Z="1340.25" />
        </HotSpots>
        <EntryIdObjects>
          <int>4406</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Webwood Venom</Name>
      <QuestId>
        <int>916</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10704.6" Y="944.455" Z="1328.218" />
        </HotSpots>
        <EntryTarget>
          <int>1986</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Zenn's Bidding</Name>
      <QuestId>
        <int>488</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="9801.758" Y="761.9455" Z="1302.2" />
          <Vector3 X="9737.167" Y="653.5079" Z="1297.217" />
          <Vector3 X="9933.54" Y="543.988" Z="1306.795" />
          <Vector3 X="10031.46" Y="481.7835" Z="1315.715" />
          <Vector3 X="10090.79" Y="434.7144" Z="1323.818" />
          <Vector3 X="9997.042" Y="610.468" Z="1315.794" />
          <Vector3 X="9973.23" Y="742.7284" Z="1322.096" />
          <Vector3 X="9665.218" Y="588.467" Z="1307.968" />
        </HotSpots>
        <EntryTarget>
          <int>1998</int>
          <int>2042</int>
          <int>1995</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>true</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEBetterPosFurniture</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="9821.378" Y="383.0309" Z="1308.054" />
          <Vector3 X="9816.503" Y="382.4637" Z="1308.419" />
          <Vector3 X="9813.467" Y="380.7747" Z="1308.436" />
          <Vector3 X="9811.539" Y="378.0039" Z="1308.191" />
          <Vector3 X="9810.932" Y="374.5894" Z="1307.798" />
          <Vector3 X="9811.041" Y="371.0931" Z="1307.677" />
          <Vector3 X="9811.444" Y="367.5128" Z="1307.781" />
          <Vector3 X="9812.463" Y="364.2838" Z="1308.768" />
          <Vector3 X="9813.93" Y="361.1104" Z="1308.784" />
          <Vector3 X="9815.932" Y="358.2504" Z="1308.783" />
          <Vector3 X="9818.333" Y="355.5639" Z="1308.46" />
          <Vector3 X="9819.864" Y="352.8908" Z="1308.46" />
          <Vector3 X="9818.525" Y="352.1447" Z="1308.46" />
          <Vector3 X="9815.226" Y="351.1673" Z="1308.46" />
          <Vector3 X="9812.032" Y="352.5365" Z="1308.46" />
          <Vector3 X="9808.646" Y="352.9225" Z="1308.46" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEShipToFlightMaster</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-3729.986" Y="-587.4641" Z="6.329919" />
          <Vector3 X="-3729.493" Y="-594.0181" Z="6.512746" />
          <Vector3 X="-3728.15" Y="-604.4185" Z="6.782482" />
          <Vector3 X="-3733.842" Y="-612.8969" Z="6.981662" />
          <Vector3 X="-3742.245" Y="-619.191" Z="7.469694" />
          <Vector3 X="-3750.704" Y="-625.412" Z="7.949782" />
          <Vector3 X="-3759.121" Y="-631.6866" Z="8.285196" />
          <Vector3 X="-3765.21" Y="-639.9509" Z="8.449805" />
          <Vector3 X="-3763.876" Y="-650.24" Z="8.335206" />
          <Vector3 X="-3759.999" Y="-659.9962" Z="8.501222" />
          <Vector3 X="-3755.529" Y="-669.4827" Z="8.627201" />
          <Vector3 X="-3750.066" Y="-678.4496" Z="8.801209" />
          <Vector3 X="-3744.69" Y="-687.4688" Z="8.920442" />
          <Vector3 X="-3739.556" Y="-696.6266" Z="8.562628" />
          <Vector3 X="-3735.674" Y="-706.3677" Z="8.181865" />
          <Vector3 X="-3736.366" Y="-716.506" Z="8.313945" />
          <Vector3 X="-3743.198" Y="-724.4305" Z="8.330035" />
          <Vector3 X="-3750.725" Y="-731.7518" Z="8.158525" />
          <Vector3 X="-3758.008" Y="-738.8416" Z="8.009989" />
          <Vector3 X="-3765.61" Y="-746.558" Z="7.995196" />
          <Vector3 X="-3771.151" Y="-755.0717" Z="7.797825" />
          <Vector3 X="-3776.873" Y="-763.8729" Z="8.390805" />
          <Vector3 X="-3783.196" Y="-772.2531" Z="8.705911" />
          <Vector3 X="-3785.769" Y="-775.2198" Z="8.880733" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTESwimToStormwind</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-3788.017" Y="-774.7888" Z="8.903187" />
          <Vector3 X="-3801.882" Y="-775.6892" Z="7.674818" />
          <Vector3 X="-3809.613" Y="-778.294" Z="7.90246" />
          <Vector3 X="-3814.183" Y="-780.8698" Z="8.798443" />
          <Vector3 X="-3823.634" Y="-786.1185" Z="10.12903" />
          <Vector3 X="-3833.365" Y="-788.9682" Z="8.79556" />
          <Vector3 X="-3840.933" Y="-787.0729" Z="6.458512" />
          <Vector3 X="-3849.511" Y="-783.8116" Z="3.788732" />
          <Vector3 X="-3852.868" Y="-782.4787" Z="2.46752" />
          <Vector3 X="-3859.053" Y="-778.148" Z="-0.9710214" />
          <Vector3 X="-3862.537" Y="-775.6152" Z="-1.51558" Type="Swimming" />
          <Vector3 X="-3863.891" Y="-774.4693" Z="-1.48983" Type="Swimming" />
          <Vector3 X="-3868.007" Y="-770.2381" Z="-1.48983" Type="Swimming" />
          <Vector3 X="-3876.502" Y="-761.5049" Z="-1.48983" Type="Swimming" />
          <Vector3 X="-3884.47" Y="-753.3134" Z="-1.48983" Type="Swimming" />
          <Vector3 X="-3892.702" Y="-744.851" Z="-1.48983" Type="Swimming" />
          <Vector3 X="-3900.933" Y="-736.3887" Z="-1.48983" Type="Swimming" />
          <Vector3 X="-3909.165" Y="-727.9263" Z="-1.48983" Type="Swimming" />
          <Vector3 X="-3917.66" Y="-719.1931" Z="-1.48983" Type="Swimming" />
          <Vector3 X="-3925.628" Y="-711.0016" Z="-1.48983" Type="Swimming" />
          <Vector3 X="-3933.86" Y="-702.5392" Z="-1.48983" Type="Swimming" />
          <Vector3 X="-3942.092" Y="-694.0768" Z="-1.48983" Type="Swimming" />
          <Vector3 X="-3950.323" Y="-685.6145" Z="-1.48983" Type="Swimming" />
          <Vector3 X="-3958.555" Y="-677.1521" Z="-1.48983" Type="Swimming" />
          <Vector3 X="-3966.786" Y="-668.6898" Z="-1.48983" Type="Swimming" />
          <Vector3 X="-3972.813" Y="-661.5674" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-3978.927" Y="-655.1695" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-3987.74" Y="-647.317" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-3997.335" Y="-639.2469" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4005.96" Y="-632.3027" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4015.79" Y="-624.5208" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4025.694" Y="-618.1326" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4036.394" Y="-613.1472" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4046.905" Y="-608.6631" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4057.767" Y="-604.0377" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4068.628" Y="-599.4122" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4079.49" Y="-594.7867" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4090.352" Y="-590.1612" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4101.456" Y="-585.149" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4112.186" Y="-580.2267" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4122.573" Y="-575.462" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4133.304" Y="-570.5397" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4144.034" Y="-565.6175" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4154.765" Y="-560.6952" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4165.495" Y="-555.7729" Z="-1.46149" Type="Swimming" />
          <Vector3 X="-4171.57" Y="-552.0178" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4180.694" Y="-546.4378" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4191.074" Y="-540.1039" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4200.582" Y="-533.7267" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4210.121" Y="-526.7869" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4217.74" Y="-517.77" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4225.339" Y="-508.7355" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4233.167" Y="-499.4299" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4240.538" Y="-490.6664" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4248.137" Y="-481.6318" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4254.438" Y="-471.795" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4258.675" Y="-460.7761" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4262.912" Y="-449.7571" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4265.595" Y="-438.2937" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4267.859" Y="-426.3487" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4270.345" Y="-415.1729" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4274.175" Y="-404.0074" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4278.107" Y="-392.8762" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4282.041" Y="-381.7449" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4285.973" Y="-370.6136" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4287.903" Y="-359.0406" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.766" Y="-347.2677" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.789" Y="-335.1083" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.765" Y="-323.657" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.741" Y="-311.8514" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.717" Y="-300.0459" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.693" Y="-288.2404" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.668" Y="-276.4348" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.645" Y="-264.6293" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.621" Y="-252.8238" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.596" Y="-241.0182" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.572" Y="-229.2127" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.548" Y="-217.4072" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.524" Y="-205.6017" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.5" Y="-193.7961" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4288.476" Y="-181.9906" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4287.869" Y="-170.2023" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4287.083" Y="-158.4231" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4286.158" Y="-146.6543" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4284.275" Y="-135.0074" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4280.867" Y="-123.3375" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4277.311" Y="-112.4525" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4273.387" Y="-100.9449" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4269.318" Y="-90.24052" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4265.123" Y="-79.20563" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4260.928" Y="-68.17072" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4256.606" Y="-56.80478" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4252.411" Y="-45.76988" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4248.341" Y="-35.06603" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4244.146" Y="-24.03114" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4239.824" Y="-12.66519" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4235.423" Y="-1.712501" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4230.76" Y="8.744793" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4226.384" Y="18.08912" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4220.747" Y="30.12769" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4215.74" Y="40.81914" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4210.734" Y="51.51059" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4205.578" Y="62.52278" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4200.571" Y="73.21423" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4195.715" Y="83.58494" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4190.408" Y="94.91788" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4179.391" Y="115.7854" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4167.62" Y="136.2459" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4150.726" Y="152.5919" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4132.35" Y="167.4182" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4114.044" Y="182.3282" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4097.991" Y="199.558" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4085.808" Y="219.7826" Z="-1.616472" Type="Swimming" />
          <Vector3 X="-4081.609" Y="245.5103" Z="-0.1751684" />
          <Vector3 X="-4081.776" Y="256.4291" Z="0.3603468" />
          <Vector3 X="-4092.485" Y="285.0762" Z="2.2556" />
          <Vector3 X="-4098.238" Y="302.7737" Z="1.710475" />
          <Vector3 X="-4103.499" Y="329.6143" Z="-1.675098" Type="Swimming" />
          <Vector3 X="-4108.608" Y="351.9395" Z="-1.675098" Type="Swimming" />
          <Vector3 X="-4113.821" Y="375.692" Z="-1.675098" Type="Swimming" />
          <Vector3 X="-4118.197" Y="398.8938" Z="-1.675098" Type="Swimming" />
          <Vector3 X="-4122.575" Y="421.3733" Z="-1.675098" Type="Swimming" />
          <Vector3 X="-4127.589" Y="445.1703" Z="-1.675098" Type="Swimming" />
          <Vector3 X="-4132.37" Y="467.5684" Z="-1.675098" Type="Swimming" />
          <Vector3 X="-4137.292" Y="491.3822" Z="-1.675098" Type="Swimming" />
          <Vector3 X="-4141.18" Y="513.9434" Z="-1.675098" Type="Swimming" />
          <Vector3 X="-4149.979" Y="535.8315" Z="-1.675098" Type="Swimming" />
          <Vector3 X="-4158.815" Y="558.4868" Z="-1.675098" Type="Swimming" />
          <Vector3 X="-4166.842" Y="580.6912" Z="-1.675098" Type="Swimming" />
          <Vector3 X="-4173.951" Y="603.2056" Z="-1.675098" Type="Swimming" />
          <Vector3 X="-4180.675" Y="625.0991" Z="-1.675098" Type="Swimming" />
          <Vector3 X="-4188.861" Y="647.1976" Z="-1.437469" Type="Swimming" />
          <Vector3 X="-4200.188" Y="673.0761" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4208.08" Y="691.3732" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4214.499" Y="707.0638" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4222.279" Y="728.5934" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4230.065" Y="751.6318" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4237.882" Y="773.9105" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4248.048" Y="795.1896" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4262.665" Y="812.769" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4278.769" Y="830.0355" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4293.8" Y="849.1488" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4307.134" Y="868.6259" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4320.949" Y="887.7496" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4338.934" Y="902.9876" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4358.906" Y="915.5673" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4380.251" Y="925.6323" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4399.866" Y="938.5469" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4416.313" Y="955.4791" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4432.128" Y="973.0103" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4448.964" Y="989.5411" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4466.144" Y="1005.727" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4473.447" Y="1026.861" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4473.632" Y="1051.074" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4468.107" Y="1073.273" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4453.385" Y="1092.289" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4435.733" Y="1107.954" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4418.754" Y="1124.355" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4403.009" Y="1141.921" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4393.716" Y="1157.846" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4388.797" Y="1171.696" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4383.743" Y="1194.029" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4376.18" Y="1216.389" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4366.412" Y="1237.865" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4355.446" Y="1259.571" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4345.179" Y="1280.044" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4334.64" Y="1301.96" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4326.477" Y="1324.035" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4322.411" Y="1347.293" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4318.552" Y="1369.868" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4314.636" Y="1393.87" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4311.294" Y="1417.242" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4308.14" Y="1440.642" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4304.946" Y="1463.32" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4301.516" Y="1487.397" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4299.608" Y="1510.202" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4299.688" Y="1534.515" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4303.429" Y="1557.091" Z="-1.52944" Type="Swimming" />
          <Vector3 X="-4308.021" Y="1580.621" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4318.522" Y="1601.766" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4330.753" Y="1621.923" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4335.814" Y="1630.911" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4340.865" Y="1646.333" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4348.305" Y="1669.483" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4355.757" Y="1691.138" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4364.171" Y="1713.199" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4372.846" Y="1735.919" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4381.092" Y="1758.042" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4388.455" Y="1779.729" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4395.656" Y="1802.947" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4401.787" Y="1825.748" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4408.783" Y="1848.276" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4421.356" Y="1868.161" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4436.892" Y="1885.932" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4452.224" Y="1903.88" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4467.012" Y="1922.287" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4481.531" Y="1940" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4497" Y="1957.828" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4515.791" Y="1971.975" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4537.261" Y="1982.683" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4549.48" Y="1985.592" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4561.535" Y="1982.249" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4584.678" Y="1977.578" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4607.514" Y="1976.269" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4621.195" Y="1978.495" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4638.901" Y="1992.473" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4655.071" Y="2010.638" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4670.802" Y="2027.257" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4690.865" Y="2040.957" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4709.744" Y="2053.916" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4730.079" Y="2067.252" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4751.172" Y="2075.635" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4775.3" Y="2073.553" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4798.788" Y="2071.949" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4818.711" Y="2072.35" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4823.148" Y="2072.488" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4847.443" Y="2073.548" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4871.031" Y="2072.861" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4894.217" Y="2068.452" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4916.377" Y="2060.595" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4936.138" Y="2047.677" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4957" Y="2036.794" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-4979.604" Y="2029.975" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5001.907" Y="2022.232" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5023.13" Y="2012.002" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5042.903" Y="2000.455" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5064.934" Y="1990.159" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5086.419" Y="1980.368" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5107.905" Y="1970.577" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5129.772" Y="1961.882" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5153.256" Y="1959.506" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5176.069" Y="1957.497" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5199.526" Y="1951.457" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5213.187" Y="1942.739" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5228.306" Y="1928.625" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5245.967" Y="1911.908" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5264.228" Y="1896.945" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5282.019" Y="1881.436" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5295.353" Y="1863.121" Z="-1.486669" Type="Swimming" />
          <Vector3 X="-5305.906" Y="1844.561" Z="-1.448157" Type="Swimming" />
          <Vector3 X="-5316.039" Y="1822.563" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5318.665" Y="1799.279" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5313.722" Y="1776.248" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5316.275" Y="1753.637" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5330.178" Y="1733.996" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5346.098" Y="1717.534" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5367.993" Y="1709.88" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5391.951" Y="1705.702" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5415.148" Y="1701.303" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5437.546" Y="1696.567" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5460.534" Y="1688.707" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5480.804" Y="1676.633" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5498.948" Y="1661.787" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5520.406" Y="1656.492" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5541.302" Y="1651.918" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5564.323" Y="1646.673" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5586.783" Y="1639.435" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5607.335" Y="1627.943" Z="-1.452048" Type="Swimming" />
          <Vector3 X="-5625.604" Y="1615.513" Z="-1.409525" Type="Swimming" />
          <Vector3 X="-5646.837" Y="1605.308" Z="-1.409525" Type="Swimming" />
          <Vector3 X="-5671.2" Y="1599.755" Z="-1.409525" Type="Swimming" />
          <Vector3 X="-5693.261" Y="1597.814" Z="-1.409525" Type="Swimming" />
          <Vector3 X="-5717.893" Y="1593.255" Z="-1.409525" Type="Swimming" />
          <Vector3 X="-5738.941" Y="1586.541" Z="-1.409525" Type="Swimming" />
          <Vector3 X="-5757.779" Y="1572.866" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-5771.007" Y="1553.332" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-5788.834" Y="1537.948" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-5807.718" Y="1523.792" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-5825.164" Y="1507.909" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-5838.257" Y="1488.313" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-5852.501" Y="1469.517" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-5869.786" Y="1453.555" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-5888.731" Y="1442.118" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-5912.902" Y="1436.606" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-5935.038" Y="1437.294" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-5960.079" Y="1438.594" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-5982.199" Y="1439.662" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-6005.796" Y="1439.257" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-6030.314" Y="1434.1" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-6051.257" Y="1427.164" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-6071.078" Y="1411.9" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-6090.605" Y="1401.466" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-6114.642" Y="1394.593" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-6137.253" Y="1387.878" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-6158.115" Y="1377.224" Z="-1.450801" Type="Swimming" />
          <Vector3 X="-6177.01" Y="1366.795" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6199" Y="1354.782" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6220.822" Y="1345.77" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6242.71" Y="1336.916" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6265.024" Y="1329.341" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6288.359" Y="1325.816" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6311.786" Y="1322.868" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6334.928" Y="1318.419" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6353.639" Y="1306.867" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6368.53" Y="1289.505" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6387.939" Y="1271.424" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6407.205" Y="1255.374" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6424.222" Y="1241.2" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6446.109" Y="1229.279" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6467.5" Y="1224.355" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6490.855" Y="1232.941" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6510.805" Y="1245.569" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6521.407" Y="1252.305" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6536.914" Y="1262.241" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6549.256" Y="1270.364" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6563.018" Y="1286.738" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6579.95" Y="1303.175" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6587.664" Y="1310.064" Z="-1.441151" Type="Swimming" />
          <Vector3 X="-6596.575" Y="1316.598" Z="-1.63499" Type="Swimming" />
          <Vector3 X="-6616.277" Y="1327.996" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6640.227" Y="1331.378" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6662.964" Y="1332.137" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6685.984" Y="1339.967" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6707.797" Y="1349.002" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6730.066" Y="1356.846" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6751.131" Y="1365.774" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6772.61" Y="1377.179" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6793.867" Y="1387.389" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6816.779" Y="1393.026" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6838.692" Y="1401.638" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6858.454" Y="1414.529" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6878.81" Y="1426.452" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6899.95" Y="1435.197" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6923.906" Y="1439.277" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6927.613" Y="1439.688" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6933.514" Y="1439.8" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6957.124" Y="1439.573" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6961.563" Y="1439.523" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6973.352" Y="1440.145" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-6996.892" Y="1441.974" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-7012.379" Y="1443.2" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-7025.647" Y="1443.157" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-7041.711" Y="1445.224" Z="-1.613069" Type="Swimming" />
          <Vector3 X="-7070.792" Y="1460.963" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7086.138" Y="1479.89" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7100.26" Y="1498.79" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7115.528" Y="1516.712" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7134.715" Y="1530.451" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7152.883" Y="1545.497" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7167.235" Y="1564.228" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7184.312" Y="1580.425" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7205.134" Y="1591.478" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7228.432" Y="1594.834" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7251.715" Y="1598.685" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7274.572" Y="1604.589" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7296.974" Y="1613.792" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7316.681" Y="1625.46" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7337.541" Y="1636.455" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7359.656" Y="1644.719" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7381.855" Y="1652.762" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7403.933" Y="1661.13" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7426.201" Y="1668.944" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7448.475" Y="1676.677" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7469.799" Y="1686.803" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7491.272" Y="1696.577" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7514.215" Y="1701.854" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7537.573" Y="1705.296" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7561.119" Y="1706.797" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7585.384" Y="1705.252" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7608.089" Y="1702.258" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7631.341" Y="1698.183" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7654.219" Y="1690.259" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7672.922" Y="1677.196" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7693.314" Y="1665.762" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7715.946" Y="1659.034" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7738.817" Y="1653.206" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7761.87" Y="1648.102" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7784.379" Y="1641.103" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7805.183" Y="1629.948" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7825.843" Y="1618.519" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7847.79" Y="1609.867" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7870.388" Y="1603.202" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7893.715" Y="1599.553" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7916.887" Y="1595.135" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7939.631" Y="1586.632" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7957.698" Y="1572.762" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7972.091" Y="1554.059" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-7986.705" Y="1535.551" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8007.164" Y="1523.89" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8025.238" Y="1508.766" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8038.569" Y="1489.395" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8053.208" Y="1469.98" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8068.689" Y="1453.251" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8089.296" Y="1441.94" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8112.734" Y="1440.772" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8136.307" Y="1441.666" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8159.904" Y="1440.889" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8183.514" Y="1440.658" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8207.083" Y="1439.581" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8230.853" Y="1434.501" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8252.624" Y="1427.471" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8259.295" Y="1424.359" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8279.944" Y="1411.596" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8298.935" Y="1398.908" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8321.287" Y="1391.368" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8344.352" Y="1386.441" Z="-1.44955" Type="Swimming" />
          <Vector3 X="-8364.002" Y="1373.906" Z="-1.419249" Type="Swimming" />
          <Vector3 X="-8383.604" Y="1362.72" Z="-1.453436" Type="Swimming" />
          <Vector3 X="-8404.356" Y="1351.484" Z="-1.453436" Type="Swimming" />
          <Vector3 X="-8426.461" Y="1343.188" Z="-1.453436" Type="Swimming" />
          <Vector3 X="-8447.754" Y="1333.002" Z="-1.453436" Type="Swimming" />
          <Vector3 X="-8470.972" Y="1329.634" Z="-1.453436" Type="Swimming" />
          <Vector3 X="-8492.125" Y="1326.484" Z="-1.453436" Type="Swimming" />
          <Vector3 X="-8508.956" Y="1324.088" Z="-1.453436" Type="Swimming" />
          <Vector3 X="-8522.747" Y="1321.547" Z="-1.453436" Type="Swimming" />
          <Vector3 X="-8530.656" Y="1319.698" Z="-1.453436" Type="Swimming" />
          <Vector3 X="-8537.829" Y="1318.021" Z="-1.453436" Type="Swimming" />
          <Vector3 X="-8548.589" Y="1315.505" Z="-1.453436" Type="Swimming" />
          <Vector3 X="-8628.263" Y="1326.136" Z="-1.453436" Type="Swimming" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTESpiritHealerToStormwindTaxi</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-9434.383" Y="75.69094" Z="56.16186" />
          <Vector3 X="-9429.283" Y="78.65925" Z="56.43014" />
          <Vector3 X="-9413.486" Y="87.81548" Z="57.20881" />
          <Vector3 X="-9390.427" Y="100.3504" Z="59.14879" />
          <Vector3 X="-9366.481" Y="111.1086" Z="61.17467" />
          <Vector3 X="-9342.899" Y="122.6299" Z="63.377" />
          <Vector3 X="-9319.463" Y="134.388" Z="64.45621" />
          <Vector3 X="-9295.005" Y="143.868" Z="66.11036" />
          <Vector3 X="-9270.111" Y="152.1965" Z="67.08627" />
          <Vector3 X="-9248.02" Y="165.8991" Z="67.89116" />
          <Vector3 X="-9231.944" Y="186.6469" Z="67.6654" />
          <Vector3 X="-9214.007" Y="205.7998" Z="69.55559" />
          <Vector3 X="-9196.535" Y="225.3549" Z="71.61044" />
          <Vector3 X="-9185.807" Y="249.2161" Z="73.31365" />
          <Vector3 X="-9181.869" Y="275.0788" Z="75.31979" />
          <Vector3 X="-9181.565" Y="301.2954" Z="78.25015" />
          <Vector3 X="-9178.805" Y="327.3539" Z="81.41454" />
          <Vector3 X="-9168.506" Y="351.261" Z="86.65157" />
          <Vector3 X="-9149.111" Y="368.8423" Z="90.39152" />
          <Vector3 X="-9128.943" Y="385.6438" Z="90.85686" />
          <Vector3 X="-9108.805" Y="402.4804" Z="92.61454" />
          <Vector3 X="-9088.42" Y="419.0153" Z="92.21186" />
          <Vector3 X="-9067.148" Y="434.3977" Z="93.05645" />
          <Vector3 X="-9046.156" Y="450.1584" Z="93.05645" />
          <Vector3 X="-9025.447" Y="466.2906" Z="94.44871" />
          <Vector3 X="-9004.904" Y="482.6325" Z="96.57178" />
          <Vector3 X="-8984.463" Y="499.1005" Z="96.45972" />
          <Vector3 X="-8963.683" Y="515.1108" Z="96.35577" />
          <Vector3 X="-8949.729" Y="516.5819" Z="96.35577" />
          <Vector3 X="-8938.886" Y="508.5782" Z="95.26785" />
          <Vector3 X="-8924.174" Y="499.7322" Z="93.87282" />
          <Vector3 X="-8910.715" Y="507.5651" Z="93.85508" />
          <Vector3 X="-8916.667" Y="523.7752" Z="94.4141" />
          <Vector3 X="-8924.874" Y="539.1893" Z="94.2955" />
          <Vector3 X="-8915.427" Y="552.5035" Z="93.93498" />
          <Vector3 X="-8901.643" Y="563.2852" Z="92.96495" />
          <Vector3 X="-8887.836" Y="574.0057" Z="92.68021" />
          <Vector3 X="-8874.06" Y="584.796" Z="92.85804" />
          <Vector3 X="-8860.48" Y="595.8345" Z="92.08145" />
          <Vector3 X="-8847.082" Y="607.0439" Z="92.47292" />
          <Vector3 X="-8834.093" Y="617.9163" Z="93.43965" />
          <Vector3 X="-8826.979" Y="623.0103" Z="93.84156" />
          <Vector3 X="-8819.816" Y="619.1512" Z="94.55273" />
          <Vector3 X="-8808.754" Y="605.6334" Z="96.04911" />
          <Vector3 X="-8805.841" Y="601.0401" Z="96.51173" />
          <Vector3 X="-8804.801" Y="591.528" Z="97.14482" />
          <Vector3 X="-8811.101" Y="575.2524" Z="94.94179" />
          <Vector3 X="-8819.593" Y="559.9894" Z="94.42645" />
          <Vector3 X="-8831.005" Y="546.7324" Z="96.56744" />
          <Vector3 X="-8842.249" Y="533.336" Z="101.992" />
          <Vector3 X="-8847.697" Y="526.4908" Z="106.0056" />
          <Vector3 X="-8852.438" Y="526.3975" Z="106.0527" />
          <Vector3 X="-8853.104" Y="532.3805" Z="105.931" />
          <Vector3 X="-8853.881" Y="538.3497" Z="105.9055" />
          <Vector3 X="-8862.917" Y="536.2402" Z="106.4548" />
          <Vector3 X="-8869.222" Y="533.6547" Z="106.5365" />
          <Vector3 X="-8865.875" Y="525.1356" Z="107.3988" />
          <Vector3 X="-8855.796" Y="510.8313" Z="109.6081" />
          <Vector3 X="-8845.202" Y="496.9019" Z="109.6084" />
          <Vector3 X="-8841.217" Y="491.6663" Z="109.6084" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEShadowglenToDolanaar</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="10195.29" Y="695.3986" Z="1361.183" />
          <Vector3 X="10180.13" Y="694.4178" Z="1361.627" />
          <Vector3 X="10162.7" Y="693.0107" Z="1361.466" />
          <Vector3 X="10145.61" Y="689.3356" Z="1360.306" />
          <Vector3 X="10129.17" Y="685.0891" Z="1357.014" />
          <Vector3 X="10113.02" Y="678.5103" Z="1352.093" />
          <Vector3 X="10099.38" Y="666.8817" Z="1346.696" />
          <Vector3 X="10089.6" Y="653.0121" Z="1341.005" />
          <Vector3 X="10078.95" Y="638.4731" Z="1334.47" />
          <Vector3 X="10068.68" Y="624.2996" Z="1327.894" />
          <Vector3 X="10058.37" Y="610.1564" Z="1320.96" />
          <Vector3 X="10048.06" Y="596.6788" Z="1316.726" />
          <Vector3 X="10032.93" Y="589.0021" Z="1315.704" />
          <Vector3 X="10015.91" Y="592.1373" Z="1315.704" />
          <Vector3 X="10001.74" Y="602.0422" Z="1315.704" />
          <Vector3 X="9990.761" Y="616.3331" Z="1315.12" />
          <Vector3 X="9982.248" Y="631.6158" Z="1314.271" />
          <Vector3 X="9969.74" Y="643.5355" Z="1312.186" />
          <Vector3 X="9955.688" Y="653.9058" Z="1310.194" />
          <Vector3 X="9944.146" Y="667.0304" Z="1309.857" />
          <Vector3 X="9932.44" Y="680.0255" Z="1309.88" />
          <Vector3 X="9920.686" Y="692.9747" Z="1309.855" />
          <Vector3 X="9914.854" Y="709.3123" Z="1310.023" />
          <Vector3 X="9908.864" Y="725.698" Z="1309.882" />
          <Vector3 X="9899.311" Y="740.3447" Z="1309.863" />
          <Vector3 X="9889.854" Y="755.0501" Z="1309.798" />
          <Vector3 X="9883.834" Y="771.353" Z="1309.949" />
          <Vector3 X="9882.118" Y="788.7676" Z="1309.881" />
          <Vector3 X="9880.706" Y="806.2101" Z="1309.671" />
          <Vector3 X="9879.24" Y="823.623" Z="1307.547" />
          <Vector3 X="9876.602" Y="840.3726" Z="1307.223" />
          <Vector3 X="9878.942" Y="858.1732" Z="1307.223" />
          <Vector3 X="9883.203" Y="875.1411" Z="1307.202" />
          <Vector3 X="9888.04" Y="891.4124" Z="1307.227" />
          <Vector3 X="9889.714" Y="908.6797" Z="1307.432" />
          <Vector3 X="9887.734" Y="914.9008" Z="1307.432" />
          <Vector3 X="9881.153" Y="929.3131" Z="1307.32" />
          <Vector3 X="9870.905" Y="943.4756" Z="1307.185" />
          <Vector3 X="9859.512" Y="956.7379" Z="1306.167" />
          <Vector3 X="9852.376" Y="963.5063" Z="1306.138" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>GRINDGrindTo8DR,WA,RG,HU</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="10517.54" Y="1019.245" Z="1319.07" />
          <Vector3 X="10634.12" Y="938.1396" Z="1320.707" />
          <Vector3 X="10725.44" Y="929.0474" Z="1329.801" />
          <Vector3 X="10818.66" Y="941.8775" Z="1336.511" />
        </HotSpots>
        <EntryTarget>
          <int>1989</int>
          <int>1985</int>
          <int>1986</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>7</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Threading;
using wManager.Events;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Enums;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using System.ComponentModel;
using System.Configuration;
using System.Net;
using System.Windows.Forms;
using robotManager.Products;
using System.Threading.Tasks;



//FlightMaster
public class FlightMaster
{

    private int priority;

    public FlightMaster(int priority)
    {
        this.priority = priority;
    }

    public static void main(String[] args)
    {
        FlightMaster temp = new FlightMaster(1);
        Logging.Write("Stuff");
    }


    public static int timer = 0;
    public static Vector3 myPositionAtStart = new Vector3(0, 0, 0);
    public static bool _deleteOldPath = false;
    public static bool _isLaunched ;
    static bool longMoveState = false;
    static Vector3 checkDistanceToDestination;
    private static int travelDistance = 1250;
    private static float saveDistance;
    public static Vector3 destinationVector = new Vector3(0, 0, 0);

    //public static MovementEvents.MovementCancelableHandler MovementEventsOnOnMovementPulse { get; private set; }

    // public static List&lt;FlightMasterDB&gt; FML = fillDB();

    public void startFlightMaster()
    {
        Logging.Write("[FNV_Quester]: Flight Master initialized");
        _isLaunched = true;
        FNVQuesterFlightMaster.Load();
        //flightMasterLoop();
    }

    public void start()
    {
        //Logging.Write("Subscribing to event");
       // SubscribeToEvent();
       // watchForEvents();
    }

    public void stop()
    {
        //Logging.Write("Unsubscribing to event");
        //UnSubscribeEvents();
    }

    public static void disposeFlightMaster()
    {
        _isLaunched = false;
        FNVQuesterFlightMaster.CurrentSettings.Save();
        //clearOldPath();
        //_deleteOldPath = true;
        //UnSubscribeEvents();
        //MovementEvents.OnMovementPulse -= new MovementEvents.MovementCancelableHandler(FlightMaster.MovementEventsOnOnMovementPulse);
        //Logging.Write("[FNV_Quester]: Flight Master disposed");
    }

    public static void disposeFlightMaster(int wert)
    {
        _isLaunched = false;
        if(wert == 1)
        {
            Logging.Write("Flight Master stopped, dead");
        }
        else
        {
            Logging.Write("Flight Master stopped, combat");
        }
    }


    private void SubscribeToEvent()
    {
         MovementEvents.OnMovementPulse += MovementEventsOnOnMovementPulse;
    }

    public void UnSubscribeEvents()
    {
        MovementEvents.OnMovementPulse -= MovementEventsOnOnMovementPulse;
    }

    private void watchForEvents()
    {

        EventsLuaWithArgs.OnEventsLuaWithArgs += (LuaEventsId id, List&lt;string&gt; args) =&gt;
        {


            if (id == wManager.Wow.Enums.LuaEventsId.PLAYER_DEAD)
            {
                Logging.Write("[FNV_Quester]: Player died, stop Flight Master");
                disposeFlightMaster(1);
            }
            if (id == wManager.Wow.Enums.LuaEventsId.PLAYER_ENTER_COMBAT)
            {
                disposeFlightMaster(2);
          		  Logging.Write("[FNV_Quester]: Player entered combat, stop Flight Master");
            }

        };

    }


    private void MovementEventsOnOnMovementPulse(List&lt;Vector3&gt; path, CancelEventArgs cancelEventArgs)
    {
        if(timer &lt; 1)
        {
            checkDistanceToDestination = path.Last&lt;Vector3&gt;();
            longMove(path.Last&lt;Vector3&gt;());
            destinationVector = path.Last&lt;Vector3&gt;();
            if(ObjectManager.Me.Position.DistanceTo(destinationVector) &gt; 1000 &amp;&amp; !_isLaunched)
                startFlightMaster();
        }
        else
        {
            Logging.Write("[FNV_Quester]: Taxi in Pause");
        }
    }

    public bool longMove(Vector3 destination)
    {
        saveDistance = new Vector3(destination).DistanceTo(ObjectManager.Me.Position);
        if(new Vector3(destination).DistanceTo(ObjectManager.Me.Position) &lt; travelDistance)
        {
            longMoveState = false;
            return false;
        }
        else
        {
            longMoveState = true;
            return true;
        }
    }


    public static FlightMasterDB getClosestFlightMasterFrom()
    {
        List&lt;FlightMasterDB&gt; FMLnfmd = fillDB();
        float tempDistance = 99999;
        FlightMasterDB returnObject = new FlightMasterDB("null", 0, new Vector3(0, 0, 0), false);

        foreach(var a in FMLnfmd)
        {
            if(a.alreadyDiscovered &amp;&amp; a.position.DistanceTo(ObjectManager.Me.Position) &lt; tempDistance &amp;&amp; (a.continent == checkContinent()))
            {
                tempDistance = a.position.DistanceTo(ObjectManager.Me.Position);
                returnObject = a;
            }
        }
        return returnObject;
    }

    public static FlightMasterDB getClosestFlightMasterTo()
    {
        List&lt;FlightMasterDB&gt; FMLgcfmt = fillDB();
        float tempDistance = 99999;
        FlightMasterDB returnObject = new FlightMasterDB("null", 0, new Vector3(0, 0, 0), false);

        foreach(var a in FMLgcfmt)
        {
            if(a.alreadyDiscovered &amp;&amp; a.position.DistanceTo(destinationVector) &lt; tempDistance &amp;&amp; (a.continent == checkContinent()))
            {
                tempDistance = a.position.DistanceTo(destinationVector);
                returnObject = a;
            }
        }
        return returnObject;
    }

    public static bool checkContinent()
    {
        if(Usefuls.ContinentId == (int)ContinentId.Kalimdor)
        {
            return true;
        }
        else
        {
            return false;
        }
        
    }

    public static void waitFlying()
    {

        while(ObjectManager.Me.IsOnTaxi)
        {
            Logging.Write("[FNV_Quester]: On taxi, waiting");
            Thread.Sleep(30000);
        }

        Logging.Write("[FNV_Quester]: Arrived at destination Flight Master, finished waiting");
    }

    public static List&lt;FlightMasterDB&gt; fillDB()
    {
        //True = Kalimdor ; False = Eastern Kingdoms
        List&lt;FlightMasterDB&gt; FMListe = new List&lt;FlightMasterDB&gt;();
        FlightMasterDB Stormwind = new FlightMasterDB("Stormwind", 352, new Vector3(-8835.76f, 490.084f, 109.6157f), false);
        FMListe.Add(Stormwind);
        FlightMasterDB ArathiHighlands = new FlightMasterDB("Arathi", 2835, new Vector3(-1240.03f, -2513.96f, 21.92969f), false);
        FMListe.Add(ArathiHighlands);
        FlightMasterDB Ashenvale = new FlightMasterDB("Ashenvale", 4267, new Vector3(2828.4f, -284.3f, 106.7f), true);
        FMListe.Add(Ashenvale);
        FlightMasterDB Darkshore = new FlightMasterDB("Darkshore", 3841, new Vector3(6343.2f, 561.651f, 15.79876f), true);
        FMListe.Add(Darkshore);
        FlightMasterDB Stranglethorn = new FlightMasterDB("Stranglethorn", 2859, new Vector3(-14477.9f, 464.101f, 36.38163f), false);
        FMListe.Add(Stranglethorn);
        FlightMasterDB Duskwood = new FlightMasterDB("Duskwood", 2409, new Vector3(-10513.8f, -1258.79f, 41.43174f), false);
        FMListe.Add(Duskwood);
        FlightMasterDB FeralasFeathermoon = new FlightMasterDB("Feralas, Feathermoon", 8019, new Vector3(-4370.5f, 3340f, 12f), true);
        FMListe.Add(FeralasFeathermoon);
        FlightMasterDB FeralasThalanaar = new FlightMasterDB("Feralas, Thalanaar", 4319, new Vector3(-4491f, -781f, -40f), true);
        FMListe.Add(FeralasThalanaar);
        FlightMasterDB Tanaris = new FlightMasterDB("Tanaris", 7823, new Vector3(-7224.9f, -3738.2f, 8.4f), true);
        FMListe.Add(Tanaris);
        FlightMasterDB Hinterlands = new FlightMasterDB("The Hinterlands", 8018, new Vector3(282.1f, -2001.3f, 194.1f), false);
        FMListe.Add(Hinterlands);
        FlightMasterDB Ironforge = new FlightMasterDB("Ironforge", 1573, new Vector3(-4821.13f, -1152.4f, 502.2116f), false);
        FMListe.Add(Ironforge);
        FlightMasterDB Menethil = new FlightMasterDB("Wetlands", 1571, new Vector3(-3793.2f, -782.052f, 9.014864f), false);
        FMListe.Add(Menethil);
        FlightMasterDB TheBarrens = new FlightMasterDB("The Barrens", 16227, new Vector3(-898.246f, -3769.65f, 11.71021f), true);
        FMListe.Add(TheBarrens);
        FlightMasterDB Redridge = new FlightMasterDB("Redridge Mountains", 931, new Vector3(-9435.8f, -2234.79f, 69.43174f), false);
        FMListe.Add(Redridge);
        FlightMasterDB Teldrassil = new FlightMasterDB("Teldrassil", 3838, new Vector3(8640.58f, 841.118f, 23.26363f), true);
        FMListe.Add(Teldrassil);
        FlightMasterDB Southshore = new FlightMasterDB("Hillsbrad Foothiils", 2432, new Vector3(-715.146f, -512.134f, 26.54455f), false);
        FMListe.Add(Southshore);
        FlightMasterDB Stonetalon = new FlightMasterDB("Stonetalon Mountains", 4407, new Vector3(2682.83f, 1466.45f, 233.6483f), true);
        FMListe.Add(Stonetalon);
        FlightMasterDB Thelsamar = new FlightMasterDB("Loch Modan", 1572, new Vector3(-5424.85f, -2929.87f, 347.5623f), false);
        FMListe.Add(Thelsamar);
        FlightMasterDB Theramore = new FlightMasterDB("Dustwallow Marsh", 4321, new Vector3(-3828.88f, -4517.51f, 10.66067f), true);
        FMListe.Add(Theramore);
        FlightMasterDB WesternP = new FlightMasterDB("Western Pleaguelands", 12596, new Vector3(928.3f, -1429.1f, 64.8f), false);
        FMListe.Add(WesternP);
        FlightMasterDB Westfall = new FlightMasterDB("Westfall", 523, new Vector3(-10628.8f, 1037.79f, 34.43174f), false);
        FMListe.Add(Westfall);
        FlightMasterDB EasternP = new FlightMasterDB("Eastern Pleaguelands", 12617, new Vector3(2269.9f, -5345.4f, 86.9f), false);
        FMListe.Add(EasternP);
        FlightMasterDB SearingGorge = new FlightMasterDB("Searing Gorge", 2941, new Vector3(-6559.1f, -1169.4f, 309.8f), false);
        FMListe.Add(SearingGorge);
        FlightMasterDB BurningSteppes = new FlightMasterDB("Burning Steppes", 2299, new Vector3(-8365.1f, -2758.5f, 185.6f), false);
        FMListe.Add(BurningSteppes);
        FlightMasterDB Azshara = new FlightMasterDB("Azshara", 12577, new Vector3(2718.2f, -3880.8f, 101.4f), true);
        FMListe.Add(Azshara);
        FlightMasterDB Felwood = new FlightMasterDB("Felwood", 12578, new Vector3(6204.2f, -1951.4f, 571.3f), true);
        FMListe.Add(Felwood);
        FlightMasterDB Winterspring = new FlightMasterDB("Winterspring", 11138, new Vector3(6800.5f, -4742.4f, 701.5f), true);
        FMListe.Add(Winterspring);
        FlightMasterDB UngoroCreater = new FlightMasterDB("Ungoro Crater", 10583, new Vector3(-6110.5f, -1140.4f, -186.9f), true);
        FMListe.Add(UngoroCreater);
        FlightMasterDB Silithus = new FlightMasterDB("Silithus", 15177, new Vector3(-6758.6f, 775.6f, 89f), true);
        FMListe.Add(Silithus);
        FlightMasterDB Desolace = new FlightMasterDB("Desolace", 6706, new Vector3(136f, 1326f, 193f), true);
        FMListe.Add(Desolace);
        return FMListe;
    }

    public static bool validFlight(String from, String to)
    {
        bool von = false;
        bool zu = false;
        List&lt;FlightMasterDB&gt; FMLvf = fillDB();

        for(int i = 0; i &lt; FMLvf.Count; i++)
        {
            if(FMLvf[i].name.Contains(from))
            {
                von = FMLvf[i].continent;
            }
            if(FMLvf[i].name.Contains(to))
            {
                zu = FMLvf[i].continent;
            }
        }
        return von != zu;
    }

    public static bool discoveredTaxiNodes(String from, String to)
    {

        List&lt;FlightMasterDB&gt; FMLDTN = fillDB();

        foreach(var ele in FMLDTN)
        {
            if(ele.name.Contains(from))
            {
                if(!ele.alreadyDiscovered)
                {
                    Logging.Write("[FNV_Quester]: Taxi node from " + ele.name + " has not been discovered so far. Abort taking taxi.");
                    return false;
                }
            }
        }

        foreach(var ele in FMLDTN)
        {
            if(ele.name.Contains(to))
            {
                if(!ele.alreadyDiscovered)
                {
                    Logging.Write("[FNV_Quester]: Taxi node to " + ele.name + " has not been discovered so far. Abort taking taxi.");
                    return false;
                }
            }
        }
        return true;
    }

    public static void takeTaxi(String from, String to)
    {

        List&lt;FlightMasterDB&gt; FMLtt = fillDB();
        bool canProceed = true;
        try
        {
            FMLtt = fillDB();
        }
        catch(Exception e)
        {
            Logging.Write("Error: " + e);
        }


        Vector3 myPos = ObjectManager.Me.Position;

        if(Usefuls.MapZoneName.Contains(to))
        {
            canProceed = false;
            Logging.Write("[FNV_Quester]: Already in the zone we are going to travel to. Skip flying");
        }

        if(canProceed)
        {

            if(validFlight(from, to))
            {
                Logging.Write("[FNV_Quester]: Unable to fly between Kalimdor and Eastern Kingdoms");
            }

            var position = new Vector3();
            int npcEntryId = 0;

            for(int i = 0; i &lt; FMLtt.Count; i++)
            {
                if(FMLtt[i].name.Contains(from))
                {
                    position = FMLtt[i].position;
                    npcEntryId = FMLtt[i].NPCId;
                    FMLtt[i].name.Contains(from);
                }
            }


            if(!ObjectManager.Me.IsOnTaxi)
            {
                wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();

                while(!wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore) &amp;&amp; !Fight.InFight)
                {
                    wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
                    wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore);
                }
                if(wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore))
                {
                    while(!ObjectManager.Me.IsOnTaxi)
                    {
                        Usefuls.SelectGossipOption(GossipOptionsType.taxi);

                        int node = Lua.LuaDoString&lt;int&gt;("for i=0,30 do if string.find(TaxiNodeName(i),'" + to + "') then return i end end");
                        Lua.LuaDoString("TakeTaxiNode(" + node + ")");
                        Logging.Write("[FNV_Quester]: Taking Taxi from " + from + " to " + to);
                        Thread.Sleep(Usefuls.Latency + 2500);
                    }
                }
            }
            waitFlying();
            return;
        }
    }

    public static void discoverTaxi(String discoverName)
    {
        FNVQuesterFlightMaster.Load();
        List&lt;FlightMasterDB&gt; FMLdt = fillDB();

        var position = new Vector3();
        int npcEntryId = 0;
        int j = 0;
        bool alreadyDiscoveredFlightMaster = false;

        for(int i = 0; i &lt; FMLdt.Count; i++)
        {
            if(FMLdt[i].name.Contains(discoverName))
            {
                if(FMLdt[i].alreadyDiscovered)
                {
                    Logging.Write("[FNV_Quester]: Flight Master of " + FMLdt[i].name + " already discovered. Skip it.");
                    alreadyDiscoveredFlightMaster = true;
                    break;
                }

                position = FMLdt[i].position;
                npcEntryId = FMLdt[i].NPCId;
                j = i;
            }
        }

        if(!alreadyDiscoveredFlightMaster)
        {

            if(!ObjectManager.Me.IsOnTaxi)
            {
                wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();

                while(!wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore))
                {
                   // wManager.Wow.Helpers.Conditions.ForceIgnoreIsAttacked = true;
                    wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
                    wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore);
                }
                if(wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore))
                {
                    Usefuls.SelectGossipOption(GossipOptionsType.taxi);
                    Thread.Sleep(Usefuls.Latency + 250);
                    //wManager.Wow.Helpers.Conditions.ForceIgnoreIsAttacked = true;
                }
            }
            Logging.Write("[FNV_Quester]: Flight Master " + FMLdt[j].name + " discovered");
            FMLdt[j].alreadyDiscovered = true;
            FNVQuesterFlightMaster.flightMasterSaveChanges(FMLdt[j]);
            //wManager.Wow.Helpers.Conditions.ForceIgnoreIsAttacked = false;
            
        }
        timer = 0;
        return;
    }

    }

    public class FlightMasterDB
    {
        public FlightMasterDB(String name, int NPCId, Vector3 position, bool continent, bool alreadyDiscovered)
        {
            this.name = name;
            this.NPCId = NPCId;
            this.position = position;
            this.continent = continent;
            this.alreadyDiscovered = alreadyDiscovered;
        }

        public FlightMasterDB(String name, int NPCId, Vector3 position, bool continent)
        {
            this.name = name;
            this.NPCId = NPCId;
            this.position = position;
            this.continent = continent;
            
        }

        public int NPCId { get; set; }
        public Vector3 position { get; set; }
        public String name { get; set; }
        public bool continent { get; set; }
        public bool alreadyDiscovered { get; set; }

    }

//Tram
public class Tram
{

    //Stormwind to Ironforge
    static Vector3 positionTramInIronforge = new Vector3(4.58065, 28.2097, 6.90526);
    static Vector3 positionTramInStormwind = new Vector3(4.581913, 2511.531, 7.091796);

    static Vector3 positionWaitTramIronforge = new Vector3(19.1, 28, -4.3);
    static Vector3 positionOnTramIronforge = new Vector3(4.8, 28.1, -4.3);

    static Vector3 positionWaitTramStormwind = new Vector3(15.3, 2510.4, -4.3);
    static Vector3 positionOnTramStormwind = new Vector3(4.3, 2510.6, -4.3);

    static Vector3 enterStormwindInside = new Vector3(67, 2490.7, -4.3);
    static Vector3 enterIronforgeInside = new Vector3(64.5, 10.2, -4.3);

    static Vector3 enterStormwindOutside = new Vector3(-8365, 536.9, 91.8);
    static Vector3 enterIronforgeOutside = new Vector3(-4836.7, -1304.6, 501.9);

    static Vector3 leavePosIronforge = new Vector3(-10.6, 30.2, -4.3);
    static Vector3 leavePosStormwind = new Vector3(-10.6, 2510.9, -4.3);

    static Vector3 playerFellDownIronforge = new Vector3(4.5, 28, -13.9);

    static int[] tramEntryArray = new int[6] { 176080, 176082, 176083, 176084, 176085, 176081 };

    //Ironforge to Stormwind
    static Vector3 waitPosPlayerInStormwindToIronforge = new Vector3(-32.8, 2512.1, -4.3);

    //Pos where upper Tram arrives and waits in Stormwind
    static Vector3 waitPosTramSwTramStormwind = new Vector3(-45.4007, 2512.15, 6.90526);
    //Pos where player waits on upper tram in Stormwind
    static Vector3 waitPosPlayerSwTramStormwind = new Vector3(-45.20206, 2512.266, -3.562748);

    static Vector3 waitPosSwTramIronforge = new Vector3(-45.399, 30.38013, 5.877773);

    static Vector3 leavePosSwTramIronforge = new Vector3(-61.8, 30.3, -4.3);
    static Vector3 waitPlayerOnTramPosSwTramIronforge = new Vector3(-34.49804, 2511.917, -4.3);
    static Vector3 posPlayerOnTramSwToIfInIronforge = new Vector3(-20.9837, 2459.93, -4.297);

    static Vector3 playerFellDownStormwind = new Vector3(-45, 2512.6, -13.9);

    static bool isRestarted = false;
    static Process[] pname = Process.GetProcessesByName(AppDomain.CurrentDomain.FriendlyName.Remove(AppDomain.CurrentDomain.FriendlyName.Length - 4));
    static Vector3 nullVector = new Vector3(0, 0, 0);


    public static void restartTram(String from)
    {
        switch(from)
        {
            case ("Stormwind"):
                takeTramStormwind();
                break;
            case ("Ironforge"):
                takeTramIronforge();
                break;
            default:
                Logging.Write("Something failed");
                break;
        }
    }

    public static void end()
    {
        Logging.Write("[FNV_Quester]: Ending Tream");
    }



    public static void takeTramStormwind()
    {
        Logging.Write("[FNV_Quester]: Taking Tram from Stormwind to Ironforge");

        if(!Usefuls.MapZoneName.Contains("Deep"))
        {
            while(!GoToTask.ToPosition(enterStormwindOutside))
            {
                GoToTask.ToPosition(enterStormwindOutside);
                Thread.Sleep(250);
            }

            wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;
            Logging.Write("[FNV_Quester]: Disable teleport during Tram");
            wManager.Wow.Helpers.MovementManager.Face(new Vector3(-8353.4, 521.4, 91.8));

            while(!Usefuls.MapZoneName.Contains("Deep"))
            {
                wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 250);
                Thread.Sleep(robotManager.Helpful.Others.Random(25, 50));
            }

        }

        if(Usefuls.MapZoneName.Contains("Deep"))
        {
            if(!GoToTask.ToPosition(enterStormwindInside))
            {
                GoToTask.ToPosition(enterStormwindInside);
                Thread.Sleep(250);
            }
            while(!GoToTask.ToPosition(waitPosPlayerInStormwindToIronforge))
            {
                GoToTask.ToPosition(waitPosPlayerInStormwindToIronforge);
                Thread.Sleep(250);
            }

            wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;
            var tram = (WoWGameObject)null;

            try
            {
                tram = chooseTramStormwind();
            }
            catch
            {

            }


            if(tram != null &amp;&amp; ObjectManager.Me.Position.DistanceTo(tram.Position) &lt; 200 &amp;&amp; !tram.Position.Equals(nullVector))
            {
                Logging.Write("[FNV_Quester]: Bad circle, restart... .");
                isRestarted = true;
                takeTramStormwind();
                end();
            }

            if(!isRestarted)
            {

                if(tram != null &amp;&amp; tram.Position.DistanceTo(nullVector) &gt; 1)
                {
                    while(tram.Position.DistanceTo(waitPosTramSwTramStormwind) &gt;= 5 || ObjectManager.Me.Position.DistanceTo(waitPosPlayerInStormwindToIronforge) &gt;= 5)
                    {
                        Thread.Sleep(500);
                    }

                    if(tram.Position.DistanceTo(waitPosTramSwTramStormwind) &lt; 5)
                    {
                        Lua.LuaDoString("ClearTarget()");
                        wManager.Wow.Helpers.MovementManager.Face(waitPosPlayerSwTramStormwind);

                        while(ObjectManager.Me.Position.DistanceTo(waitPosPlayerSwTramStormwind) &gt; 1)
                        {
                            MovementManager.MoveTo(waitPosPlayerSwTramStormwind);
                            Thread.Sleep(1000);

                            if(ObjectManager.Me.Position.DistanceTo(playerFellDownStormwind) &lt; 4)
                            {
                                Logging.Write("[FNV_Quester]: Fell down, while trying to take tram. Restart...");
                                restartTram("Stormwind");
                            }
                        }

                        GoToTask.ToPosition(waitPosPlayerSwTramStormwind);
                    }

                    while(tram.Position.DistanceTo(waitPosSwTramIronforge) &gt; 5)
                    {
                        Thread.Sleep(3000);
                    }

                    if(ObjectManager.Me.HaveBuff("Stealth"))
                    {
                        Lua.LuaDoString("CastSpellByName('Stealth')");
                    }

                    wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 1500);

                    if(ObjectManager.Me.Position.DistanceTo(posPlayerOnTramSwToIfInIronforge) &lt; 5)
                    {
                        MovementManager.MoveTo(leavePosSwTramIronforge);
                        Thread.Sleep(1000);

                        while(ObjectManager.Me.Position.DistanceTo(leavePosSwTramIronforge) &gt; 4)
                        {
                            MovementManager.MoveTo(leavePosSwTramIronforge);
                            Thread.Sleep(1000);
                        }
                    }

                    if(Usefuls.MapZoneName.Contains("Deep"))
                    {
                        if(!GoToTask.ToPosition(enterIronforgeInside))
                        {
                            GoToTask.ToPosition(enterIronforgeInside);
                            Thread.Sleep(250);
                        }
                    }

                    while(Usefuls.MapZoneName.Contains("Deep"))
                    {
                        wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 250);
                        Thread.Sleep(robotManager.Helpful.Others.Random(25, 50));
                    }

                    Logging.Write("[FNV_Quester]: Re enable teleport ");
                    wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;


                    while(!GoToTask.ToPosition(enterIronforgeOutside))
                    {
                        wManager.Wow.Helpers.MovementManager.Face(enterIronforgeOutside);
                        GoToTask.ToPosition(enterIronforgeOutside);
                        Thread.Sleep(250);
                    }

                }
                else if(Usefuls.MapZoneName.Contains("Tram") || Usefuls.MapZoneName.Contains("Stormwind"))
                {
                    Logging.Write("[FNV_Quester]: Unable to find tram, restart... .");
                    isRestarted = true;
                    restartTram("Stormwind");
                }

            }
        }

        isRestarted = false;
    }

    public static WoWGameObject chooseTramIronforge()
    {
        List&lt;WoWGameObject&gt; tramList = new List&lt;WoWGameObject&gt;();
        var tramTemp = (WoWGameObject)null;

        foreach(int ele in tramEntryArray)
        {
            tramTemp = null;
            try
            {
                tramTemp = ObjectManager.GetWoWGameObjectByEntry(ele).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
            }
            catch
            {
            }

            if(tramTemp != null &amp;&amp; tramTemp.IsValid &amp;&amp; !tramTemp.Equals((WoWGameObject)null) &amp;&amp; tramTemp.ToString().Contains("Subway"))
            {
                tramList.Add(tramTemp);
            }
            else
            {

            }
        }

        float distance = 0;
        float entryDistance = 0;
        foreach(var ele in tramList)
        {
            if(ObjectManager.Me.Position.DistanceTo(ele.Position) &gt;= distance)
            {
                distance = ObjectManager.Me.Position.DistanceTo(ele.Position);
                entryDistance = ele.Entry;
            }
        }

        foreach(var ele in tramList)
        {
            if(ele.Entry == entryDistance &amp;&amp; ele != null &amp;&amp; !ele.Position.Equals(nullVector))
            {
                if(ObjectManager.Me.Position.DistanceTo(ele.Position) &lt; 200)
                {
                    Logging.Write("[FNV_Quester]: Bad circle, restart... .");
                    restartTram("Ironforge");
                }

                Logging.Write("[FNV_Quester]: Choosing tram id: " + ele.Entry + " with a current position of " + ele.Position);
                return ele;
            }
        }
        return null;
    }

    public static WoWGameObject chooseTramStormwind()
    {
        List&lt;WoWGameObject&gt; tramList = new List&lt;WoWGameObject&gt;();
        var tramTemp = (WoWGameObject)null;

        foreach(int ele in tramEntryArray)
        {
            tramTemp = null;
            try
            {
                tramTemp = ObjectManager.GetWoWGameObjectByEntry(ele).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
            }
            catch
            {
            }

            if(tramTemp != null &amp;&amp; tramTemp.IsValid &amp;&amp; !tramTemp.Equals((WoWGameObject)null) &amp;&amp; tramTemp.ToString().Contains("Subway"))
            {
                tramList.Add(tramTemp);
            }
            else
            {

            }
        }

        float distance = 99999;
        float entryDistance = 0;
        foreach(var ele in tramList)
        {
            if(ObjectManager.Me.Position.DistanceTo(ele.Position) &lt;= distance)
            {
                distance = ObjectManager.Me.Position.DistanceTo(ele.Position);
                entryDistance = ele.Entry;
            }
        }

        foreach(var ele in tramList)
        {
            if(ele.Entry == entryDistance &amp;&amp; ele != null &amp;&amp; !ele.Position.Equals(nullVector))
            {
                if(ObjectManager.Me.Position.DistanceTo(ele.Position) &lt; 200)
                {
                    Logging.Write("[FNV_Quester]: Bad circle, restart... .");
                    restartTram("Stormwind");
                }

                Logging.Write("[FNV_Quester]: Choosing tram id: " + ele.Entry + " with a current position of " + ele.Position);
                return ele;
            }
        }

        return null;
    }

    public static void takeTramIronforge()
    {
        Logging.Write("[FNV_Quester]: Taking Tram from Ironforge to Stormwind");

        if(!Usefuls.MapZoneName.Contains("Deep"))
        {
            while(!GoToTask.ToPosition(enterIronforgeOutside))
            {
                GoToTask.ToPosition(enterIronforgeOutside);
                Thread.Sleep(250);
            }

            wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;
            Logging.Write("[FNV_Quester]: Disable teleport during Tram");
            wManager.Wow.Helpers.MovementManager.Face(new Vector3(-4839.4, -1320.9, 501.9));

            while(!Usefuls.MapZoneName.Contains("Deep"))
            {
                wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 250);
                Thread.Sleep(robotManager.Helpful.Others.Random(25, 50));
            }
        }

        if(Usefuls.MapZoneName.Contains("Deep"))
        {
            if(!GoToTask.ToPosition(enterIronforgeInside))
            {
                GoToTask.ToPosition(enterIronforgeInside);
                Thread.Sleep(250);
            }

            var pathEins = new List&lt;Vector3&gt;() {
new Vector3(42.56478f, 10.32987f, -4.29664f, "None"),
new Vector3(36.11083f, 10.30502f, -4.29664f, "None"),
new Vector3(29.11088f, 10.27806f, -4.29664f, "None"),
new Vector3(25.49891f, 10.26415f, -4.29664f, "None"),
new Vector3(20.57794f, 10.2452f, -4.29664f, "None"),
new Vector3(16.61328f, 11.97739f, -4.29664f, "None"),
new Vector3(17.03823f, 18.79025f, -4.29664f, "None"),
new Vector3(19.41723f, 25.35655f, -4.29664f, "None"),
};


                        while(ObjectManager.Me.Position.DistanceTo2D(pathEins.Last&lt;Vector3&gt;()) &gt; 5)
                        {
                            MovementManager.Go(pathEins); // or MovementManager.GoLoop(path);
                        }

            while(!GoToTask.ToPosition(positionWaitTramIronforge))
            {
                GoToTask.ToPosition(positionWaitTramIronforge);
                Thread.Sleep(250);
            }

            wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;

            var tram = (WoWGameObject)null;

            try
            {
                tram = chooseTramIronforge();
            }
            catch
            {

            }

            if(ObjectManager.Me.Position.DistanceTo(tram.Position) &lt; 200 &amp;&amp; tram != null &amp;&amp; !tram.Position.Equals(nullVector))
            {
                Logging.Write("[FNV_Quester]: Bad circle, restart... .");
                isRestarted = true;
                restartTram("Ironforge");
                end();
            }

            if(!isRestarted)
            {

                if(tram != null &amp;&amp; tram.Position.DistanceTo(nullVector) &gt; 1)
                {


                    while(tram.Position.DistanceTo(positionTramInIronforge) &gt;= 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep") &amp;&amp; !tram.Position.Equals(nullVector))
                    {
                        Thread.Sleep(1000);
                    }


                    if(tram.Position.DistanceTo(positionTramInIronforge) &lt; 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep"))
                    {
                        Lua.LuaDoString("ClearTarget()");
                        wManager.Wow.Helpers.MovementManager.Face(positionOnTramIronforge);

                        while(ObjectManager.Me.Position.DistanceTo(positionOnTramIronforge) &gt; 2)
                        {
                            MovementManager.MoveTo(positionOnTramIronforge);
                            Thread.Sleep(1000);

                            if(ObjectManager.Me.Position.DistanceTo(playerFellDownIronforge) &lt; 4)
                            {
                                Logging.Write("[FNV_Quester]: Fell down, while trying to take tram. Restart");
                                restartTram("Ironforge");
                            }
                        }

                        GoToTask.ToPosition(positionOnTramIronforge);
                    }


                    while(tram.Position.DistanceTo(positionTramInStormwind) &gt; 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep"))
                    {
                        Thread.Sleep(3000);
                    }

                    if(ObjectManager.Me.Position.DistanceTo(positionOnTramStormwind) &lt; 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep"))
                    {

                        Vector3 leavingTramPos = new Vector3(-4.500117, 2510.398, -4.18221, "None");
                        Vector3 leavingTramPosZwei = new Vector3(-8.363175, 2510.536, -4.291304, "None");

                        MovementManager.MoveTo(leavingTramPos);
                        Thread.Sleep(1000);
                        MovementManager.MoveTo(leavingTramPosZwei);
                        Thread.Sleep(1000);

                        var pathZwei = new List&lt;Vector3&gt;() {
new Vector3(-8.722651f, 2521.781f, -4.296569f, "None"),
new Vector3(-8.406331f, 2528.227f, -4.296569f, "None"),
new Vector3(-5.509378f, 2534.194f, -4.296569f, "None"),
new Vector3(1.102043f, 2536.338f, -4.296569f, "None"),
new Vector3(8.024714f, 2535.66f, -4.296569f, "None"),
new Vector3(13.7771f, 2531.926f, -4.296569f, "None"),
new Vector3(15.53208f, 2525.218f, -4.296569f, "None"),
new Vector3(19.39666f, 2520.334f, -4.296569f, "None"),
new Vector3(26.3053f, 2519.244f, -4.296569f, "None"),
new Vector3(31.07252f, 2514.534f, -4.296569f, "None"),
new Vector3(32.08603f, 2507.629f, -4.296569f, "None"),
new Vector3(32.20792f, 2500.735f, -4.296569f, "None"),
new Vector3(32.69915f, 2493.784f, -4.296569f, "None"),
new Vector3(38.39471f, 2490.469f, -4.296569f, "None"),
new Vector3(45.39016f, 2490.699f, -4.296569f, "None"),
new Vector3(52.39009f, 2490.728f, -4.296569f, "None"),
new Vector3(55.99506f, 2490.741f, -4.296569f, "None"),
new Vector3(62.99502f, 2490.766f, -4.296569f, "None"),
};


                        while(ObjectManager.Me.Position.DistanceTo2D(pathZwei.Last&lt;Vector3&gt;()) &gt; 5)
                        {
                            MovementManager.Go(pathZwei); // or MovementManager.GoLoop(path);

                            if(ObjectManager.Me.Position.DistanceTo2D(pathZwei.Last&lt;Vector3&gt;()) &lt;= 5)
                                break;
                        }


                        //MovementManager.MoveTo(leavePosStormwind);
                        /*
                        while(ObjectManager.Me.Position.DistanceTo(leavePosStormwind) &gt; 4)
                        {
                            MovementManager.MoveTo(leavePosStormwind);
                            Thread.Sleep(1000);

                        } */

                    }

                    if(Usefuls.MapZoneName.Contains("Deep"))
                    {
                        if(!GoToTask.ToPosition(enterStormwindInside))
                        {
                            GoToTask.ToPosition(enterStormwindInside);
                            Thread.Sleep(250);
                        }
                    }

                    while(Usefuls.MapZoneName.Contains("Deep"))
                    {
                        wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 250);
                        Thread.Sleep(robotManager.Helpful.Others.Random(25, 50));
                    }

                    Logging.Write("Re enable teleport ");
                    wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;


                    while(!GoToTask.ToPosition(enterStormwindOutside))
                    {
                        wManager.Wow.Helpers.MovementManager.Face(enterStormwindOutside);
                        GoToTask.ToPosition(enterStormwindOutside);
                        Thread.Sleep(250);
                    }

                }
                else if(Usefuls.MapZoneName.Contains("Tram") || Usefuls.MapZoneName.Contains("Ironforge"))
                {
                    Logging.Write("[FNV_Quester]: Unable to find tram, restart... .");
                    isRestarted = true;
                    restartTram("Ironforge");
                }

            }
        }
        isRestarted = false;
    }

    /*
    public static void takeTramIronforge()
    {
        Logging.Write("[FNV_Quester]: Taking Tram from Ironforge to Stormwind");

        if(!Usefuls.MapZoneName.Contains("Deep"))
        {
            while(!GoToTask.ToPosition(enterIronforgeOutside))
            {
                GoToTask.ToPosition(enterIronforgeOutside);
                Thread.Sleep(250);
            }

            wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;
            Logging.Write("[FNV_Quester]: Disable teleport during Tram");
            wManager.Wow.Helpers.MovementManager.Face(new Vector3(-4839.4, -1320.9, 501.9));

            while(!Usefuls.MapZoneName.Contains("Deep"))
            {
                wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 250);
                Thread.Sleep(robotManager.Helpful.Others.Random(25, 50));
            }
        }

        if(Usefuls.MapZoneName.Contains("Deep"))
        {
            if(!GoToTask.ToPosition(enterIronforgeInside))
            {
                GoToTask.ToPosition(enterIronforgeInside);
                Thread.Sleep(250);
            }

            GoToTask.ToPosition(new Vector3(26.31003, 9.936551, -4.29664));
            Thread.Sleep(250);
            GoToTask.ToPosition(new Vector3(17.09965, 12.71437, -4.29664));
            Thread.Sleep(250);
            GoToTask.ToPosition(new Vector3(18.14983, 22.89955, -4.29664));
            Thread.Sleep(250);

            while(!GoToTask.ToPosition(positionWaitTramIronforge))
            {
                GoToTask.ToPosition(positionWaitTramIronforge);
                Thread.Sleep(250);
            }

            wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;

            var tram = (WoWGameObject)null;

            try
            {
                tram = chooseTramIronforge();
            }
            catch
            {

            }

            if(ObjectManager.Me.Position.DistanceTo(tram.Position) &lt; 200 &amp;&amp; tram != null &amp;&amp; !tram.Position.Equals(nullVector))
            {
                Logging.Write("[FNV_Quester]: Bad circle, restart... .");
                isRestarted = true;
                restartTram("Ironforge");
                end();
            }

            if(!isRestarted)
            {

                if(tram != null &amp;&amp; tram.Position.DistanceTo(nullVector) &gt; 1)
                {


                    while(tram.Position.DistanceTo(positionTramInIronforge) &gt;= 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep") &amp;&amp; !tram.Position.Equals(nullVector))
                    {
                        Thread.Sleep(1000);
                    }


                    if(tram.Position.DistanceTo(positionTramInIronforge) &lt; 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep"))
                    {
                        Lua.LuaDoString("ClearTarget()");
                        wManager.Wow.Helpers.MovementManager.Face(positionOnTramIronforge);

                        while(ObjectManager.Me.Position.DistanceTo(positionOnTramIronforge) &gt; 2)
                        {
                            wManager.Wow.Helpers.MovementManager.Face(positionOnTramIronforge);
                            wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 125);
                            Thread.Sleep(robotManager.Helpful.Others.Random(10, 25));

                            if(ObjectManager.Me.Position.DistanceTo(playerFellDownIronforge) &lt; 4)
                            {
                                Logging.Write("[FNV_Quester]: Fell down, while trying to take tram. Restart");
                                restartTram("Ironforge");
                            }
                        }

                        GoToTask.ToPosition(positionOnTramIronforge);
                    }


                    while(tram.Position.DistanceTo(positionTramInStormwind) &gt; 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep"))
                    {
                        Thread.Sleep(3000);
                    }

                    if(ObjectManager.Me.Position.DistanceTo(positionOnTramStormwind) &lt; 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep"))
                    {

                        wManager.Wow.Helpers.Move.StrafeLeft(Move.MoveAction.PressKey, 350);

                        while(ObjectManager.Me.Position.DistanceTo(leavePosStormwind) &gt; 4)
                        {
                            wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 125);
                            Thread.Sleep(robotManager.Helpful.Others.Random(10, 25));

                        }

                    }

                    if(Usefuls.MapZoneName.Contains("Deep"))
                    {
                        if(!GoToTask.ToPosition(enterStormwindInside))
                        {
                            GoToTask.ToPosition(enterStormwindInside);
                            Thread.Sleep(250);
                        }
                    }

                    while(Usefuls.MapZoneName.Contains("Deep"))
                    {
                        wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 250);
                        Thread.Sleep(robotManager.Helpful.Others.Random(25, 50));
                    }

                    Logging.Write("Re enable teleport ");
                    wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;


                    while(!GoToTask.ToPosition(enterStormwindOutside))
                    {
                        wManager.Wow.Helpers.MovementManager.Face(enterStormwindOutside);
                        GoToTask.ToPosition(enterStormwindOutside);
                        Thread.Sleep(250);
                    }

                }
                else if(Usefuls.MapZoneName.Contains("Tram") || Usefuls.MapZoneName.Contains("Ironforge"))
                {
                    Logging.Write("[FNV_Quester]: Unable to find tram, restart... .");
                    isRestarted = true;
                    restartTram("Ironforge");
                }

            }
        }
        isRestarted = false;
    }
    */
}

//Additional functions for quests
public class Quests
{
    public static void abandon(string questName)
    {
        wManager.Wow.Helpers.Lua.LuaDoString("local name = '" + questName + "' for i=1,GetNumQuestLogEntries() do local questTitle, level, questTag, suggestedGroup, isHeader, isCollapsed, isComplete = GetQuestLogTitle(i) if string.find(questTitle, name) then SelectQuestLogEntry(i) SetAbandonQuest() AbandonQuest() end end");

    }

    public static bool hasFailed(string questName)
    {
        int temp = 0;
        temp = wManager.Wow.Helpers.Lua.LuaDoString&lt;int&gt;("local name = '" + questName + "'  for i=1,GetNumQuestLogEntries() do local questTitle, level, questTag, suggestedGroup, isHeader, isCollapsed, isComplete = GetQuestLogTitle(i) if string.find(questTitle, name) then SelectQuestLogEntry(i) local questTimer = GetQuestLogTimeLeft() return questTimer end end");

        if(temp &gt; 8)
        {
            return false;
        }
        else
        {
            return true;
        }
    }

    public static bool isComplete(string questName)
    {
        int temp;
        temp = wManager.Wow.Helpers.Lua.LuaDoString&lt;int&gt;("local name = '" + questName + "'  for i=1,GetNumQuestLogEntries() do local questTitle, level, questTag, isHeader, isCollapsed, isComplete = GetQuestLogTitle(i) if string.find(questTitle, name) then local questTitleZ, levelZ, questTagZ, isHeaderZ, isCollapsedZ, isCompleteZ = GetQuestLogTitle(i) return isCompleteZ end end");

        if(temp == 1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    public static bool isFailed(string questName)
    {
        int temp;
        temp = wManager.Wow.Helpers.Lua.LuaDoString&lt;int&gt;("local name = '" + questName + "'  for i=1,GetNumQuestLogEntries() do local questTitle, level, questTag, isHeader, isCollapsed, isComplete = GetQuestLogTitle(i) if string.find(questTitle, name) then local questTitleZ, levelZ, questTagZ, isHeaderZ, isCollapsedZ, isCompleteZ = GetQuestLogTitle(i) return isCompleteZ end end");

        if(temp == -1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}


public class ProgressSettings : Settings
{
    public static bool inProgress = false;
        public static void Initialize()
        {
            ProgressSettings.Load();
        }

        public static void Dispose()
        {
            ProgressSettings.CurrentSettings.Save();
            //isLaunched = false;
        }

        public void Settings()
        {
            ProgressSettings.Load();
            ProgressSettings.CurrentSettings.ToForm();
            ProgressSettings.CurrentSettings.Save();
        }

    public ProgressSettings()
    {
        this.launcher = 2;
        this.dwarfStart = 1 + 1;
        this.humanStart = 1 + 1;
        this.nightelfStart = 1 + 1;
        this.dwarfHunter = 1 + 1;
        this.nightelfHunter = 1 + 1;
        this.nightelfDruid = 1 + 1;
        this.warlock = 1 + 1;
        this.kharanos = 1 + 1;
        this.elwynn = 1 + 1;
        this.westfallEins = 1 + 1;
        this.lochModanEins = 1 + 1;
        this.darkshoreEins = 10 + 1;
        this.westfallZwei = 1 + 1;
        this.lochModanZwei = 1 + 1;
        this.darkshoreZwei = 6 + 1;
        this.westfallDrei = 1 + 1;
        this.redridge = 1 + 1;
        this.duskwoodEins = 1 + 1;
        this.stonetalon = 14 + 1;
        this.darkshoreDrei = 1 + 1;
        this.duskwoodZwei = 1 + 1;
        this.wetlandsEins = 1 + 1;
        this.ashenvaleEins = 7 + 1;
        this.wetlandsZwei = 1 + 1;
        this.duskwoodDrei = 2 + 1;
        this.ashenvaleZwei = 7 + 1;
        this.duskwoodVier = 2 + 1;
        this.ashenvaleDrei = 6 + 1;
        this.thousandNeedles = 7 + 1;
        this.desolaceEins = 7 + 1;
        this.hillsbradEins = 2 + 1;
        this.stranglethornEins = 2 + 1;
        this.stranglethornZwei = 2 + 1;
        this.hillsbradZwei = 2 + 1;
        this.arathiEins = 2 + 1;
        this.stranglethornDrei = 2 + 1;
        this.dustwallowEins = 10 + 1;
        this.desolaceZwei = 9 + 1;
        this.swampOfSorrowsEins = 2 + 1;
        this.stranglethornVier = 2 + 1;
        this.badlandsEins = 2 + 1;
        this.alteracMountain = 2 + 1;
        this.badlandsZwei = 2 + 1;
        this.tanarisEins = 7 + 1;
        this.stranglethornFünf  = 2 + 1;
        this.hinterlandsEins = 2 + 1;
        this.feralasEins = 7 + 1;
        this.hinterlandsZwei = 2 + 1;

                //48+

        this.hinterlandsDrei = 2 + 1;
        this.blastedLandsEins = 2 + 1;
        this.blastedLandsZwei = 2 + 1;
        this.blastedLandsDrei = 2 + 1;
        this.burningSteppesEins = 2 + 1;
        this.burningSteppesZwei = 2 + 1;
        this.burningSteppesDrei = 2 + 1;
        this.easternPleaguelandsEins = 2 + 1;
        this.easternPleaguelandsZwei = 2 + 1;
        this.easternPleaguelandsDrei = 2 + 1;
        this.searingGorgeEins = 2 + 1;
        this.searingGorgeZwei = 2 + 1;
        this.searingGorgeDrei = 2 + 1;
        this.swampOfSorrowsZwei = 2 + 1;
        this.westernPleaguelandsEins = 2 + 1;
        this.westernPleaguelandsZwei = 2 + 1;
        this.westernPleaguelandsDrei = 2 + 1;

        //48+ Kalimdor

        this.azsharaEins = 7 + 1;
        this.azsharaZwei = 7 + 1;
        this.azsharaDrei = 7 + 1;
        this.felwoodEins = 7 + 1;
        this.felwoodZwei = 7 + 1;
        this.felwoodDrei = 7 + 1;
        this.silithusEins = 7 + 1;
        this.silithusZwei = 7 + 1;
        this.silithusDrei = 7 + 1;
        this.feralasZwei = 7 + 1;
        this.feralasDrei = 7 + 1;
        this.feralasVier = 7 + 1;
        this.tanarisZwei = 7 + 1;
        this.tanarisDrei = 7 + 1;
        this.ungoroEins = 7 + 1;
        this.ungoroZwei = 7 + 1;
        this.ungoroDrei = 7 + 1;
        this.winterspringEins = 7 + 1; 
        this.winterspringZwei = 7 + 1;
        this.winterspringDrei = 7 + 1;
        this.winterspringVier = 7 + 1;
    }
    

      public static ProgressSettings CurrentSettings { get; set; }

        public bool Save()
        {
            try
            {
                return Save(AdviserFilePathAndName("FNV_Progress", ObjectManager.Me.Name + "." + Usefuls.RealmName));
            }
            catch(Exception e)
            {
                Logging.WriteDebug("FNV_Progress =&gt; Save(): " + e);
                return false;
            }
        }

        public static bool Load()
        {
            try
            {
                if(File.Exists(AdviserFilePathAndName("FNV_Progress", ObjectManager.Me.Name + "." + Usefuls.RealmName)))
                {
                    CurrentSettings = Load&lt;ProgressSettings&gt;(AdviserFilePathAndName("FNV_Progress", ObjectManager.Me.Name + "." + Usefuls.RealmName));
                    return true;
                }

                ProgressSettings.CurrentSettings = new ProgressSettings();
            }
            catch(Exception e)
            {
                Logging.WriteDebug("FNV_Progress =&gt; Load(): " + e);
            }
            return false;
        }

    public static bool ResetCurrentCharactersProgressSaver()
    {
        try
        {
            if(File.Exists(AdviserFilePathAndName("FNV_Progress", ObjectManager.Me.Name + "." + Usefuls.RealmName)))
            {
                File.Delete(AdviserFilePathAndName("FNV_Progress", ObjectManager.Me.Name + "." + Usefuls.RealmName));
                ProgressSettings.CurrentSettings = new ProgressSettings();
                Logging.Write("[FNV_Quester]: FNV_Progress file of " + ObjectManager.Me.Name + " on server " + Usefuls.RealmName + " successfully deleted");
                return true;
            }
            else
            {
                Logging.Write("[FNV_Quester]: No FNV_Progress file found for " + ObjectManager.Me.Name + " on server " + Usefuls.RealmName);
                return false;
            }
        }
        catch(Exception e)
        {
            Logging.WriteDebug("FNV_Progress =&gt; Load(): " + e);
        }
         return false;
    }

        public int launcher { get; set; }
        public int dwarfStart { get; set; }
        public int dwarfHunter { get; set; }
        public int nightelfHunter { get; set; }
        public int nightelfDruid { get; set; }
        public int warlock { get; set; }
        public int nightelfStart { get; set; }
        public int humanStart { get; set; }
        public int kharanos { get; set; }
        public int elwynn { get; set; }
        public int westfallEins { get; set; }
        public int lochModanEins { get; set; }
        public int darkshoreEins { get; set; }
        public int westfallZwei { get; set; }
        public int lochModanZwei { get; set; }
        public int darkshoreZwei { get; set; }
        public int westfallDrei { get; set; }
        public int redridge { get; set; }
        public int duskwoodEins { get; set; }
        public int darkshoreDrei { get; set; }
        public int stonetalon { get; set; }
        public int duskwoodZwei { get; set; }
        public int wetlandsEins { get; set; }
        public int ashenvaleEins { get; set; }
        public int wetlandsZwei { get; set; }
        public int duskwoodDrei { get; set; }
        public int ashenvaleZwei { get; set; }
        public int duskwoodVier { get; set; }
        public int ashenvaleDrei { get; set; }
        public int thousandNeedles { get; set; }
        public int desolaceEins { get; set; }
        public int hillsbradEins { get; set; }
        public int stranglethornEins { get; set; }
        public int stranglethornZwei{ get; set; }
        public int hillsbradZwei { get; set; }
        public int arathiEins { get; set; }
        public int stranglethornDrei { get; set; }
        public int dustwallowEins { get; set; }
        public int desolaceZwei { get; set; }
        public int badlandsEins { get; set; }
        public int swampOfSorrowsEins { get; set; }
        public int stranglethornVier { get; set; }
        public int alteracMountain { get; set; }
        public int badlandsZwei { get; set; }
        public int tanarisEins { get; set; }
        public int stranglethornFünf { get; set; }
        public int hinterlandsEins { get; set; }
        public int feralasEins { get; set; }
        public int hinterlandsZwei { get; set; }

        //48+ Eastern Kingdoms
        public int hinterlandsDrei { get; set; }
        public int blastedLandsEins { get; set; }
        public int blastedLandsZwei { get; set; }
        public int blastedLandsDrei { get; set; }
        public int burningSteppesEins { get; set; }
        public int burningSteppesZwei { get; set; }
        public int burningSteppesDrei { get; set; }
        public int easternPleaguelandsEins { get; set; }
        public int easternPleaguelandsZwei { get; set; }
        public int easternPleaguelandsDrei { get; set; }
        public int searingGorgeEins { get; set; }
        public int searingGorgeZwei { get; set; }
        public int searingGorgeDrei { get; set; }
        public int swampOfSorrowsZwei { get; set; }
        public int westernPleaguelandsEins { get; set; }
        public int westernPleaguelandsZwei { get; set; }
        public int westernPleaguelandsDrei { get; set; }

        //48+ Kalimdor

        public int azsharaEins { get; set; }
        public int azsharaZwei { get; set; }
        public int azsharaDrei { get; set; }
        public int felwoodEins { get; set; }
        public int felwoodZwei { get; set; }
        public int felwoodDrei { get; set; }
        public int silithusEins { get; set; }
        public int silithusZwei { get; set; }
        public int silithusDrei { get; set; }
        public int feralasZwei { get; set; }
        public int feralasDrei { get; set; }
        public int feralasVier { get; set; }
        public int tanarisZwei { get; set; }
        public int tanarisDrei { get; set; }
        public int ungoroEins { get; set; }
        public int ungoroZwei { get; set; }
        public int ungoroDrei { get; set; }
        public int winterspringEins { get; set; }
        public int winterspringZwei { get; set; }
        public int winterspringDrei { get; set; }
        public int winterspringVier { get; set; }





}


/*
    //Settings   
    public class QuesterSettings
    {
        private static bool isLaunched;

        public static void Initialize()
        {
            isLaunched = true;
            FNVSettings.Load();

            while(isLaunched &amp; Products.IsStarted)
            {
                Thread.Sleep(500);
                Dispose();
            }
        }

        public static void Dispose()
        {
            FNVSettings.CurrentSettings.Save();
            //isLaunched = false;
        }

        public void Settings()
        {
            FNVSettings.Load();
            FNVSettings.CurrentSettings.ToForm();
            FNVSettings.CurrentSettings.Save();
        }
    }

    */

    [Serializable]
    public class FNVSettings : Settings
    {

        public static bool inProgress = false;
        public static void Initialize()
        {
            FNVSettings.Load();
        }

        public static void Dispose()
        {
            FNVSettings.CurrentSettings.Save();
            //isLaunched = false;
        }

        public void Settings()
        {
            FNVSettings.Load();
            FNVSettings.CurrentSettings.ToForm();
            FNVSettings.CurrentSettings.Save();
        }

        public FNVSettings()
        {
        //Completed profiles -&gt; True == completed
        this.launcher = false;
        this.dwarfStart = false;
        this.humanStart = false;
        this.nightelfStart = false;
        this.dwarfHunter = false;
        this.nightelfHunter = false;
        this.nightelfDruid = false;
        this.warlock = false;
        this.kharanos = false;
        this.elwynn = false;
        this.westfallEins = false;
        this.lochModanEins = false;
        this.darkshoreEins = false;
        this.westfallZwei = false;
        this.lochModanZwei = false;
        this.darkshoreZwei = false;
        this.westfallDrei = false;
        this.redridge = false;
        this.duskwoodEins = false;
        this.darkshoreDrei = false;
        this.stonetalon = false;
        this.duskwoodZwei = false;
        this.wetlandsEins = false;
        this.ashenvaleEins = false;
        this.wetlandsZwei = false;
        this.duskwoodDrei = false;
        this.ashenvaleZwei = false;
        this.duskwoodVier = false;
        this.ashenvaleDrei = false;
        this.thousandNeedles = false;
        this.desolaceEins = false; 
        this.hillsbradEins = false; 
        this.stranglethornEins = false;
        this.stranglethornZwei = false;
        this.hillsbradZwei = false;
        this.arathiEins = false;
        this.stranglethornDrei = false;
        this.dustwallowEins = false; 
        this.desolaceZwei = false; 
        this.swampOfSorrowsEins = false; 
        this.stranglethornVier = false; 
        this.badlandsEins = false; 
        this.alteracMountain = false;
        this.badlandsZwei = false;
        this.tanarisEins = false;
        this.stranglethornFünf  = false;
        this.hinterlandsEins = false;
        this.feralasEins = false; 
        this.hinterlandsZwei = false; 

        //48+

        this.hinterlandsDrei = false; 
        this.blastedLandsEins = false; 
        this.blastedLandsZwei = false; 
        this.blastedLandsDrei = false; 
        this.burningSteppesEins = false; 
        this.burningSteppesZwei = false; 
        this.burningSteppesDrei = false; 
        this.easternPleaguelandsEins = false; 
        this.easternPleaguelandsZwei = false; 
        this.easternPleaguelandsDrei = false; 
        this.searingGorgeEins = false; 
        this.searingGorgeZwei = false; 
        this.searingGorgeDrei = false; 
        this.swampOfSorrowsZwei = false; 
        this.westernPleaguelandsEins = false; 
        this.westernPleaguelandsZwei = false; 
        this.westernPleaguelandsDrei = false; 

        //48+ Kalimdor

        this.azsharaEins = false; 
        this.azsharaZwei = false; 
        this.azsharaDrei = false; 
        this.felwoodEins = false; 
        this.felwoodZwei = false; 
        this.felwoodDrei = false; 
        this.silithusEins = false; 
        this.silithusZwei = false; 
        this.silithusDrei = false; 
        this.feralasZwei = false; 
        this.feralasDrei = false; 
        this.feralasVier = false; 
        this.tanarisZwei = false; 
        this.tanarisDrei = false; 
        this.ungoroEins = false; 
        this.ungoroZwei = false; 
        this.ungoroDrei = false; 
        this.winterspringEins = false; 
        this.winterspringZwei = false; 
        this.winterspringDrei = false; 
        this.winterspringVier = false; 

            //FlightMaster discovered
            //Eastern Kingdoms
            this.ArathiHighlands = false;
            this.Wetlands = false;
            this.WesternPlaguelands = false;
            this.EasternPlaguelands = false;
            this.HillsbradFoothills = false;
            this.TheHinterlands = false;
            this.LochModan = false;
            this.Ironforge = false;
            this.SearingGorge = false;
            this.BurningSteppes = false;
            this.RedridgeMountains = false;
            this.Stormwind = false;
            this.Westfall = false;
            this.Duskwood = false;
            this.StranglethornValley = false;

            //Kalimdor
            this.Teldrassil = false;
            this.Darkshore = false;
            this.Winterspring = false;
            this.Azshara = false;
            this.Ashenvale = false;
            this.StonetalonMountains = false;
            this.Desolace = false;
            this.TheBarrens = false;
            this.Tanaris = false;
            this.FeralasFeathermoon = false;
            this.FeralasThalanaar = false;
            this.UngoroCrater = false;
            this.DustwallowMarsh = false;
            this.Silithus = false;
            this.Moonglade = false;
            this.Felwood = false;

        }

    public static void flightMasterSaveChanges(FlightMasterDB needToChange)
    {

        if(needToChange.name.Contains("Arathi"))
            CurrentSettings.ArathiHighlands = true;

        if(needToChange.name.Contains("Wetlands"))
            CurrentSettings.Wetlands = true;

        if(needToChange.name.Contains("Western"))
            CurrentSettings.WesternPlaguelands = true;

        if(needToChange.name.Contains("Eastern"))
            CurrentSettings.EasternPlaguelands = true;

        if(needToChange.name.Contains("Hillsbrad"))
            CurrentSettings.HillsbradFoothills = true;

        if(needToChange.name.Contains("Hinterlands"))
            CurrentSettings.TheHinterlands = true;

        if(needToChange.name.Contains("Modan"))
            CurrentSettings.LochModan = true;

        if(needToChange.name.Contains("Ironforge"))
            CurrentSettings.Ironforge = true;

        if(needToChange.name.Contains("Searing"))
            CurrentSettings.SearingGorge = true;

        if(needToChange.name.Contains("Burning"))
            CurrentSettings.BurningSteppes = true;

        if(needToChange.name.Contains("Redridge"))
            CurrentSettings.RedridgeMountains = true;

        if(needToChange.name.Contains("Stormwind"))
            CurrentSettings.Stormwind = true;

        if(needToChange.name.Contains("Westfall"))
            CurrentSettings.Westfall = true;

        if(needToChange.name.Contains("Duskwood"))
            CurrentSettings.Duskwood = true;

        if(needToChange.name.Contains("Stranglethorn"))
            CurrentSettings.StranglethornValley = true;


        if(needToChange.name.Contains("Teldrassil"))
            CurrentSettings.Teldrassil = true;

        if(needToChange.name.Contains("Darkshore"))
            CurrentSettings.Darkshore = true;

        if(needToChange.name.Contains("Winterspring"))
            CurrentSettings.Winterspring = true;

        if(needToChange.name.Contains("Azshara"))
            CurrentSettings.Azshara = true;

        if(needToChange.name.Contains("Ashenvale"))
            CurrentSettings.Ashenvale = true;

        if(needToChange.name.Contains("Stonetalon"))
            CurrentSettings.StonetalonMountains = true;

        if(needToChange.name.Contains("Desolace"))
            CurrentSettings.Desolace = true;

        if(needToChange.name.Contains("TheBarrens"))
            CurrentSettings.TheBarrens = true;

        if(needToChange.name.Contains("Tanaris"))
            CurrentSettings.Tanaris = true;

        if(needToChange.name.Contains("TheBarrens"))
            CurrentSettings.TheBarrens = true;

        if(needToChange.name.Contains("Feathermoon"))
            CurrentSettings.FeralasFeathermoon = true;

        if(needToChange.name.Contains("Thalanaar"))
            CurrentSettings.FeralasThalanaar = true;

        if(needToChange.name.Contains("ro Crater"))
            CurrentSettings.UngoroCrater = true;

        if(needToChange.name.Contains("Dustwallow"))
            CurrentSettings.DustwallowMarsh = true;

        if(needToChange.name.Contains("Silithus"))
            CurrentSettings.Silithus = true;

        if(needToChange.name.Contains("Felwood"))
            CurrentSettings.Felwood = true;
            
            FNVSettings.CurrentSettings.Save();
            Logging.Write("[FNV_Quester]: Settings saved of Flight Master " + needToChange.name);
            return;
    }

        public static void flightMasterSaveChanges(String needToChange)
    {

        if(needToChange.Contains("Arathi"))
            CurrentSettings.ArathiHighlands = true;

        if(needToChange.Contains("Wetlands"))
            CurrentSettings.Wetlands = true;

        if(needToChange.Contains("Western"))
            CurrentSettings.WesternPlaguelands = true;

        if(needToChange.Contains("Eastern"))
            CurrentSettings.EasternPlaguelands = true;

        if(needToChange.Contains("Hillsbrad"))
            CurrentSettings.HillsbradFoothills = true;

        if(needToChange.Contains("Hinterlands"))
            CurrentSettings.TheHinterlands = true;

        if(needToChange.Contains("Modan"))
            CurrentSettings.LochModan = true;

        if(needToChange.Contains("Ironforge"))
            CurrentSettings.Ironforge = true;

        if(needToChange.Contains("Searing"))
            CurrentSettings.SearingGorge = true;

        if(needToChange.Contains("Burning"))
            CurrentSettings.BurningSteppes = true;

        if(needToChange.Contains("Redridge"))
            CurrentSettings.RedridgeMountains = true;

        if(needToChange.Contains("Stormwind"))
            CurrentSettings.Stormwind = true;

        if(needToChange.Contains("Westfall"))
            CurrentSettings.Westfall = true;

        if(needToChange.Contains("Duskwood"))
            CurrentSettings.Duskwood = true;

        if(needToChange.Contains("Stranglethorn"))
            CurrentSettings.StranglethornValley = true;

        if(needToChange.Contains("Blasted"))

        if(needToChange.Contains("Teldrassil"))
            CurrentSettings.Teldrassil = true;

        if(needToChange.Contains("Darkshore"))
            CurrentSettings.Darkshore = true;

        if(needToChange.Contains("Winterspring"))
            CurrentSettings.Winterspring = true;

        if(needToChange.Contains("Azshara"))
            CurrentSettings.Azshara = true;

        if(needToChange.Contains("Ashenvale"))
            CurrentSettings.Ashenvale = true;

        if(needToChange.Contains("Stonetalon"))
            CurrentSettings.StonetalonMountains = true;

        if(needToChange.Contains("Desolace"))
            CurrentSettings.Desolace = true;

        if(needToChange.Contains("TheBarrens"))
            CurrentSettings.TheBarrens = true;

        if(needToChange.Contains("Tanaris"))
            CurrentSettings.Tanaris = true;

        if(needToChange.Contains("TheBarrens"))
            CurrentSettings.TheBarrens = true;

        if(needToChange.Contains("Feathermoon"))
            CurrentSettings.FeralasFeathermoon = true;

        if(needToChange.Contains("Thalanaar"))
            CurrentSettings.FeralasThalanaar = true;

        if(needToChange.Contains("ro Crater"))
            CurrentSettings.UngoroCrater = true;

        if(needToChange.Contains("Dustwallow"))
            CurrentSettings.DustwallowMarsh = true;

        if(needToChange.Contains("Silithus"))
            CurrentSettings.Silithus = true;

        if(needToChange.Contains("Felwood"))
            CurrentSettings.Felwood = true;
            
            FNVSettings.CurrentSettings.Save();
            Logging.Write("[FNV_Quester]: Settings saved of Flight Master " + needToChange);
            return;
    }

        public static FNVSettings CurrentSettings { get; set; }

        public bool Save()
        {
            try
            {
                return Save(AdviserFilePathAndName("FNV_Quester", ObjectManager.Me.Name + "." + Usefuls.RealmName));
            }
            catch(Exception e)
            {
                Logging.WriteDebug("FNV_Quester =&gt; Save(): " + e);
                return false;
            }
        }

        public static bool Load()
        {
            try
            {
                if(File.Exists(AdviserFilePathAndName("FNV_Quester", ObjectManager.Me.Name + "." + Usefuls.RealmName)))
                {
                    CurrentSettings = Load&lt;FNVSettings&gt;(AdviserFilePathAndName("FNV_Quester", ObjectManager.Me.Name + "." + Usefuls.RealmName));
                    return true;
                }

                FNVSettings.CurrentSettings = new FNVSettings();
            }
            catch(Exception e)
            {
                Logging.WriteDebug("FNV_Quester =&gt; Load(): " + e);
            }
            return false;
        }

        //Finished profiles -&gt; True == completed
        public bool launcher { get; set; }
        public bool dwarfStart { get; set; }
        public bool dwarfHunter { get; set; }
        public bool nightelfHunter { get; set; }
        public bool nightelfDruid { get; set; }
        public bool warlock { get; set; }
        public bool nightelfStart { get; set; }
        public bool humanStart { get; set; }
        public bool kharanos { get; set; }
        public bool elwynn { get; set; }
        public bool westfallEins { get; set; }
        public bool lochModanEins { get; set; }
        public bool darkshoreEins { get; set; }
        public bool westfallZwei { get; set; }
        public bool lochModanZwei { get; set; }
        public bool darkshoreZwei { get; set; }
        public bool westfallDrei { get; set; }
        public bool redridge { get; set; }
        public bool duskwoodEins { get; set; }
        public bool darkshoreDrei { get; set; }
        public bool stonetalon { get; set; }
        public bool duskwoodZwei { get; set; }
        public bool wetlandsEins { get; set; }
        public bool ashenvaleEins { get; set; }
        public bool wetlandsZwei { get; set; }
        public bool duskwoodDrei { get; set; }
        public bool ashenvaleZwei { get; set; }
        public bool duskwoodVier { get; set; }
        public bool ashenvaleDrei { get; set; }
        public bool thousandNeedles { get; set; }
        public bool desolaceEins { get; set; }
        public bool hillsbradEins { get; set; }
        public bool stranglethornEins { get; set; }
        public bool stranglethornZwei{ get; set; }
        public bool hillsbradZwei { get; set; }
        public bool arathiEins { get; set; }
        public bool stranglethornDrei { get; set; }
        public bool dustwallowEins { get; set; }
        public bool desolaceZwei { get; set; }
        public bool swampOfSorrowsEins { get; set; }
        public bool stranglethornVier { get; set; }
        public bool badlandsEins { get; set; }
        public bool alteracMountain { get; set; }
        public bool badlandsZwei { get; set; }
        public bool tanarisEins { get; set; }
        public bool stranglethornFünf { get; set; }
        public bool hinterlandsEins { get; set; }
        public bool feralasEins { get; set; }
        public bool hinterlandsZwei { get; set; }

                //48+ Eastern Kingdoms
        public bool hinterlandsDrei { get; set; }
        public bool blastedLandsEins { get; set; }
        public bool blastedLandsZwei { get; set; }
        public bool blastedLandsDrei { get; set; }
        public bool burningSteppesEins { get; set; }
        public bool burningSteppesZwei { get; set; }
        public bool burningSteppesDrei { get; set; }
        public bool easternPleaguelandsEins { get; set; }
        public bool easternPleaguelandsZwei { get; set; }
        public bool easternPleaguelandsDrei { get; set; }
        public bool searingGorgeEins { get; set; }
        public bool searingGorgeZwei { get; set; }
        public bool searingGorgeDrei { get; set; }
        public bool swampOfSorrowsZwei { get; set; }
        public bool westernPleaguelandsEins { get; set; }
        public bool westernPleaguelandsZwei { get; set; }
        public bool westernPleaguelandsDrei { get; set; }

        //48+ Kalimdor

        public bool azsharaEins { get; set; }
        public bool azsharaZwei { get; set; }
        public bool azsharaDrei { get; set; }
        public bool felwoodEins { get; set; }
        public bool felwoodZwei { get; set; }
        public bool felwoodDrei { get; set; }
        public bool silithusEins { get; set; }
        public bool silithusZwei { get; set; }
        public bool silithusDrei { get; set; }
        public bool feralasZwei { get; set; }
        public bool feralasDrei { get; set; }
        public bool feralasVier { get; set; }
        public bool tanarisZwei { get; set; }
        public bool tanarisDrei { get; set; }
        public bool ungoroEins { get; set; }
        public bool ungoroZwei { get; set; }
        public bool ungoroDrei { get; set; }
        public bool winterspringEins { get; set; }
        public bool winterspringZwei { get; set; }
        public bool winterspringDrei { get; set; }
        public bool winterspringVier { get; set; }



       // public bool hinterlandsZwei { get; set; }

        public bool defaultSettings { get; set; }
       // public bool dwarfStart { get; set; }
       // public bool nightelfStart { get; set; }
        //public bool humanStart { get; set; }
      //  public bool westfallEins { get; set; }
        public bool lochModan { get; set; }
        public bool auberdine { get; set; }
       // public bool westfallZwei { get; set; }
        public bool lakeshire { get; set; }
        public bool wetlands { get; set; }
        public bool ashenvale { get; set; }
       // public bool thousandNeedles { get; set; }
        public bool dustwallow { get; set; }
        public bool badlands { get; set; }
        public bool alterac { get; set; }
        public bool swampOfSorrows { get; set; }
        public bool tanaris { get; set; }
        public bool stranglethorn { get; set; }
        //public bool hinterlandsEins { get; set; }
        public bool feralas { get; set; }
       // public bool hinterlandsZwei { get; set; }

        //FlightMaster
        //Eastern Kingdoms
        public bool Stormwind { get; set; }
        public bool Westfall { get; set; }
        public bool RedridgeMountains { get; set; }
        public bool Duskwood { get; set; }
        public bool StranglethornValley { get; set; }
        public bool Ironforge { get; set; }
        public bool BurningSteppes { get; set; }
        public bool SearingGorge { get; set; }
        public bool LochModan { get; set; }
        public bool Wetlands { get; set; }
        public bool ArathiHighlands { get; set; }
        public bool HillsbradFoothills { get; set; }
        public bool WesternPlaguelands { get; set; }
        public bool EasternPlaguelands { get; set; }
        public bool TheHinterlands { get; set; }

        //Kalimdor
        public bool Ashenvale { get; set; }
        public bool Azshara { get; set; }
        public bool Darkshore { get; set; }
        public bool Teldrassil { get; set; }
        public bool Desolace { get; set; }
        public bool DustwallowMarsh { get; set; }
        public bool Felwood { get; set; }
        public bool FeralasFeathermoon { get; set; }
        public bool FeralasThalanaar { get; set; }
        public bool Moonglade { get; set; }
        public bool Silithus { get; set; }
        public bool StonetalonMountains { get; set; }
        public bool Tanaris { get; set; }
        public bool TheBarrens { get; set; }
        public bool UngoroCrater { get; set; }
        public bool Winterspring { get; set; }

    }

    //Buy and check bags
    public class bags
    {
        public static bool bagsStarted = false;

        public static int bagsEquipped()
        {
            int returnValue = 0;
            string empty = "";

            for(int i = 20; i &lt;= 23; i++)
            {
                empty = wManager.Wow.Helpers.Lua.LuaDoString&lt;string&gt;("return GetInventoryItemLink('player', " + i + ")");

                if(empty.Contains("o"))
                    returnValue++;
            }

            return returnValue;
        }

        public static string checkMoney()
        {
            string returnVariableNameZ = "";

            returnVariableNameZ = wManager.Wow.Helpers.Lua.LuaDoString("returnVariableNameZ = GetMoney() return returnVariableNameZ", returnVariableNameZ);

            return returnVariableNameZ;
        }

        public static bool canEquip()
        {
            string returnVariableName = "";

            returnVariableName = wManager.Wow.Helpers.Lua.LuaDoString("returnVariableName = GetInventoryItemLink('player', 23 ) return returnVariableName", returnVariableName);


            if(returnVariableName.Equals(""))
            {
                return true;
            }
            else
            {
                return false;
            }

        }

    }


    //Abandon Quests
    public class abandonQuest
    {

        public static void abandon(string questName)
        {

            string name = questName;

            wManager.Wow.Helpers.Lua.LuaDoString("local name = '" + name + "' for i=1,GetNumQuestLogEntries() do local questTitle, level, questTag, suggestedGroup, isHeader, isCollapsed, isComplete = GetQuestLogTitle(i) if string.find(questTitle, name) then SelectQuestLogEntry(i) SetAbandonQuest() AbandonQuest() end end");


        }

    }



    //Throw away items - by Reapler
    public class throwAway
    {
        public static int GetItemQuantity(string itemName)
        {
            var execute =
                "local itemCount = 0; " +
                "for b=0,4 do " +
                    "if GetBagName(b) then " +
                        "for s=1, GetContainerNumSlots(b) do " +
                            "local itemLink = GetContainerItemLink(b, s) " +
                            "if itemLink then " +
                                "local _, stackCount = GetContainerItemInfo(b, s)\t " +
                                "if string.find(itemLink, \"" + itemName + "\") then " +
                                    "itemCount = itemCount + stackCount; " +
                                "end " +
                            "end " +
                        "end " +
                    "end " +
                "end; " +
                "return itemCount; ";
            return Lua.LuaDoString&lt;int&gt;(execute);
        }

        /// &lt;summary&gt;
        /// Used to delete all items by name.
        /// &lt;/summary&gt;
        /// &lt;param name="itemName"&gt;The item to delete.&lt;/param&gt;
        /// &lt;param name="leaveAmount"&gt;The amount of items which remain in the bag.&lt;/param&gt;
        /// &lt;remarks&gt;Bug at links with "-"&lt;/remarks&gt;
        public static void DeleteItems(string itemName, int leaveAmount)
        {
            var itemQuantity = GetItemQuantity(itemName) - leaveAmount;
            if(string.IsNullOrWhiteSpace(itemName) || itemQuantity &lt;= 0)
                return;
            var execute =
                "local itemCount = " + itemQuantity + "; " +
                "local deleted = 0; " +
                "for b=0,4 do " +
                    "if GetBagName(b) then " +
                        "for s=1, GetContainerNumSlots(b) do " +
                            "local itemLink = GetContainerItemLink(b, s) " +
                            "if itemLink then " +
                                "local _, stackCount = GetContainerItemInfo(b, s)\t " +
                                "local leftItems = itemCount - deleted; " +
                                "if string.find(itemLink, \"" + itemName + "\") and leftItems &gt; 0 then " +
                                    "if stackCount &lt;= 1 then " +
                                        "PickupContainerItem(b, s); " +
                                        "DeleteCursorItem(); " +
                                        "deleted = deleted + 1; " +
                                    "else " +
                                        "if (leftItems &gt; stackCount) then " +
                                            "SplitContainerItem(b, s, stackCount); " +
                                            "DeleteCursorItem(); " +
                                            "deleted = deleted + stackCount; " +
                                        "else " +
                                            "SplitContainerItem(b, s, leftItems); " +
                                            "DeleteCursorItem(); " +
                                            "deleted = deleted + leftItems; " +
                                        "end " +
                                    "end " +
                                "end " +
                            "end " +
                        "end " +
                    "end " +
                "end; ";
            Lua.LuaDoString(execute);
        }
    }


public class Darnassus
{
    private static Vector3 darnassusEnterPos = new Vector3(8775.104, 962.8825, 30.33067);
    private static Vector3 darnassusLeavePos = new Vector3(9945.827, 2598.705, 1316.187);

    public static void enter()
    {
        Logging.Write("[FNV_Quester]: Moving to position to enter Darnassus portal...");

        GoToTask.ToPosition(darnassusEnterPos);

        Logging.Write("[FNV_Quester]: Enter Darnassus, disable teleport...");

        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;

        Vector3 pos = new Vector3(8812.807f, 972.6884f, 32.50122f);

        while(ObjectManager.Me.Position.DistanceTo(pos) &gt; 1 &amp;&amp; Usefuls.SubMapZoneName.Contains("theran Village"))
        {
            wManager.Wow.Helpers.MovementManager.Face(pos);
            wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 125);
            Thread.Sleep(robotManager.Helpful.Others.Random(10, 25));
        }

        Logging.Write("[FNV_Quester]: Reenable teleport");

        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;
    }

    public static void leave()
    {
        Logging.Write("[FNV_Quester]: Moving to position to leave Darnassus portal...");

        GoToTask.ToPosition(darnassusLeavePos);

        Logging.Write("[FNV_Quester]: Leave Darnassus, disable teleport...");

        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;

        Vector3 pos = new Vector3(9946.378f, 2642.551f, 1316.749f);

        while(ObjectManager.Me.Position.DistanceTo(pos) &gt; 1 &amp;&amp; Usefuls.MapZoneName.Contains("Darnassus"))
        {
            wManager.Wow.Helpers.MovementManager.Face(pos);
            wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 125);
            Thread.Sleep(robotManager.Helpful.Others.Random(10, 25));
        }

        Logging.Write("[FNV_Quester]: Reenable teleport");
        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;
    }
}

    [Serializable]
    public class FNVQuesterFlightMaster : Settings
    {
        public FNVQuesterFlightMaster()
        {
            //FlightMaster discovered
            //Eastern Kingdoms
            this.ArathiHighlands = false;
            this.Wetlands = false;
            this.WesternPlaguelands = false;
            this.EasternPlaguelands = false;
            this.HillsbradFoothills = false;
            this.TheHinterlands = false;
            this.LochModan = false;
            this.Ironforge = false;
            this.SearingGorge = false;
            this.BurningSteppes = false;
            this.RedridgeMountains = false;
            this.Stormwind = false;
            this.Westfall = false;
            this.Duskwood = false;
            this.StranglethornValley = false;

            //Kalimdor
            this.Teldrassil = false;
            this.Darkshore = false;
            this.Winterspring = false;
            this.Azshara = false;
            this.Ashenvale = false;
            this.StonetalonMountains = false;
            this.Desolace = false;
            this.TheBarrens = false;
            this.Tanaris = false;
            this.FeralasFeathermoon = false;
            this.FeralasThalanaar = false;
            this.UngoroCrater = false;
            this.DustwallowMarsh = false;
            this.Silithus = false;
            this.Moonglade = false;
            this.Felwood = false;

        }

    public static void flightMasterSaveChanges(FlightMasterDB needToChange)
    {

        if(needToChange.name.Contains("Arathi"))
            CurrentSettings.ArathiHighlands = true;

        if(needToChange.name.Contains("Wetlands"))
            CurrentSettings.Wetlands = true;

        if(needToChange.name.Contains("Western"))
            CurrentSettings.WesternPlaguelands = true;

        if(needToChange.name.Contains("Eastern"))
            CurrentSettings.EasternPlaguelands = true;

        if(needToChange.name.Contains("Hillsbrad"))
            CurrentSettings.HillsbradFoothills = true;

        if(needToChange.name.Contains("Hinterlands"))
            CurrentSettings.TheHinterlands = true;

        if(needToChange.name.Contains("Modan"))
            CurrentSettings.LochModan = true;

        if(needToChange.name.Contains("Ironforge"))
            CurrentSettings.Ironforge = true;

        if(needToChange.name.Contains("Searing"))
            CurrentSettings.SearingGorge = true;

        if(needToChange.name.Contains("Burning"))
            CurrentSettings.BurningSteppes = true;

        if(needToChange.name.Contains("Redridge"))
            CurrentSettings.RedridgeMountains = true;

        if(needToChange.name.Contains("Stormwind"))
            CurrentSettings.Stormwind = true;

        if(needToChange.name.Contains("Westfall"))
            CurrentSettings.Westfall = true;

        if(needToChange.name.Contains("Duskwood"))
            CurrentSettings.Duskwood = true;

        if(needToChange.name.Contains("Stranglethorn"))
            CurrentSettings.StranglethornValley = true;


        if(needToChange.name.Contains("Teldrassil"))
            CurrentSettings.Teldrassil = true;

        if(needToChange.name.Contains("Darkshore"))
            CurrentSettings.Darkshore = true;

        if(needToChange.name.Contains("Winterspring"))
            CurrentSettings.Winterspring = true;

        if(needToChange.name.Contains("Azshara"))
            CurrentSettings.Azshara = true;

        if(needToChange.name.Contains("Ashenvale"))
            CurrentSettings.Ashenvale = true;

        if(needToChange.name.Contains("Stonetalon"))
            CurrentSettings.StonetalonMountains = true;

        if(needToChange.name.Contains("Desolace"))
            CurrentSettings.Desolace = true;

        if(needToChange.name.Contains("Tanaris"))
            CurrentSettings.Tanaris = true;

        if(needToChange.name.Contains("The Barrens"))
            CurrentSettings.TheBarrens = true;

        if(needToChange.name.Contains("Feathermoon"))
            CurrentSettings.FeralasFeathermoon = true;

        if(needToChange.name.Contains("Thalanaar"))
            CurrentSettings.FeralasThalanaar = true;

        if(needToChange.name.Contains("ro Crater"))
            CurrentSettings.UngoroCrater = true;

        if(needToChange.name.Contains("Dustwallow"))
            CurrentSettings.DustwallowMarsh = true;

        if(needToChange.name.Contains("Silithus"))
            CurrentSettings.Silithus = true;

        if(needToChange.name.Contains("Felwood"))
            CurrentSettings.Felwood = true;

        FNVQuesterFlightMaster.CurrentSettings.Save();
        Logging.Write("[FNV_FlightMaster]: Settings saved of Flight Master " + needToChange.name);
        return;
    }

        public static FNVQuesterFlightMaster CurrentSettings { get; set; }

        public bool Save()
        {
            try
            {
                return Save(AdviserFilePathAndName("FNVQuesterFlightMaster", ObjectManager.Me.Name + "." + Usefuls.RealmName));
            }
            catch(Exception e)
            {
                Logging.WriteDebug("FNVQuesterFlightMaster =&gt; Save(): " + e);
                return false;
            }
        }

        public static bool Load()
        {
            try
            {
                if(File.Exists(AdviserFilePathAndName("FNVQuesterFlightMaster", ObjectManager.Me.Name + "." + Usefuls.RealmName)))
                {
                    CurrentSettings = Load&lt;FNVQuesterFlightMaster&gt;(AdviserFilePathAndName("FNVQuesterFlightMaster", ObjectManager.Me.Name + "." + Usefuls.RealmName));
                    return true;
                }

                FNVQuesterFlightMaster.CurrentSettings = new FNVQuesterFlightMaster();
            }
            catch(Exception e)
            {
                Logging.WriteDebug("FNVQuesterFlightMaster =&gt; Load(): " + e);
            }
            return false;
        }


        //FlightMaster
        //Eastern Kingdoms
        public bool Stormwind { get; set; }
        public bool Westfall { get; set; }
        public bool RedridgeMountains { get; set; }
        public bool Duskwood { get; set; }
        public bool StranglethornValley { get; set; }
        public bool Ironforge { get; set; }
        public bool BurningSteppes { get; set; }
        public bool SearingGorge { get; set; }
        public bool LochModan { get; set; }
        public bool Wetlands { get; set; }
        public bool ArathiHighlands { get; set; }
        public bool HillsbradFoothills { get; set; }
        public bool WesternPlaguelands { get; set; }
        public bool EasternPlaguelands { get; set; }
        public bool TheHinterlands { get; set; }

        //Kalimdor

        public bool Ashenvale { get; set; }
        public bool Azshara { get; set; }
        public bool Darkshore { get; set; }
        public bool Teldrassil { get; set; }
        public bool Desolace { get; set; }
        public bool DustwallowMarsh { get; set; }
        public bool Felwood { get; set; }
        public bool FeralasFeathermoon { get; set; }
        public bool FeralasThalanaar { get; set; }
        public bool Moonglade { get; set; }
        public bool Silithus { get; set; }
        public bool StonetalonMountains { get; set; }
        public bool Tanaris { get; set; }
        public bool TheBarrens { get; set; }
        public bool UngoroCrater { get; set; }
        public bool Winterspring { get; set; }

    }

public class Boat
{
    private static bool _boatTaken = false;

    public static void menethilToAuberdine()
    {

        // Settings
        var zeppelinEntryId = 176310; // Zeppelin/Ship EntryId
                                      // From
        var fromZeppelinWaitPosition = new Vector3(-3709.475, -575.0988, 0); // Position where Zeppelin/Ship waits players (from)
        var fromPlayerWaitPosition = new Vector3(-3727.4, -581.3, 6.2); // Position where the player waits Zeppelin/Ship (from)
        var fromPlayerInZeppelinPosition = new Vector3(-3713.333, -571.7416, 6.098111); // Position where the player waits in the Zeppelin/Ship (from)
                                                                                        // To
        var toZeppelinWaitPosition = new Vector3(6406.216, 823.0809, 0); // Position where Zeppelin/Ship waits players (to)
        var toPlayerLeavePosition = new Vector3(6461.408, 806.1595, 6.770809); // Position to go out the Zeppelin/Ship (to)
                                                                               //Pos1
        var enterPos1 = new Vector3(-3724.827, -581.0698, 6.191196);
        //Pos2
        var enterPos2 = new Vector3(-3723.727, -580.3727, 6.184784);
        _boatTaken = false;

        if(!_boatTaken)
        {
            // Change WRobot settings:
            Logging.Write("[FNV_Quester]: Taking boat from Menethil to Auberdine");
            wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;
            wManager.wManagerSetting.CurrentSetting.Repair = false;
            wManager.wManagerSetting.CurrentSetting.Selling = false;
            wManager.wManagerSetting.CurrentSetting.UsePathsFinder = false;

            // Code:
            if(!Conditions.InGameAndConnectedAndProductStartedNotInPause)
                return;

            while(Products.IsStarted &amp;&amp; !_boatTaken)
            {
                while(Usefuls.ContinentId != (int)ContinentId.Kalimdor)
                {
                    if(!ObjectManager.Me.InTransport)
                    {
                        if(GoToTask.ToPosition(fromPlayerWaitPosition))
                        {
                            var zeppelin = ObjectManager.GetWoWGameObjectByEntry(zeppelinEntryId).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
                            if(zeppelin != null &amp;&amp; zeppelin.Position.DistanceTo(fromZeppelinWaitPosition) &lt; 1)
                            {

                                MovementManager.MoveTo(enterPos1);
                                if(GoToTask.ToPosition(enterPos1))
                                    MovementManager.MoveTo(enterPos2);

                                Lua.LuaDoString("ClearTarget()");

                                //wManager.Wow.Helpers.MovementManager.Face(new Vector3(-3713.333, -571.7416, 6.098111));

                                MovementManager.MoveTo(fromPlayerInZeppelinPosition);
                            }
                        }
                    }
                }
                while(Usefuls.ContinentId == (int)ContinentId.Kalimdor)
                {
                    if(ObjectManager.Me.InTransport)
                    {
                        var zeppelin = ObjectManager.GetWoWGameObjectByEntry(zeppelinEntryId).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
                        if(zeppelin != null &amp;&amp; zeppelin.Position.DistanceTo(toZeppelinWaitPosition) &lt; 1)
                        {
                            MovementManager.MoveTo(toPlayerLeavePosition);
                            break;
                        }
                    }
                }

                Logging.Write("[FNV_Quester]: Boat taken from Menethil to Auberdine");

                wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;
                wManager.wManagerSetting.CurrentSetting.Repair = true;
                wManager.wManagerSetting.CurrentSetting.Selling = true;
                wManager.wManagerSetting.CurrentSetting.UsePathsFinder = true;
                _boatTaken = true;
            }
            return;
        }
        return;
    }
}

public class Key
{
    public static bool haveKey(int keyId)
    {
        bool haveKey = Lua.LuaDoString&lt;bool&gt;("local itemIdSearch = " + keyId + "; local bag = KEYRING_CONTAINER; for slot = 1,MAX_CONTAINER_ITEMS do local itemLink = GetContainerItemLink(bag,slot); local _, itemCount = GetContainerItemInfo(bag,slot); if itemLink and itemCount then local _,_,itemId = string.find(itemLink, '.*|Hitem:(%d+):.*'); if itemId and tonumber(itemId) == itemIdSearch then return true end end end return false");
        return haveKey;
    }
}




public class Authentication
{
    
    private readonly string orderId;
    private readonly string productId;
    private readonly string wRobotAuthKey;

    private readonly BackgroundWorker _validationThread = new BackgroundWorker();
    private bool _isRunning = false;
    private string authUrl;

    public Authentication(string orderId, string productId)
    {
    
        return;  if (orderId == null)
        {
            MessageBox.Show("You need to enter your transaction id (from your Rocketr email) into the plugin settings to use this!");
        }

        this.orderId = orderId;
        this.productId = productId;

        this.wRobotAuthKey = robotManager.Helpful.Others.StringBetween(authManager.LoginServer.GetSubcriptionInfoThread(), robotManager.Translate.Get("License Key") + ": ", "...  - " + robotManager.Translate.Get("Subscription time expire"));
            authUrl = "http://51.38.127.249:8080/authenticate?orderId=" + orderId.Trim() + "&amp;productId=" + productId + "&amp;wRobotAuthKey=" + wRobotAuthKey;
        


        _isRunning = true;
        _validationThread.DoWork += CheckValidiation;
        _validationThread.RunWorkerAsync();
    }
    
    ~Authentication()
    {
        _isRunning = false;
        _validationThread.DoWork -= CheckValidiation;
        _validationThread.Dispose();
    }

    private void CheckValidiation(object sender, DoWorkEventArgs e)
    {
        while (Products.IsStarted &amp;&amp; _isRunning)
        {
            try
            {
                bool timedOut = false;
                HttpWebResponse content = null;
                try
                {
                    var request = (HttpWebRequest)WebRequest.Create(authUrl);
                    request.Timeout = 30000;
                    request.ReadWriteTimeout = 30000;
                    content = (HttpWebResponse)request.GetResponse();
                }
                catch (Exception ex)
                {
                    timedOut = true;
                }
                
                //give it another try
                if ((content != null &amp;&amp; content.StatusCode != HttpStatusCode.OK) || timedOut)
                {
                    Thread.Sleep(60 * 1000);
                    try
                    {
                        var request = (HttpWebRequest)WebRequest.Create(authUrl);
                        request.Timeout = 30000;
                        request.ReadWriteTimeout = 30000;
                        content = (HttpWebResponse)request.GetResponse();
                        timedOut = false;
                    }
                    catch (Exception ex)
                    {
                        timedOut = true;
                    }
                }

                string result = content != null ? new StreamReader(content.GetResponseStream()).ReadToEnd() : "false";

                if (!bool.Parse(result) || (content != null &amp;&amp; content.StatusCode != HttpStatusCode.OK) || timedOut)
                {
                    Products.ProductStop();
                    _isRunning = false;
                    _validationThread.DoWork -= CheckValidiation;
                    _validationThread.Dispose();
                    MessageBox.Show("You are trying to use a different wRobot key with the same order Id or your wRobot key is used by more than 10 IPs. \n\nBot name: " + ObjectManager.Me.Name + "\n\nIf your wRobot key has changed recently (f.e. after purchasing a new one), please contact FNV316");
                    return;
                }

                Thread.Sleep(60 * 1000);
            }
            catch (Exception exp)
            {
                Logging.WriteError("" + exp);
            }
        }
    }
}

    /*
    static ControlAuthentication()
    {
        new Thread(() =&gt;
        {
            while (!Conditions.InGameAndConnectedAndAliveAndProductStarted)
            {
                Thread.Sleep(500);
            }
            Thread.Sleep(30000);
            string status = Logging.Status;
            if (_controlVariable != 5 &amp;&amp; !status.Contains("To Town") &amp;&amp; !status.Contains("Regeneration") &amp;&amp; !status.Contains("Attacked") &amp;&amp; !status.Contains("Trainers") &amp;&amp; !status.Contains("Ressurect") &amp;&amp; !status.Contains("Started"))
            {
                Products.ProductStop();
                MessageBox.Show("Please enter your ID faster, restart the Bot now.");
            }
            Logging.Write("[FNV_Quester]: Launcher authentication sucessful");
        }).Start();
    }
    */

public class ControlAuthentication
{
    private static volatile int _controlVariable = 0;
    private static int _timeout = 0;
    private static bool _isRunning = true;
    private static bool disposeAuthThread = false;
    private static string profileName = "";

    public static void SetControl(int control)
    {
        _controlVariable = control;
    }

    static ControlAuthentication()
    {
        new Thread(() =&gt;
        {
            profileName = wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName;

            while(_isRunning &amp;&amp; !disposeAuthThread &amp;&amp; (wManager.Wow.Helpers.Conditions.ProductIsStarted || wManager.Wow.Helpers.Conditions.ProductInPause))
            {
                if(!wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                {
                    disposeAuthThread = true;
                    break;
                }

                if(!wManager.Wow.Helpers.Conditions.ProductIsStarted)
                {
                    disposeAuthThread = true;
                    break;
                }

                while(wManager.Wow.Helpers.Quest.QuesterCurrentContext.CurrentStep &lt; 2)
                {
                    Thread.Sleep(500);

                    if(_controlVariable == 5 || !wManager.Wow.Helpers.Conditions.ProductIsStarted)
                        break;

                    _timeout += 500;

                    if(_timeout &gt;= 910000)
                    {
                        Products.ProductStop();
                        MessageBox.Show("[FNV_Quester]: Timeout error. Unable to authenticate for more than 15 minutes. \n\nBot name: " + ObjectManager.Me.Name);
                        break;
                    }
                }

                _isRunning = false;

                if(wManager.Wow.Helpers.Conditions.ProductIsStarted || wManager.Wow.Helpers.Conditions.ProductInPause)
                {
                    Thread.Sleep(60000);

                    if(_controlVariable != 5)
                    {
                        Products.ProductStop();
                        MessageBox.Show("[FNV_Quester]: Please enter your ID faster or make sure the authentication step is enabled (#0 START_FNVLauncher_V2 -&gt; Step [1], any other profile -&gt; Step [0]). \nRestart the Bot now. \n\nBot name: " + ObjectManager.Me.Name);
                    }
                    /*
                    else
                    {
                        if(!disposeAuthThread &amp;&amp; wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName) &amp;&amp; Conditions.ProductIsStarted)
                            Logging.Write("[FNV_Quester]: Authentication sucessful");
                    }
                    */
                    _timeout = 0;
                    _isRunning = true;
                }
            }

        }).Start();
    }
    
}

[Serializable]
public class FNVQuesterAuthSettings : robotManager.Helpful.Settings
{
    [Setting]
    [Category("__IMPORTANT__")]
    [DisplayName("Rocketr Order id")]
    [Description("This is your tracking number for when you purchased this product, it is required to use this consistently. You can find it within your product delivery e-mail")]
    public string TransactionId { get { return "free"; } set { } }

    public FNVQuesterAuthSettings()
    {
        TransactionId = null;
    }
    
    public static FNVQuesterAuthSettings CurrentSetting { get; set; }

    public bool Save()
    {
        try
        {
            return Save(AdviserFilePathAndName("FNVQuester_AuthSettings", "Vanilla_Alliance"));
        }
        catch (Exception e)
        {
            robotManager.Helpful.Logging.Write("FNVQuester_AuthSettings &gt; Save(): " + e);
            return false;
        }
    }

    public static bool Load()
    {
        try
        {
            if (File.Exists(AdviserFilePathAndName("FNVQuester_AuthSettings", "Vanilla_Alliance")))
            {
                CurrentSetting =
                    Load&lt;FNVQuesterAuthSettings&gt;(AdviserFilePathAndName("FNVQuester_AuthSettings", "Vanilla_Alliance"));
                return true;
            }
            CurrentSetting = new FNVQuesterAuthSettings();
        }
        catch (Exception e)
        {
            robotManager.Helpful.Logging.Write("FNVQuester_AuthSettings &gt; Load(): " + e);
        }
        return false;
    }
}

public class SearingGorge
{
     private static bool _isStarted = false;
     private static bool _inPause = false;
     private static int gateId = 161536;
     private static Vector3 gatePosition = new Vector3(-6756, -1166, 187);

    public static void initializeGateDetection()
    {
        if(!_isStarted)
        {
            Logging.Write("[FNV_Quester]: Searing Gorge gate detection initialized");
            _isStarted = true;
            MovementEvents.OnSeemStuck += MovementEventsOnOnSeemStuck;
        }
    }

    private static void pause()
    {
        for(int i = 0; i &lt; 15000; i += 1000)
        {
            Thread.Sleep(1000);
        }
        _inPause = false;
        return;
    }

    public static void disposeGateDetection()
    {
        if(_isStarted)
        {
            Logging.Write("[FNV_Quester]: Searing Gorge gate detection disposed");
            _isStarted = false;
            MovementEvents.OnSeemStuck -= MovementEventsOnOnSeemStuck;
        }
    }

    private static void MovementEventsOnOnSeemStuck()
    {
        Logging.Write("SeemStuck detected");

        if(ObjectManager.Me.Position.DistanceTo(gatePosition) &lt;= 10 &amp;&amp; !_inPause)
        {
            Logging.Write("[FNV_Quester]: Stuck at Quarry Gate, trying to open it...");

            GoToTask.ToPositionAndIntecractWithGameObject(gatePosition, gateId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore);
            
            if(GoToTask.ToPositionAndIntecractWithGameObject(gatePosition, gateId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore))
            {
               // _inPause = true;
               // pause();
            }
        }
    }
}

public class SearingGorgeFixedPathfinding
{
    private static List&lt;Vector3&gt; brokenLocationNodes = new List&lt;Vector3&gt;();
    private static bool _inProcessing;
    private static Vector3 currentDestination = new Vector3(0, 0, 0);
    private static string status = "";

    private static void ApplyNodes()
    {
        Vector3 thoriumPoint = new Vector3(-6514, -1162, 308);
        brokenLocationNodes.Add(thoriumPoint);
    }

    public static void Initialize()
    {
        Logging.Write("[FNV_Quester]: Thorium Point pathfinder workaround started");
        MovementEvents.OnMovementPulse += MovementEventsOnOnMovementPulse;
        MovementEvents.OnSeemStuck += MovementEventsOnOnSeemStuck;
        Logging.OnChanged += LoggingEvents_OnChangedStatus;
        ApplyNodes();
        _inProcessing = false;
    }

    public static void Dispose()
    {
        MovementEvents.OnMovementPulse -= MovementEventsOnOnMovementPulse;
        MovementEvents.OnSeemStuck -= MovementEventsOnOnSeemStuck;
        Logging.OnChanged -= LoggingEvents_OnChangedStatus;
    }

    private static void MovementEventsOnOnSeemStuck()
    {
        _inProcessing = false;
    }

    private static void MovementEventsOnOnMovementPulse(List&lt;Vector3&gt; points, CancelEventArgs cancelable)
    {  
        //status = Logging.Status;
        if(CheckDestination(points.LastOrDefault&lt;Vector3&gt;()) &amp;&amp; !_inProcessing &amp;&amp; ObjectManager.Me.Position.DistanceTo(points.Last&lt;Vector3&gt;()) &gt; 50 &amp;&amp; !status.Contains("Follow Path"))
        {
            _inProcessing = true;
            Logging.Write("[FNV_Quester]: Destination vector within broken path finder range. Using custom path for movement to enter instead");
            cancelable.Cancel = true;
            UseCustomPathIn(points.LastOrDefault&lt;Vector3&gt;());
            cancelable.Cancel = false;
            _inProcessing = false;
        }

        if(CheckDestination(ObjectManager.Me.Position) &amp;&amp; !_inProcessing &amp;&amp; ObjectManager.Me.Position.DistanceTo(points.Last&lt;Vector3&gt;()) &gt; 50 &amp;&amp; !status.Contains("Follow Path"))
        {
            _inProcessing = true;
            Logging.Write("[FNV_Quester]: Starting vector within broken path finder range. Using custom path for movement to leave instead");
            cancelable.Cancel = true;
            UseCustomPathOut(points.LastOrDefault&lt;Vector3&gt;());
            cancelable.Cancel = false;
            _inProcessing = false;
        }

        if(CheckDestination(ObjectManager.Me.Position) &amp;&amp; !_inProcessing &amp;&amp; CheckDestination(points.Last&lt;Vector3&gt;()) &amp;&amp; ObjectManager.Me.Position.DistanceTo(points.Last&lt;Vector3&gt;()) &gt; 10 &amp;&amp; !status.Contains("Follow Path"))
        {
            _inProcessing = true;
            currentDestination = points.Last&lt;Vector3&gt;();
            Logging.Write("[FNV_Quester]: Starting and destination vector within broken path finder range. Using custom path for movement instead");
            cancelable.Cancel = true;
            UseCustomPathLoop(points.LastOrDefault&lt;Vector3&gt;());
            cancelable.Cancel = false;
            _inProcessing = false;
        }
    }

    
    private static void LoggingEvents_OnChangedStatus(object sender, Logging.LoggingChangeEventArgs e)
    {
        status = Logging.Status;
    }
    

    private static bool CheckDestination(Vector3 destination)
    {
        foreach(var ele in brokenLocationNodes)
        {
            //Logging.Write("Distance is: " + destination.DistanceTo(ele)); 
            if(destination.DistanceTo(ele) &lt;= 60)
                return true;
        }
        return false;
    }

    private static void UseCustomPathIn(Vector3 destination)
    {

        Vector3 currentDestination = new Vector3(0, 0, 0);

        var path = new List&lt;Vector3&gt;() {
new Vector3(-6605.966f, -1023.291f, 244.5074f, "None"),
new Vector3(-6601.826f, -1023.744f, 244.9385f, "None"),
new Vector3(-6597.218f, -1026.855f, 248.186f, "None"),
new Vector3(-6593.908f, -1031.353f, 252.414f, "None"),
new Vector3(-6591.3f, -1036.307f, 255.8175f, "None"),
new Vector3(-6588.852f, -1041.541f, 258.5742f, "None"),
new Vector3(-6586.07f, -1046.571f, 260.5392f, "None"),
new Vector3(-6582.013f, -1050.151f, 262.3918f, "None"),
new Vector3(-6577.125f, -1052.881f, 264.4617f, "None"),
new Vector3(-6572.03f, -1055.201f, 266.5196f, "None"),
new Vector3(-6566.89f, -1057.423f, 268.521f, "None"),
new Vector3(-6561.761f, -1059.671f, 270.6708f, "None"),
new Vector3(-6556.499f, -1062.034f, 272.971f, "None"),
new Vector3(-6551.548f, -1064.268f, 275.2576f, "None"),
new Vector3(-6546.625f, -1066.932f, 277.3527f, "None"),
new Vector3(-6541.8f, -1069.774f, 279.032f, "None"),
new Vector3(-6536.636f, -1071.892f, 280.7285f, "None"),
new Vector3(-6531.107f, -1072.746f, 282.576f, "None"),
new Vector3(-6525.543f, -1073.38f, 284.4381f, "None"),
new Vector3(-6519.98f, -1074.023f, 286.3544f, "None"),
new Vector3(-6514.447f, -1074.884f, 288.3375f, "None"),
new Vector3(-6508.975f, -1076.073f, 290.369f, "None"),
new Vector3(-6503.632f, -1077.715f, 292.0928f, "None"),
new Vector3(-6498.638f, -1080.577f, 293.695f, "None"),
new Vector3(-6494.001f, -1083.713f, 295.3442f, "None"),
new Vector3(-6490.028f, -1087.634f, 296.9394f, "None"),
new Vector3(-6486.872f, -1092.256f, 298.4525f, "None"),
new Vector3(-6484.295f, -1097.215f, 300.1746f, "None"),
new Vector3(-6483.278f, -1102.701f, 301.5711f, "None"),
new Vector3(-6483.816f, -1108.252f, 302.851f, "None"),
new Vector3(-6485.005f, -1113.707f, 304.0922f, "None"),
new Vector3(-6487.139f, -1118.884f, 305.0337f, "None"),
new Vector3(-6489.344f, -1124.032f, 305.7626f, "None"),
new Vector3(-6491.585f, -1129.163f, 306.1504f, "None"),
new Vector3(-6494.281f, -1134.475f, 306.4971f, "None"),
new Vector3(-6497.214f, -1139.442f, 306.8915f, "None"),
new Vector3(-6500.032f, -1144.085f, 307.3696f, "None"),
new Vector3(-6503.025f, -1149.016f, 307.632f, "None"),
new Vector3(-6505.93f, -1153.804f, 307.8793f, "None"),
new Vector3(-6508.76f, -1158.441f, 307.9853f, "None"),
new Vector3(-6512.148f, -1162.893f, 308.3222f, "None"),
new Vector3(-6517.508f, -1163.161f, 308.5844f, "None"),
            };

        foreach(var ele in path)
        {
            if(ele.DistanceTo(destination) &lt; ele.DistanceTo(currentDestination))
                currentDestination = ele;
        }

        if(wManager.Wow.Bot.Tasks.GoToTask.ToPosition(path.First&lt;Vector3&gt;(), 3.5f, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore))
        {
            wManager.Wow.Bot.Tasks.GoToTask.ToPosition(path.First&lt;Vector3&gt;(), 3.5f, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore);
        }

        while(ObjectManager.Me.Position.DistanceTo(currentDestination) &gt; 5 &amp;&amp; !currentDestination.Equals((Vector3)null) &amp;&amp; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore)
        {
            MovementManager.Go(path);
            Thread.Sleep(100);
        }

        //Logging.Write("Finished takeCustomPath");
        //Reenable();
        _inProcessing = false;
        return;
    }

    private static void UseCustomPathOut(Vector3 destination)
    {

        Vector3 currentDestination = new Vector3(0, 0, 0);

        var path = new List&lt;Vector3&gt;() {
new Vector3(-6520.889f, -1186.334f, 309.2557f, "None"),
new Vector3(-6511.543f, -1163.732f, 308.3743f, "None"),
new Vector3(-6508.988f, -1161.179f, 308.1429f, "None"),
new Vector3(-6504.05f, -1156.218f, 308.0315f, "None"),
new Vector3(-6501.398f, -1153.294f, 308.1518f, "None"),
new Vector3(-6495.091f, -1144.908f, 307.875f, "None"),
new Vector3(-6489.66f, -1136.319f, 307.1272f, "None"),
new Vector3(-6484.931f, -1126.579f, 306.6054f, "None"),
new Vector3(-6481.782f, -1116.925f, 305.3705f, "None"),
new Vector3(-6480.768f, -1106.506f, 302.6744f, "None"),
new Vector3(-6483.211f, -1096.021f, 299.9566f, "None"),
new Vector3(-6488.722f, -1087.545f, 297.2002f, "None"),
new Vector3(-6496.905f, -1080.999f, 294.2147f, "None"),
new Vector3(-6506.868f, -1076.894f, 291.0374f, "None"),
new Vector3(-6516.972f, -1075.943f, 287.6053f, "None"),
new Vector3(-6527.435f, -1075.096f, 283.8497f, "None"),
new Vector3(-6537.802f, -1073.449f, 280.6175f, "None"),
new Vector3(-6548.082f, -1070.127f, 276.9659f, "None"),
new Vector3(-6556.992f, -1065.242f, 273.4804f, "None"),
new Vector3(-6566.444f, -1059.943f, 269.1368f, "None"),
new Vector3(-6575.575f, -1055.484f, 265.3927f, "None"),
new Vector3(-6585.064f, -1050.99f, 261.5944f, "None"),
new Vector3(-6592.596f, -1046.345f, 258.3036f, "None"),
new Vector3(-6594.945f, -1035.768f, 253.8222f, "None"),
new Vector3(-6598.657f, -1026.457f, 247.278f, "None"),
new Vector3(-6605.125f, -1027.011f, 244.9202f, "None"),
new Vector3(-6614.792f, -1030.953f, 244.2407f, "None"),
};

        foreach(var ele in path)
        {
            if(ele.DistanceTo(destination) &lt; ele.DistanceTo(currentDestination))
                currentDestination = ele;
        }

        if(wManager.Wow.Bot.Tasks.GoToTask.ToPosition(path.First&lt;Vector3&gt;(), 3.5f, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore))
        {
            wManager.Wow.Bot.Tasks.GoToTask.ToPosition(path.First&lt;Vector3&gt;(), 3.5f, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore);
        }

        while(ObjectManager.Me.Position.DistanceTo(currentDestination) &gt; 5 &amp;&amp; !currentDestination.Equals((Vector3)null) &amp;&amp; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore)
        {
            MovementManager.Go(path);
            Thread.Sleep(100);
        }

       // Logging.Write("Finished takeCustomPathOut");
        //Reenable();
        _inProcessing = false;
        return;
    }

    private static void UseCustomPathLoop(Vector3 destination)
    {

var path = new List&lt;Vector3&gt;() {
new Vector3(-6511.968f, -1178.022f, 309.2499f, "None"),
new Vector3(-6514.226f, -1180.391f, 309.2652f, "None"),
new Vector3(-6514.92f, -1183.646f, 309.2562f, "None"),
new Vector3(-6512.791f, -1186.548f, 309.2562f, "None"),
new Vector3(-6510.783f, -1189.414f, 309.2562f, "None"),
new Vector3(-6509.006f, -1192.427f, 309.2562f, "None"),
new Vector3(-6512.155f, -1191.501f, 309.2562f, "None"),
new Vector3(-6515.301f, -1190.243f, 309.2562f, "None"),
new Vector3(-6518.614f, -1189.136f, 309.2562f, "None"),
new Vector3(-6522.209f, -1188.875f, 309.2562f, "None"),
new Vector3(-6524.712f, -1188.661f, 309.2562f, "None"),
new Vector3(-6522.414f, -1187.187f, 309.2562f, "None"),
new Vector3(-6521.051f, -1184.315f, 309.2562f, "None"),
new Vector3(-6522.533f, -1181.164f, 309.5719f, "None"),
new Vector3(-6525.171f, -1178.908f, 310.5407f, "None"),
new Vector3(-6528.434f, -1177.668f, 311.458f, "None"),
new Vector3(-6531.906f, -1176.674f, 311.5628f, "None"),
new Vector3(-6535.271f, -1175.711f, 311.0577f, "None"),
new Vector3(-6538.62f, -1174.692f, 310.2652f, "None"),
new Vector3(-6541.887f, -1173.795f, 309.7975f, "None"),
new Vector3(-6545.396f, -1172.942f, 309.3479f, "None"),
new Vector3(-6548.806f, -1172.151f, 309.2578f, "None"),
new Vector3(-6552.216f, -1171.361f, 309.2927f, "None"),
new Vector3(-6555.617f, -1170.538f, 309.4913f, "None"),
new Vector3(-6558.993f, -1169.615f, 309.787f, "None"),
new Vector3(-6559.922f, -1167.805f, 309.8352f, "None"),
new Vector3(-6556.908f, -1165.864f, 310.0252f, "None"),
new Vector3(-6553.557f, -1164.877f, 310.0215f, "None"),
new Vector3(-6550.08f, -1164.484f, 309.926f, "None"),
new Vector3(-6544.97f, -1163.94f, 309.7741f, "None"),
new Vector3(-6534.195f, -1162.793f, 309.3187f, "None"),
new Vector3(-6523.741f, -1161.811f, 309.0215f, "None"),
new Vector3(-6513.615f, -1160.933f, 308.2635f, "None"),
new Vector3(-6506.418f, -1160.309f, 308.1041f, "None"),
new Vector3(-6502.819f, -1159.997f, 308.3569f, "None"),
new Vector3(-6499.444f, -1159.705f, 308.7631f, "None"),
new Vector3(-6496.717f, -1159.744f, 309.0773f, "None"),
new Vector3(-6495.118f, -1161.894f, 309.1303f, "None"),
new Vector3(-6493f, -1162.4f, 309.2f, "None"),
new Vector3(-6495.47f, -1165.365f, 309.19f, "None"),
new Vector3(-6496.578f, -1168.801f, 309.2209f, "None"),
new Vector3(-6497.424f, -1172.189f, 309.2521f, "None"),
new Vector3(-6496.599f, -1175.496f, 311.4286f, "None"),
new Vector3(-6494.471f, -1178.274f, 314.4402f, "None"),
new Vector3(-6492.365f, -1181.069f, 316.9778f, "None"),
new Vector3(-6490.402f, -1183.967f, 319.4284f, "None"),
new Vector3(-6488.469f, -1186.885f, 322.0103f, "None"),
new Vector3(-6486.568f, -1189.69f, 324.5566f, "None"),
new Vector3(-6484.392f, -1192.128f, 325.7157f, "None"),
new Vector3(-6479.565f, -1189.753f, 325.8502f, "None"),
new Vector3(-6477.512f, -1187.101f, 325.9147f, "None"),
new Vector3(-6478.307f, -1183.857f, 325.7819f, "None"),
new Vector3(-6480.627f, -1181.089f, 325.6377f, "None"),
new Vector3(-6482.864f, -1178.397f, 325.7611f, "None"),
new Vector3(-6485f, -1175.625f, 325.7878f, "None"),
new Vector3(-6487.067f, -1172.94f, 325.5157f, "None"),
new Vector3(-6489.333f, -1170.127f, 325.4131f, "None"),
new Vector3(-6492.227f, -1171.737f, 325.9383f, "None"),
new Vector3(-6495.255f, -1173.477f, 326.5012f, "None"),
new Vector3(-6498.819f, -1173.806f, 326.2171f, "None"),
new Vector3(-6501.867f, -1173.776f, 325.811f, "None"),
new Vector3(-6504.835f, -1175.808f, 325.9436f, "None"),
new Vector3(-6507.222f, -1178.351f, 326.3931f, "None"),
new Vector3(-6507.92f, -1181.704f, 326.9203f, "None"),
new Vector3(-6506.445f, -1184.833f, 327.1803f, "None"),
new Vector3(-6504.251f, -1187.702f, 326.8068f, "None"),
new Vector3(-6502.15f, -1190.501f, 326.4582f, "None"),
new Vector3(-6500.116f, -1193.21f, 326.1217f, "None"),
new Vector3(-6498.121f, -1196.085f, 325.64f, "None"),
new Vector3(-6496.097f, -1199.072f, 325.2523f, "None"),
new Vector3(-6493.148f, -1199.734f, 325.4391f, "None"),
new Vector3(-6490.279f, -1197.56f, 325.5786f, "None"),
new Vector3(-6488.075f, -1194.888f, 325.6983f, "None"),
new Vector3(-6489.056f, -1191.798f, 324.8035f, "None"),
new Vector3(-6491.162f, -1189.002f, 322.1753f, "None"),
new Vector3(-6493.301f, -1186.232f, 319.5414f, "None"),
new Vector3(-6495.447f, -1183.467f, 316.7057f, "None"),
new Vector3(-6497.518f, -1180.777f, 313.957f, "None"),
new Vector3(-6499.785f, -1177.831f, 311.3158f, "None"),
new Vector3(-6501.965f, -1175.094f, 309.255f, "None"),
new Vector3(-6504.853f, -1173.284f, 309.1891f, "None"),
new Vector3(-6507.97f, -1174.138f, 309.1942f, "None"),
new Vector3(-6511.066f, -1175.981f, 309.2368f, "None"),
new Vector3(-6513.179f, -1177.529f, 309.2469f, "None"),
};


        foreach(var ele in path)
        {
            if(ele.DistanceTo(destination) &lt; ele.DistanceTo(currentDestination))
                currentDestination = ele;
        }

        if(wManager.Wow.Bot.Tasks.GoToTask.ToPosition(path.First&lt;Vector3&gt;(), 3.5f, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore))
        {
            wManager.Wow.Bot.Tasks.GoToTask.ToPosition(path.First&lt;Vector3&gt;(), 3.5f, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore);
        }
        

        while(ObjectManager.Me.Position.DistanceTo(currentDestination) &gt; 2 &amp;&amp; !currentDestination.Equals((Vector3)null) &amp;&amp; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore)
        {
            if(ObjectManager.Me.Position.DistanceTo(currentDestination) &lt;= 2)
            {
                break;
            }
            
            MovementManager.Go(path);
            Thread.Sleep(100);
        }

        MovementManager.MoveTo(currentDestination);

        //Logging.Write("Finished takeCustomPathLoop");
        currentDestination = new Vector3(0, 0, 0);
        //Reenable();
        _inProcessing = false;
        return;
    }

    //By Matenia
    private static async void Reenable()
    {
        //Logging.Write("Enter reenable");
        await Task.Run(() =&gt;
        {
            Products.InPause = true;
            if(ObjectManager.Me.WowClass == WoWClass.Hunter)
                Lua.LuaDoString("RotaOn = false");
            MovementManager.StopMove();
            MovementManager.CurrentPath.Clear();
            MovementManager.CurrentPathOrigine.Clear();
            Thread.Sleep(5000);
            Products.InPause = false;
            if(ObjectManager.Me.WowClass == WoWClass.Hunter)
                Lua.LuaDoString("RotaOn = true");
            Logging.Write("[VanillaFlightMaster]: Resetting pathing");
        });
    }

}

public class QuesterSettings
{

    public static void ClassSettings()
    {
        if(ObjectManager.Me.WowClass == WoWClass.Warlock)
        {
            switch(ObjectManager.Me.Level / 10)
            {
                case (1):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (2):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (3):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (4):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 45;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 45;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (5):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (6):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                default:
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;
            }

            if(wManager.wManagerSetting.CurrentSetting.DrinkName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.DrinkIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.DrinkName = "Refreshing Spring Water";
            }


            if(wManager.wManagerSetting.CurrentSetting.FoodName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.FoodIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.FoodName = "Tough Hunk of Bread";
            }

            Logging.Write("[FNV_Quester]: Using default food / drink settings for Warlock");
        }

        if(ObjectManager.Me.WowClass == WoWClass.Warrior)
        {
            switch(ObjectManager.Me.Level / 10)
            {

                case (1):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (2):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (3):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 60;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 70;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (4):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 80;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (5):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 100;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 80;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (6):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 120;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 80;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                default:
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;
            }

            if(wManager.wManagerSetting.CurrentSetting.FoodName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.FoodIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.FoodName = "Tough Hunk of Bread";
            }

            Logging.Write("[FNV_Quester]: Using default food / drink settings for Warrior");
        }

        if(ObjectManager.Me.WowClass == WoWClass.Rogue)
        {
            switch(ObjectManager.Me.Level / 10)
            {
                case (1):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (2):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (3):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (4):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 75;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (5):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 100;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 80;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (6):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 120;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 80;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                default:
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;
            }


            if(wManager.wManagerSetting.CurrentSetting.FoodName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.FoodIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.FoodName = "Tough Hunk of Bread";
            }

            Logging.Write("[FNV_Quester]: Using default food / drink settings for Rogue");
        }

        if(ObjectManager.Me.WowClass == WoWClass.Mage)
        {
            switch(ObjectManager.Me.Level / 10)
            {
                case (1):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (2):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (3):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (4):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 60;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 70;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (5):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 60;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 75;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (6):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 60;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 75;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                default:
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;
            }

            if(wManager.wManagerSetting.CurrentSetting.DrinkName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.DrinkIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.DrinkName = "Refreshing Spring Water";
            }


            if(wManager.wManagerSetting.CurrentSetting.FoodName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.FoodIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.FoodName = "Tough Hunk of Bread";
            }

            Logging.Write("[FNV_Quester]: Using default food / drink settings for Mage");
        }

        if(ObjectManager.Me.WowClass == WoWClass.Druid)
        {
            switch(ObjectManager.Me.Level / 10)
            {
                case (1):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (2):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (3):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (4):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 45;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (5):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (6):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                default:
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;
            }

            if(wManager.wManagerSetting.CurrentSetting.DrinkName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.DrinkIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.DrinkName = "Refreshing Spring Water";
            }

            if(wManager.wManagerSetting.CurrentSetting.FoodName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.FoodName = "Healing Touch";
                wManager.wManagerSetting.CurrentSetting.FoodIsSpell = true;
            }

            Logging.Write("[FNV_Quester]: Using default food / drink settings for Druid");
        }

        if(ObjectManager.Me.WowClass == WoWClass.Paladin)
        {

            switch(ObjectManager.Me.Level / 10)
            {
                case (1):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (2):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (3):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 60;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (4):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 45;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (5):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (6):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 100;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 55;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                default:
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;
            }

            if(wManager.wManagerSetting.CurrentSetting.DrinkName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.DrinkIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.DrinkName = "Refreshing Spring Water";
            }

            if(wManager.wManagerSetting.CurrentSetting.FoodName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.FoodName = "Holy Light";
                wManager.wManagerSetting.CurrentSetting.FoodIsSpell = true;
            }


            Logging.Write("[FNV_Quester]: Using default food / drink settings for Paladin");
        }

        if(ObjectManager.Me.WowClass == WoWClass.Hunter)
        {
            switch(ObjectManager.Me.Level / 10)
            {
                case (1):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    Lua.LuaDoString("DEFAULT_CHAT_FRAME:AddMessage('[FNV_Quester]: Do not forget that wRobot counts empty bag slots of ammo bags as free bag space!')");
                    break;

                case (2):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (3):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (4):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 60;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 60;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (5):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (6):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                default:
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    Lua.LuaDoString("DEFAULT_CHAT_FRAME:AddMessage('[FNV_Quester]: Do not forget that wRobot counts empty bag slots of ammo bags as free bag space!')");
                    break;
            }

            if(wManager.wManagerSetting.CurrentSetting.DrinkName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.DrinkIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.DrinkName = "Refreshing Spring Water";
            }

            if(wManager.wManagerSetting.CurrentSetting.FoodName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.FoodIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.FoodName = "Tough Hunk of Bread";
            }

            Logging.Write("[FNV_Quester]: Using default food / drink settings for Hunter");

        }
    }

    public static void SettingsEasternKingdoms()
    {
        //Eastern Kingdoms only
        wManager.wManagerSetting.CurrentSetting.TrainNewSkills = true;

        wManager.wManagerSetting.CurrentSetting.DontStartFighting = false;
        wManager.wManagerSetting.CurrentSetting.DetectNodesStuck = true;
        wManager.wManagerSetting.CurrentSetting.CanAttackUnitsAlreadyInFight = false;
        wManager.wManagerSetting.CurrentSetting.AvoidBlacklistedZonesPathFinder = true;
        wManager.wManagerSetting.CurrentSetting.AttackElite = false;
        wManager.wManagerSetting.CurrentSetting.AttackBeforeBeingAttacked = true;
        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;
        wManager.wManagerSetting.CurrentSetting.FlightMasterTaxiUse = true;
        wManager.wManagerSetting.CurrentSetting.IgnoreFightWhenInMove = false;

        wManager.wManagerSetting.CurrentSetting.Repair = true;
        wManager.wManagerSetting.CurrentSetting.SellGray = true;
        wManager.wManagerSetting.CurrentSetting.SellGreen = true;
        wManager.wManagerSetting.CurrentSetting.Selling = true;
        wManager.wManagerSetting.CurrentSetting.SellWhite = true;
        wManager.wManagerSetting.CurrentSetting.MinFreeBagSlotsToGoToTown = 4;

        wManager.wManagerSetting.CurrentSetting.SearchRadius = 100;
        wManager.wManagerSetting.CurrentSetting.MaxUnitsNear = 100;

        wManager.wManagerSetting.CurrentSetting.WallDistancePathFinder = 2;
        wManager.wManagerSetting.CurrentSetting.AddToNpcDb = false;
        wManager.wManagerSetting.CurrentSetting.BlackListIfNotCompletePath = false;
        wManager.wManagerSetting.CurrentSetting.UseCTM = true;
        wManager.wManagerSetting.CurrentSetting.UseLuaToMove = true;

        wManager.wManagerSetting.CurrentSetting.NpcScanAuctioneer = false;
        wManager.wManagerSetting.CurrentSetting.NpcScanMailboxes = false;
        wManager.wManagerSetting.CurrentSetting.NpcScanRepair = false;
        wManager.wManagerSetting.CurrentSetting.NpcScanVendor = false;

        wManager.wManagerSetting.CurrentSetting.HarvestHerbs = false;
        wManager.wManagerSetting.CurrentSetting.HarvestMinerals = false;

        wManager.wManagerSetting.CurrentSetting.AvoidBlacklistedZonesPathFinder = true;
        wManager.wManagerSetting.CurrentSetting.AvoidWallWithRays = true;
        wManager.wManagerSetting.CurrentSetting.BlackListTrainingDummy = true;
        wManager.wManagerSetting.CurrentSetting.BlackListZoneWhereDead = false;
        wManager.wManagerSetting.CurrentSetting.CalcuCombatRange = false;
        wManager.wManagerSetting.CurrentSetting.CanAttackUnitsAlreadyInFight = false;
        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;
        wManager.wManagerSetting.CurrentSetting.DetectNodesStuck = true;
        wManager.wManagerSetting.CurrentSetting.DontStartFighting = false;
        wManager.wManagerSetting.CurrentSetting.FlightMasterDiscoverRange = 50;
        wManager.wManagerSetting.CurrentSetting.FlightMasterTaxiUse = true;
        wManager.wManagerSetting.CurrentSetting.HarvestAvoidPlayersRadius = 1;
        wManager.wManagerSetting.CurrentSetting.HarvestDuringLongMove = false;
        wManager.wManagerSetting.CurrentSetting.HarvestTimber = false;
        wManager.wManagerSetting.CurrentSetting.HelpingGroupMembers = true;
        wManager.wManagerSetting.CurrentSetting.IgnoreCombatWithPet = false;
        wManager.wManagerSetting.CurrentSetting.IgnoreFightDuringFarmIfDruidForm = false;
        wManager.wManagerSetting.CurrentSetting.IgnoreFightGoundMount = true;
        wManager.wManagerSetting.CurrentSetting.LootChests = false;
        wManager.wManagerSetting.CurrentSetting.LootMobs = true;
        wManager.wManagerSetting.CurrentSetting.MountDistance = 100;
        wManager.wManagerSetting.CurrentSetting.Relogger = true;
        wManager.wManagerSetting.CurrentSetting.SecurityPauseBotIfNerbyPlayer = false;
        wManager.wManagerSetting.CurrentSetting.RecordChatInLog = true;
        wManager.wManagerSetting.CurrentSetting.SecurityShutdownComputer = false;
        wManager.wManagerSetting.CurrentSetting.UsePathsFinder = true;
        wManager.wManagerSetting.CurrentSetting.UseSpiritHealer = false;
        wManager.wManagerSetting.CurrentSetting.WaitResurrectionSickness = true;
        wManager.wManagerSetting.CurrentSetting.WallDistancePathFinder = 2;

        ClassSettings();

        if(Conditions.ForceIgnoreIsAttacked)
        {
            Logging.Write("[FNV_Quester]: Force ignore attack is enabled, going to disable it...");
            Conditions.ForceIgnoreIsAttacked = false;
        }

         wManager.wManagerSetting.CurrentSetting.Save();
         Thread.Sleep(500);
         wManager.wManagerSetting.CurrentSetting.Save();

        wManager.Wow.Forms.UserControlTabGeneralSettings.ReloadGeneralSettings();

        Logging.Write("[FNV_Quester]: Applied default settings for Eastern Kingdoms");

        return;
    }

    public static void SettingsKalimdor()
    {
        //Kalimdor only
        wManager.wManagerSetting.CurrentSetting.TrainNewSkills = false;

        wManager.wManagerSetting.CurrentSetting.DontStartFighting = false;
        wManager.wManagerSetting.CurrentSetting.DetectNodesStuck = true;
        wManager.wManagerSetting.CurrentSetting.CanAttackUnitsAlreadyInFight = false;
        wManager.wManagerSetting.CurrentSetting.AvoidBlacklistedZonesPathFinder = true;
        wManager.wManagerSetting.CurrentSetting.AttackElite = false;
        wManager.wManagerSetting.CurrentSetting.AttackBeforeBeingAttacked = true;
        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;
        wManager.wManagerSetting.CurrentSetting.FlightMasterTaxiUse = true;
        wManager.wManagerSetting.CurrentSetting.IgnoreFightWhenInMove = false;

        wManager.wManagerSetting.CurrentSetting.Repair = true;
        wManager.wManagerSetting.CurrentSetting.SellGray = true;
        wManager.wManagerSetting.CurrentSetting.SellGreen = true;
        wManager.wManagerSetting.CurrentSetting.Selling = true;
        wManager.wManagerSetting.CurrentSetting.SellWhite = true;
        wManager.wManagerSetting.CurrentSetting.MinFreeBagSlotsToGoToTown = 4;

        wManager.wManagerSetting.CurrentSetting.SearchRadius = 100;
        wManager.wManagerSetting.CurrentSetting.MaxUnitsNear = 100;

        wManager.wManagerSetting.CurrentSetting.WallDistancePathFinder = 2;
        wManager.wManagerSetting.CurrentSetting.AddToNpcDb = false;
        wManager.wManagerSetting.CurrentSetting.BlackListIfNotCompletePath = false;
        wManager.wManagerSetting.CurrentSetting.UseCTM = true;
        wManager.wManagerSetting.CurrentSetting.UseLuaToMove = true;

        wManager.wManagerSetting.CurrentSetting.NpcScanAuctioneer = false;
        wManager.wManagerSetting.CurrentSetting.NpcScanMailboxes = false;
        wManager.wManagerSetting.CurrentSetting.NpcScanRepair = false;
        wManager.wManagerSetting.CurrentSetting.NpcScanVendor = false;

        wManager.wManagerSetting.CurrentSetting.HarvestHerbs = false;
        wManager.wManagerSetting.CurrentSetting.HarvestMinerals = false;

        wManager.wManagerSetting.CurrentSetting.AvoidBlacklistedZonesPathFinder = true;
        wManager.wManagerSetting.CurrentSetting.AvoidWallWithRays = true;
        wManager.wManagerSetting.CurrentSetting.BlackListTrainingDummy = true;
        wManager.wManagerSetting.CurrentSetting.BlackListZoneWhereDead = false;
        wManager.wManagerSetting.CurrentSetting.CalcuCombatRange = false;
        wManager.wManagerSetting.CurrentSetting.CanAttackUnitsAlreadyInFight = false;
        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;
        wManager.wManagerSetting.CurrentSetting.DetectNodesStuck = true;
        wManager.wManagerSetting.CurrentSetting.DontStartFighting = false;
        wManager.wManagerSetting.CurrentSetting.FlightMasterDiscoverRange = 50;
        wManager.wManagerSetting.CurrentSetting.FlightMasterTaxiUse = true;
        wManager.wManagerSetting.CurrentSetting.HarvestAvoidPlayersRadius = 1;
        wManager.wManagerSetting.CurrentSetting.HarvestDuringLongMove = false;
        wManager.wManagerSetting.CurrentSetting.HarvestTimber = false;
        wManager.wManagerSetting.CurrentSetting.HelpingGroupMembers = true;
        wManager.wManagerSetting.CurrentSetting.IgnoreCombatWithPet = false;
        wManager.wManagerSetting.CurrentSetting.IgnoreFightDuringFarmIfDruidForm = false;
        wManager.wManagerSetting.CurrentSetting.IgnoreFightGoundMount = true;
        wManager.wManagerSetting.CurrentSetting.LootChests = false;
        wManager.wManagerSetting.CurrentSetting.LootMobs = true;
        wManager.wManagerSetting.CurrentSetting.MountDistance = 100;
        wManager.wManagerSetting.CurrentSetting.Relogger = true;
        wManager.wManagerSetting.CurrentSetting.SecurityPauseBotIfNerbyPlayer = false;
        wManager.wManagerSetting.CurrentSetting.RecordChatInLog = true;
        wManager.wManagerSetting.CurrentSetting.SecurityShutdownComputer = false;
        wManager.wManagerSetting.CurrentSetting.UsePathsFinder = true;
        wManager.wManagerSetting.CurrentSetting.UseSpiritHealer = false;
        wManager.wManagerSetting.CurrentSetting.WaitResurrectionSickness = true;
        wManager.wManagerSetting.CurrentSetting.WallDistancePathFinder = 2;

        ClassSettings();

        if(Conditions.ForceIgnoreIsAttacked)
        {
            Logging.Write("[FNV_Quester]: Force ignore attack is enabled, going to disable it...");
            Conditions.ForceIgnoreIsAttacked = false;
        }

         wManager.wManagerSetting.CurrentSetting.Save();
         Thread.Sleep(500);
         wManager.wManagerSetting.CurrentSetting.Save();

        wManager.Wow.Forms.UserControlTabGeneralSettings.ReloadGeneralSettings();

        Logging.Write("[FNV_Quester]: Applied default settings for Kalimdor");

        return;
    }

}


public class Blackspots
{
   

    public static void StartThread()
    {

    Thread BlackspotValidation = new Thread(() =&gt;
    {
        Logging.Write("[FNV_Quester]: Blackspot validation started");
        Dictionary&lt;Vector3, float&gt; blackspots = new Dictionary&lt;Vector3, float&gt;();
        bool _isStarted = false;

        string profileName = "FNV_V2\\#0 START_FNVLauncher_V2.xml";
        string currentProfileName = wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName;
        int counter = 0;

        if(!_isStarted)
        {
            _isStarted = true;

            while(wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName) &amp;&amp; Conditions.ProductIsStarted)
            {
                Thread.Sleep(1000);
            }

            while(Conditions.ProductIsStarted || Conditions.ProductInPause)
            {

                if(wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                    break;

                if(counter &gt; 300)
                {
                    Logging.Write("[FNV_Quester]: Clear blacklist of current product session");
                    wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
                    counter = 0;
                }

                if(wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported)
                    wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;

                if(!wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(currentProfileName))
                {
                    Logging.Write("[FNV_Quester]: Profile has been changed. Reset current blackspots and save blackspots of loaded profile...");
                    currentProfileName = wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName;

                    blackspots.Clear();

                    foreach(var temp in wManager.wManagerSetting.GetListZoneBlackListed())
                    {
                        blackspots.Add(temp.GetPosition(), temp.Radius);
                    }
                }

                if(blackspots.Count &gt; wManager.wManagerSetting.GetListZoneBlackListed().Count)
                {
                    Logging.Write("[FNV_Quester]: Reaply default blackspots");
                    try
                    {
                        foreach(var temp in blackspots)
                        {
                            if (!wManager.wManagerSetting.GetListZoneBlackListed().Any(b =&gt; b.GetPosition().DistanceTo(temp.Key) &lt; 0.1 &amp;&amp; System.Math.Abs(b.Radius - temp.Value) &lt; 0.1))
                                wManager.wManagerSetting.AddBlackListZone(temp.Key, temp.Value, true);
                        }
                    }
                    catch(Exception e)
                    {
                    }
                }

                if(wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                    break;

                counter++;
                Thread.Sleep(1000);
            }
        }
        _isStarted = false;
        Logging.Write("[FNV_Quester]: Blackspot validation disposed");

    });

        BlackspotValidation.Start();
    }
}

public class ProfileRestarter
{
    private static bool _IsAfk = false;
    private static Vector3 afkPosition = (Vector3)null;
    private static int timer = 0;
    private static bool _isSubscribed = false;
    private static void WatchForEvents()
    {
        if(!_isSubscribed)
        {
            _isSubscribed = true;

            EventsLuaWithArgs.OnEventsLuaWithArgs += (LuaEventsId id, List&lt;string&gt; args) =&gt;
            {
                if(id == wManager.Wow.Enums.LuaEventsId.CHAT_MSG_SYSTEM &amp;&amp; Conditions.ProductIsStartedNotInPause)
                {

                    if(args.FirstOrDefault().Contains("You are now AFK"))
                    {
                        _IsAfk = true;
                        timer = 0;
                        afkPosition = ObjectManager.Me.Position;
                    }
                }
            };
        }
    }

    public static void StartProfileRestarter()
    {

        Thread ProfileRestarterThread = new Thread(() =&gt;
        {
            Logging.Write("[FNV_Quester]: Profile Restarter initialized");

            string profileName = "FNV_V2\\#0 START_FNVLauncher_V2.xml";
            string currentProfileName = wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName;


            while((wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName) || !ObjectManager.Me.GetMove) &amp;&amp; Conditions.ProductIsStarted)
            {
                Thread.Sleep(1000);
            }

            if(!_isSubscribed)
            {
                Thread.Sleep(Usefuls.Latency + 500);
                WatchForEvents();
            }

            while(Conditions.ProductIsStarted || Conditions.ProductInPause)
            {

                if(wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                    break;

                while(_IsAfk &amp;&amp; timer &lt; 600 &amp;&amp; !wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                {
                    Thread.Sleep(1000);
                    timer++;
                }

                if(_IsAfk &amp;&amp; timer &gt;= 600 &amp;&amp; ObjectManager.Me.Position.DistanceTo(afkPosition) &lt; 25)
                {
                    Logging.Write("[FNV_Quester]: Bot seems to stopped / went AFK for too long. Restart of profile in process...");
                    wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName = profileName;
                    robotManager.Products.Products.ProductRestart();
                    break;
                }

                timer = 0;
                _IsAfk = false;
                Thread.Sleep(10000);
            }

            Logging.Write("[FNV_Quester]: Profile Restarter disposed");

        });

        ProfileRestarterThread.Start();
    }
}


class test
{


    public static void testen()
    {

    }
}
    </Script>
  <OffMeshConnections />
  <BlacklistNpc />
  <BlacklistNpcType />
  <Blackspots>
    <Blackspot X="10002.2949" Y="1464.14917" Z="1286.42627" Radius="50" Continent="None" Comment="" />
    <Blackspot X="10948.8125" Y="1600.84912" Z="1275.64209" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10899.48" Y="1603.73743" Z="1270.5697" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10878.74" Y="1606.77856" Z="1270.48157" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10839.6133" Y="1610.77283" Z="1271.251" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10798.63" Y="1612.47864" Z="1270.50232" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10759.6074" Y="1617.23975" Z="1270.50232" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10725.4854" Y="1630.21094" Z="1270.50232" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10682.0977" Y="1640.60669" Z="1270.50232" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10644.3467" Y="1643.25037" Z="1281.68176" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10597.3662" Y="1631.69849" Z="1281.55713" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10566.5557" Y="1651.32178" Z="1281.74988" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10527.3125" Y="1647.30664" Z="1281.77637" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10492.9678" Y="1643.71655" Z="1281.71021" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10450.1777" Y="1639.23987" Z="1281.71021" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10430.4219" Y="1612.046" Z="1281.71021" Radius="30" Continent="None" Comment="" />
    <Blackspot X="10013.86" Y="711.1136" Z="1326.72058" Radius="50" Continent="None" Comment="" />
    <Blackspot X="9959.15" Y="373.763031" Z="1308.92017" Radius="25" Continent="None" Comment="" />
    <Blackspot X="9918.863" Y="417.627563" Z="1305.45459" Radius="25" Continent="None" Comment="" />
    <Blackspot X="9937.227" Y="395.716919" Z="1307.46729" Radius="25" Continent="None" Comment="" />
    <Blackspot X="10074.7031" Y="397.385681" Z="1323.07422" Radius="25" Continent="None" Comment="" />
    <Blackspot X="10097.083" Y="395.811249" Z="1323.62585" Radius="25" Continent="None" Comment="" />
    <Blackspot X="10117.8" Y="394.6028" Z="1326.8772" Radius="25" Continent="None" Comment="" />
    <Blackspot X="10127.334" Y="389.834137" Z="1332.17236" Radius="25" Continent="None" Comment="" />
    <Blackspot X="9983.617" Y="439.7879" Z="1308.4071" Radius="25" Continent="None" Comment="" />
    <Blackspot X="9994.22" Y="402.073761" Z="1310.7417" Radius="25" Continent="None" Comment="" />
    <Blackspot X="10018.1963" Y="377.910461" Z="1312.82861" Radius="25" Continent="None" Comment="" />
    <Blackspot X="9778.878" Y="492.0223" Z="1304.9585" Radius="25" Continent="None" Comment="" />
    <Blackspot X="9765.99" Y="473.020721" Z="1306.45959" Radius="25" Continent="None" Comment="" />
    <Blackspot X="9755.01" Y="456.7007" Z="1305.802" Radius="25" Continent="None" Comment="" />
    <Blackspot X="9564.439" Y="1310.17432" Z="1301.71167" Radius="35" Continent="None" Comment="" />
    <Blackspot X="10682.9727" Y="661.248047" Z="1339.67029" Radius="35" Continent="None" Comment="" />
  </Blackspots>
</EasyQuestProfile>