<?xml version="1.0" encoding="utf-8"?>
<EasyQuestProfile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <QuestsSorted>
    <QuestsSorted Action="RunCode" NameClass="FNVQuesterAuthSettings.Load();&#xD;&#xA;        if (false)&#xD;&#xA;        {&#xD;&#xA;            FNVQuesterAuthSettings.CurrentSetting.ToForm();&#xD;&#xA;        }&#xD;&#xA;        FNVQuesterAuthSettings.CurrentSetting.Save();&#xD;&#xA;        new Authentication(FNVQuesterAuthSettings.CurrentSetting.TransactionId, &quot;e8b609dcf76e&quot;); &#xD;&#xA;        ControlAuthentication.SetControl(5);&#xD;&#xA;&#xD;&#xA;NpcDB.AcceptOnlyProfileNpc = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.WallDistancePathFinder = 2;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.AttackBeforeBeingAttacked = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.TrainNewSkills = true;&#xD;&#xA;&#xD;&#xA;ProgressSettings.Initialize();&#xD;&#xA;wManager.Wow.Helpers.Quest.QuesterCurrentContext.CurrentStep = ProgressSettings.CurrentSettings.duskwoodZwei - 1;&#xD;&#xA;&#xD;&#xA;Logging.Write(&quot;[FNV_Quester]: Loading current Quester step &quot; + (ProgressSettings.CurrentSettings.duskwoodZwei));&#xD;&#xA;&#xD;&#xA;Thread p = new Thread(() =&gt;&#xD;&#xA;{    &#xD;&#xA;ProgressSettings.inProgress = true;&#xD;&#xA;Logging.Write(&quot;[FNV_Quester]: Progress saver initialized&quot;);&#xD;&#xA;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.TrainNewSkills = true;&#xD;&#xA; &#xD;&#xA; while(robotManager.Products.Products.IsStarted)&#xD;&#xA; {&#xD;&#xA;if(!ProgressSettings.inProgress)&#xD;&#xA;{&#xD;&#xA;ProgressSettings.Dispose();&#xD;&#xA;Logging.Write(&quot;[FNV_Quester]: Progress saver disposed&quot;);&#xD;&#xA;break;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;  if (Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause)&#xD;&#xA;  {&#xD;&#xA; if(ProgressSettings.CurrentSettings.duskwoodZwei &lt; wManager.Wow.Helpers.Quest.QuesterCurrentContext.CurrentStep)&#xD;&#xA;{&#xD;&#xA;ProgressSettings.CurrentSettings.duskwoodZwei = wManager.Wow.Helpers.Quest.QuesterCurrentContext.CurrentStep;&#xD;&#xA;ProgressSettings.CurrentSettings.Save();&#xD;&#xA;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;  Thread.Sleep(1000);&#xD;&#xA; }&#xD;&#xA;&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;p.Start();&#xD;&#xA;&#xD;&#xA;NpcDB.AcceptOnlyProfileNpc = true;&#xD;&#xA;wManager.wManagerSetting.CurrentSetting.AttackBeforeBeingAttacked = true;&#xD;&#xA;QuesterSettings.SettingsEasternKingdoms();&#xD;&#xA;wManager.Wow.Forms.UserControlTabGeneralSettings.ReloadGeneralSettings();" />
    <QuestsSorted Action="RunCode" NameClass="wManager.Wow.Forms.UserControlTabGeneralSettings.ReloadGeneralSettings();" />
    <QuestsSorted Action="Pulse" NameClass="Grindto22" />
    <QuestsSorted Action="Pulse" NameClass="ROUTEStormwindToHermit" />
    <QuestsSorted Action="TurnIn" NameClass="TheHermit" />
    <QuestsSorted Action="PickUp" NameClass="SuppliesfromDarkshire" />
    <QuestsSorted Action="Pulse" NameClass="MovetoDarkshire" />
    <QuestsSorted Action="TurnIn" NameClass="SuppliesfromDarkshire" />
    <QuestsSorted Action="PickUp" NameClass="GhostHairThread" />
    <QuestsSorted Action="PickUp" NameClass="TheLegendofStalvan" />
    <QuestsSorted Action="TurnIn" NameClass="TheLegendofStalvan" />
    <QuestsSorted Action="PickUp" NameClass="TheLegendofStalvan2" />
    <QuestsSorted Action="If" NameClass="!Quest.GetQuestCompleted(5)" />
    <QuestsSorted Action="RunCode" NameClass="wManager.Wow.Bot.States.ToTown.ForceToTown = true;" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="TurnIn" NameClass="JittersGrowlingGut" />
    <QuestsSorted Action="Pulse" NameClass="MovetoField" />
    <QuestsSorted Action="RunCode" NameClass="wManager.wManagerSetting.CurrentSetting.DoNotSellList.Add(&quot;Gooey Spider Leg&quot;);" />
    <QuestsSorted Action="Pulse" NameClass="DuskyCrabCakes" />
    <QuestsSorted Action="Pulse" NameClass="MovetoDarkshire2" />
    <QuestsSorted Action="TurnIn" NameClass="DuskyCrabCakes" />
    <QuestsSorted Action="RunCode" NameClass="wManager.wManagerSetting.CurrentSetting.DoNotSellList.Remove(&quot;Gooey Spider Leg&quot;);" />
    <QuestsSorted Action="PickUp" NameClass="ReturntoJitters" />
    <QuestsSorted Action="TurnIn" NameClass="GhostHairThread" />
    <QuestsSorted Action="PickUp" NameClass="ReturntheComb" />
    <QuestsSorted Action="Pulse" NameClass="TheNightWatch1" />
    <QuestsSorted Action="TurnIn" NameClass="ReturntheComb" />
    <QuestsSorted Action="PickUp" NameClass="DelivertheThread" />
    <QuestsSorted Action="TurnIn" NameClass="TheNightWatch1" />
    <QuestsSorted Action="PickUp" NameClass="TheNightWatch2" />
    <QuestsSorted Action="Pulse" NameClass="PathtoMiddleDuskwood2" />
    <QuestsSorted Action="TurnIn" NameClass="EightLeggedMenaces" />
    <QuestsSorted Action="Pulse" NameClass="PathMiddletoRavenHill2" />
    <QuestsSorted Action="TurnIn" NameClass="ReturntoJitters" />
    <QuestsSorted Action="Pulse" NameClass="GotoAbercrombie" />
    <QuestsSorted Action="TurnIn" NameClass="DelivertheThread" />
    <QuestsSorted Action="PickUp" NameClass="ZombieJuice" />
    <QuestsSorted Action="Pulse" NameClass="Grindto23" />
    <QuestsSorted Action="Pulse" NameClass="MovetoDarkshire3" />
    <QuestsSorted Action="TurnIn" NameClass="ZombieJuice" />
    <QuestsSorted Action="PickUp" NameClass="GatherRotBlossoms" />
    <QuestsSorted Action="Pulse" NameClass="GatherRotBlossoms" />
    <QuestsSorted Action="TurnIn" NameClass="GatherRotBlossoms" />
    <QuestsSorted Action="PickUp" NameClass="JuiceDelivery" />
    <QuestsSorted Action="Pulse" NameClass="PathtoMiddleDuskwood3" />
    <QuestsSorted Action="Pulse" NameClass="PathMiddletoRavenHill3" />
    <QuestsSorted Action="Pulse" NameClass="EightLeggedMenaces" />
    <QuestsSorted Action="Pulse" NameClass="RavenhilltoMiddle" />
    <QuestsSorted Action="TurnIn" NameClass="EightLeggedMenaces" />
    <QuestsSorted Action="Pulse" NameClass="PathMiddletoRavenHill4" />
    <QuestsSorted Action="Pulse" NameClass="GotoAbercrombie2" />
    <QuestsSorted Action="TurnIn" NameClass="JuiceDelivery" />
    <QuestsSorted Action="PickUp" NameClass="GhoulishEffigy" />
    <QuestsSorted Action="Pulse" NameClass="GotoMoonbrook" />
    <QuestsSorted Action="TurnIn" NameClass="TheLegendofStalvan2" />
    <QuestsSorted Action="PickUp" NameClass="TheLegendofStalvan3" />
    <QuestsSorted Action="Pulse" NameClass="WestfalltoDarkshire" />
    <QuestsSorted Action="TurnIn" NameClass="TheLegendofStalvan3" />
    <QuestsSorted Action="PickUp" NameClass="TheLegendofStalvan4" />
    <QuestsSorted Action="Pulse" NameClass="DarkshiretoGoldshire" />
    <QuestsSorted Action="TurnIn" NameClass="TheLegendofStalvan4" />
    <QuestsSorted Action="PickUp" NameClass="TheLegendofStalvan5" />
    <QuestsSorted Action="Pulse" NameClass="TheLegendofStalvan5" />
    <QuestsSorted Action="Pulse" NameClass="GoldshiretoCanalDistrict" />
    <QuestsSorted Action="TurnIn" NameClass="TheLegendofStalvan5" />
    <QuestsSorted Action="PickUp" NameClass="TheLegendofStalvan6" />
    <QuestsSorted Action="TurnIn" NameClass="TheLegendofStalvan6" />
    <QuestsSorted Action="PickUp" NameClass="TheLegendofStalvan7" />
    <QuestsSorted Action="Pulse" NameClass="CanalDistricttoLoggingCamp" />
    <QuestsSorted Action="TurnIn" NameClass="TheLegendofStalvan7" />
    <QuestsSorted Action="PickUp" NameClass="TheLegendofStalvan8" />
    <QuestsSorted Action="Pulse" NameClass="ROUTEWalkIntoHouseStalvan" />
    <QuestsSorted Action="Pulse" NameClass="TheLegendofStalvan8" />
    <QuestsSorted Action="TurnIn" NameClass="TheLegendofStalvan8" />
    <QuestsSorted Action="PickUp" NameClass="TheLegendofStalvan9" />
    <QuestsSorted Action="Pulse" NameClass="LoggingCamptoDarkshire" />
    <QuestsSorted Action="TurnIn" NameClass="TheLegendofStalvan9" />
    <QuestsSorted Action="PickUp" NameClass="TheLegendofStalvan10" />
    <QuestsSorted Action="TurnIn" NameClass="TheLegendofStalvan10" />
    <QuestsSorted Action="PickUp" NameClass="TheLegendofStalvan11" />
    <QuestsSorted Action="TurnIn" NameClass="TheLegendofStalvan11" />
    <QuestsSorted Action="PickUp" NameClass="TheLegendofStalvan12" />
    <QuestsSorted Action="TurnIn" NameClass="TheLegendofStalvan12" />
    <QuestsSorted Action="PickUp" NameClass="TheLegendofStalvan13" />
    <QuestsSorted Action="EndIf" NameClass="" />
    <QuestsSorted Action="RunCode" NameClass="abandonQuest.abandon(&quot;Sven&quot;);&#xD;&#xA;abandonQuest.abandon(&quot;Seasoned Wolf Kabobs&quot;);&#xD;&#xA;" />
    <QuestsSorted Action="RunCode" NameClass="throwAway.DeleteItems(&quot;Old History Book&quot;, 0);" />
    <QuestsSorted Action="RunCode" NameClass="wManager.wManagerSetting.ClearBlacklist();" />
    <QuestsSorted Action="RunCode" NameClass="FNVSettings.Initialize();&#xD;&#xA;FNVSettings.CurrentSettings.duskwoodZwei = true;&#xD;&#xA;FNVSettings.Dispose();&#xD;&#xA;&#xD;&#xA;ProgressSettings.Dispose();&#xD;&#xA;ProgressSettings.inProgress = false;&#xD;&#xA;" />
    <QuestsSorted Action="LoadProfile" NameClass="FNV_V2\#0 START_FNVLauncher_V2.xml" />
  </QuestsSorted>
  <NpcQuest>
    <NPCQuest Id="289" Name="Abercrombie" GameObject="false">
      <PickUpQuests>
        <int>133</int>
        <int>134</int>
        <int>148</int>
        <int>158</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>157</int>
        <int>133</int>
        <int>159</int>
        <int>134</int>
        <int>165</int>
      </TurnInQuests>
      <Position X="-10283" Y="74.4014" Z="38.84826" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="900" Name="Bailiff Conacher" GameObject="false">
      <PickUpQuests>
        <int>91</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>91</int>
      </TurnInQuests>
      <Position X="-9215.92" Y="-2215.91" Z="66.1805" />
    </NPCQuest>
    <NPCQuest Id="302" Name="Blind Mary" GameObject="false">
      <PickUpQuests>
        <int>154</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>149</int>
      </TurnInQuests>
      <Position X="-10780.2" Y="-1380.28" Z="39.7193" />
    </NPCQuest>
    <NPCQuest Id="297" Name="Caretaker Folsom" GameObject="false">
      <PickUpQuests>
        <int>72</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>70</int>
      </TurnInQuests>
      <Position X="-8834" Y="983.482" Z="98.45117" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="272" Name="Chef Grual" GameObject="false">
      <PickUpQuests>
        <int>93</int>
        <int>240</int>
        <int>90</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>93</int>
        <int>5</int>
        <int>90</int>
      </TurnInQuests>
      <Position X="-10498.8" Y="-1161.6" Z="28.0865" />
    </NPCQuest>
    <NPCQuest Id="267" Name="Clerk Daltry" GameObject="false">
      <PickUpQuests>
        <int>67</int>
        <int>69</int>
        <int>97</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>66</int>
        <int>68</int>
        <int>80</int>
      </TurnInQuests>
      <Position X="-10560" Y="-1124.98" Z="30.06853" />
    </NPCQuest>
    <NPCQuest Id="264" Name="Commander Althea Ebonlocke" GameObject="false">
      <PickUpQuests>
        <int>80</int>
        <int>98</int>
        <int>56</int>
        <int>57</int>
        <int>58</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>79</int>
        <int>97</int>
        <int>56</int>
        <int>57</int>
        <int>58</int>
      </TurnInQuests>
      <Position X="-10560.8" Y="-1153.7" Z="27.9878" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="379" Name="Darcy" GameObject="false">
      <PickUpQuests>
        <int>129</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>131</int>
      </TurnInQuests>
      <Position X="-9217.04" Y="-2151.47" Z="64.3539" />
    </NPCQuest>
    <NPCQuest Id="1070" Name="Deputy Feldon" GameObject="false">
      <PickUpQuests>
        <int>246</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>246</int>
        <int>244</int>
      </TurnInQuests>
      <Position X="-9443.69" Y="-2238" Z="70.60847" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="381" Name="Dockmaster Baren" GameObject="false">
      <PickUpQuests>
        <int>127</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>127</int>
      </TurnInQuests>
      <Position X="-9261.03" Y="-2172.66" Z="64.05804" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="633" Name="Elaine Carevin" GameObject="false">
      <PickUpQuests>
        <int>164</int>
        <int>163</int>
        <int>165</int>
      </PickUpQuests>
      <TurnInQuests />
      <Position X="-10593.1" Y="-1200.6" Z="28.4989" />
    </NPCQuest>
    <NPCQuest Id="341" Name="Foreman Oslow" GameObject="false">
      <PickUpQuests>
        <int>89</int>
        <int>125</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>89</int>
        <int>125</int>
      </TurnInQuests>
      <Position X="-9279.22" Y="-2268.53" Z="67.44758" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="464" Name="Guard Parker" GameObject="false">
      <PickUpQuests>
        <int>244</int>
        <int>130</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>129</int>
      </TurnInQuests>
      <Position X="-9609.64" Y="-1902.4" Z="59.82196" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="8962" Name="Hilary" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>3741</int>
      </TurnInQuests>
      <Position X="-9351.52" Y="-2205.56" Z="61.89872" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="295" Name="Innkeeper Farley" GameObject="false">
      <PickUpQuests>
        <int>70</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>69</int>
      </TurnInQuests>
      <Position X="-9462.66" Y="16.1915" Z="56.96339" />
    </NPCQuest>
    <NPCQuest Id="288" Name="Jitters" GameObject="false">
      <PickUpQuests>
        <int>5</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>163</int>
        <int>240</int>
      </TurnInQuests>
      <Position X="-10731.01" Y="337.3603" Z="38.45006" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="893" Name="Lars" GameObject="false">
      <PickUpQuests>
        <int>226</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>226</int>
      </TurnInQuests>
      <Position X="-10314.2" Y="625.039" Z="26.53125" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="265" Name="Madame Eva" GameObject="false">
      <PickUpQuests>
        <int>157</int>
        <int>149</int>
        <int>66</int>
        <int>101</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>154</int>
        <int>148</int>
        <int>98</int>
        <int>101</int>
      </TurnInQuests>
      <Position X="-10532" Y="-1213.64" Z="28.1175" />
    </NPCQuest>
    <NPCQuest Id="294" Name="Marshal Haggard" GameObject="false">
      <PickUpQuests>
        <int>75</int>
        <int>78</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>74</int>
        <int>75</int>
      </TurnInQuests>
      <Position X="-9545.33" Y="-1401.1" Z="53.96438" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="382" Name="Marshal Marris" GameObject="false">
      <PickUpQuests>
        <int>20</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>20</int>
      </TurnInQuests>
      <Position X="-9284.03" Y="-2298.16" Z="67.49415" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="342" Name="Martie Jainrose" GameObject="false">
      <PickUpQuests>
        <int>34</int>
        <int>131</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>34</int>
        <int>130</int>
      </TurnInQuests>
      <Position X="-9245.81" Y="-2045.33" Z="77.00317" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="3643" Name="Old Footlocker" GameObject="true">
      <PickUpQuests>
        <int>68</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>67</int>
      </TurnInQuests>
      <Position X="-10957" Y="1563" Z="46" />
    </NPCQuest>
    <NPCQuest Id="1561" Name="Sealed Crate" GameObject="true">
      <PickUpQuests>
        <int>74</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>72</int>
      </TurnInQuests>
      <Position X="-8830" Y="985" Z="100" />
    </NPCQuest>
    <NPCQuest Id="8965" Name="Shawn" GameObject="false">
      <PickUpQuests>
        <int>3741</int>
      </PickUpQuests>
      <TurnInQuests />
      <Position X="-9351.62" Y="-2207.26" Z="61.90022" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="514" Name="Smith Argus" GameObject="false">
      <PickUpQuests>
        <int>119</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>118</int>
      </TurnInQuests>
      <Position X="-9456.65" Y="87.8553" Z="58.34466" />
    </NPCQuest>
    <NPCQuest Id="311" Name="Sven Yorgen" GameObject="false">
      <PickUpQuests />
      <TurnInQuests>
        <int>164</int>
      </TurnInQuests>
      <Position X="-10329.9" Y="623.241" Z="26.83287" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="273" Name="Tavernkeep Smitts" GameObject="false">
      <PickUpQuests>
        <int>156</int>
        <int>159</int>
        <int>79</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>156</int>
        <int>78</int>
        <int>158</int>
      </TurnInQuests>
      <Position X="-10517.4" Y="-1158.66" Z="28.0995" />
    </NPCQuest>
    <NPCQuest Id="415" Name="Verner Osgood" GameObject="false">
      <PickUpQuests>
        <int>124</int>
        <int>118</int>
        <int>122</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>124</int>
        <int>119</int>
        <int>122</int>
      </TurnInQuests>
      <Position X="-9259.44" Y="-2243.22" Z="63.93352" Type="Flying" />
    </NPCQuest>
    <NPCQuest Id="888" Name="Watcher Dodds" GameObject="false">
      <PickUpQuests>
        <int>245</int>
      </PickUpQuests>
      <TurnInQuests>
        <int>245</int>
      </TurnInQuests>
      <Position X="-10923.2" Y="-384.928" Z="39.25206" Type="Flying" />
    </NPCQuest>
  </NpcQuest>
  <Npc>
    <Npc>
      <Position X="-9247.73" Y="-2234.38" Z="63.93364" Type="Flying" />
      <Entry>793</Entry>
      <Name>Kara Adams</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-9210.83" Y="-2150.71" Z="64.35443" />
      <Entry>5620</Entry>
      <Name>Bartender Wental</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-10595.1" Y="-1162.55" Z="30.04398" />
      <Entry>226</Entry>
      <Name>Morg Gnarltree</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-10516" Y="-1161.21" Z="28.10015" />
      <Entry>6790</Entry>
      <Name>Innkeeper Trelayne</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-5377.91" Y="-2973.91" Z="323.169" />
      <Entry>6734</Entry>
      <Name>Innkeeper Hearthstove</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-5343.68" Y="-2932.13" Z="324.3607" Type="Flying" />
      <Entry>167</Entry>
      <Name>Morhan Coppertongue</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-5645.74" Y="-4283.84" Z="407.812" Type="Flying" />
      <Entry>1687</Entry>
      <Name>Cliff Hadin</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8901.59" Y="-112.716" Z="81.84941" Type="Flying" />
      <Entry>152</Entry>
      <Name>Brother Danil</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8898.23" Y="-119.838" Z="81.83307" Type="Flying" />
      <Entry>1213</Entry>
      <Name>Godric Rothgar</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-9462.66" Y="16.1915" Z="56.96339" />
      <Entry>295</Entry>
      <Name>Innkeeper Farley</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-9457.64" Y="99.6884" Z="58.34447" />
      <Entry>74</Entry>
      <Name>Kurran Steele</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-9469.28" Y="-1355.24" Z="47.20439" Type="Flying" />
      <Entry>1198</Entry>
      <Name>Rallic Finn</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8867.79" Y="673.673" Z="97.90368" />
      <Entry>6740</Entry>
      <Name>Innkeeper Allison</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8790.42" Y="607.348" Z="96.77347" />
      <Entry>1289</Entry>
      <Name>Gunther Weller</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-10653.4" Y="1166.52" Z="34.4647" Type="Flying" />
      <Entry>8931</Entry>
      <Name>Innkeeper Heather</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Vendor</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-10658.5" Y="996.851" Z="32.87489" Type="Flying" />
      <Entry>1668</Entry>
      <Name>William MacGregor</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>Repair</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8926.74" Y="-195.589" Z="80.58955" Type="Flying" />
      <Entry>459</Entry>
      <Name>Drusilla La Salle</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>WarlockTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8918.36" Y="-208.411" Z="82.12579" />
      <Entry>911</Entry>
      <Name>Llane Beshere</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>WarriorTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8914.57" Y="-215.016" Z="82.11662" />
      <Entry>925</Entry>
      <Name>Brother Sammuel</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>PaladinTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8851.57" Y="-188.234" Z="89.31541" />
      <Entry>198</Entry>
      <Name>Khelden Bremen</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>MageTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8853.59" Y="-193.336" Z="81.93233" />
      <Entry>375</Entry>
      <Name>Priestess Anetta</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>PriestTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8863.47" Y="-210.905" Z="80.57185" Type="Flying" />
      <Entry>915</Entry>
      <Name>Jorik Kerridan</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>RogueTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-9468.14" Y="108.976" Z="57.4777" Type="Flying" />
      <Entry>927</Entry>
      <Name>Brother Wilhelm</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>PaladinTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-9461.85" Y="109.353" Z="57.69536" Type="Flying" />
      <Entry>913</Entry>
      <Name>Lyria Du Lac</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>WarriorTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-9472.8" Y="-5.32661" Z="49.7947" />
      <Entry>906</Entry>
      <Name>Maximillian Crowe</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>WarlockTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-9471.67" Y="34.451" Z="63.82062" />
      <Entry>328</Entry>
      <Name>Zaldimar Wefhellt</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>MageTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-9460.75" Y="33.1338" Z="63.82071" />
      <Entry>377</Entry>
      <Name>Priestess Josetta</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>PriestTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-9465.79" Y="12.6454" Z="63.82137" />
      <Entry>917</Entry>
      <Name>Keryn Sylvius</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>RogueTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8752.3" Y="377.572" Z="101.0563" Type="Flying" />
      <Entry>918</Entry>
      <Name>Osborne the Night Man</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>RogueTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8689.32" Y="323.237" Z="109.4382" />
      <Entry>5479</Entry>
      <Name>Wu Shen</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>WarriorTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8415" Y="553.182" Z="95.62836" />
      <Entry>5515</Entry>
      <Name>Einris Brightspear</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>HunterTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8577" Y="881.698" Z="106.519" />
      <Entry>928</Entry>
      <Name>Lord Grayson Shadowbreaker</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>PaladinTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8512" Y="862.364" Z="109.8441" />
      <Entry>376</Entry>
      <Name>High Priestess Laurena</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>PriestTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-8742" Y="1095.41" Z="93.711" Type="Flying" />
      <Entry>5505</Entry>
      <Name>Theridran</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>DruidTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-9652.26" Y="654.731" Z="38.65356" />
      <Entry>1645</Entry>
      <Name>Quartermaster Hicks</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>DruidTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
    <Npc>
      <Position X="-4599.08" Y="-1111.67" Z="504.9385" />
      <Entry>5172</Entry>
      <Name>Briarthorn</Name>
      <GossipOption>-1</GossipOption>
      <Active>true</Active>
      <Faction>Neutral</Faction>
      <Type>WarlockTrainer</Type>
      <VendorItemClass>Food</VendorItemClass>
      <ContinentId>Azeroth</ContinentId>
    </Npc>
  </Npc>
  <EasyQuests>
    <EasyQuest>
      <Name>A Baying of Gnolls</Name>
      <QuestId>
        <int>124</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-9126.305" Y="-2210.08" Z="122.6911" />
          <Vector3 X="-9115.437" Y="-2158.025" Z="126.3006" />
          <Vector3 X="-9113.849" Y="-2100.588" Z="124.6416" />
          <Vector3 X="-9117.165" Y="-2095.061" Z="124.1487" />
          <Vector3 X="-9129.265" Y="-2051.822" Z="128.6442" />
          <Vector3 X="-9006.562" Y="-2089.766" Z="132.4432" />
          <Vector3 X="-9030.87" Y="-2190.52" Z="131.6758" />
          <Vector3 X="-9115.792" Y="-2352.447" Z="121.6608" />
          <Vector3 X="-9077.433" Y="-2410.49" Z="125.1488" />
          <Vector3 X="-9036.608" Y="-2456.875" Z="134.257" />
        </HotSpots>
        <EntryTarget>
          <int>426</int>
          <int>430</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>A Free Lunch</Name>
      <QuestId>
        <int>129</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>An Unwelcome Guest</Name>
      <QuestId>
        <int>34</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-9288.95" Y="-1911.28" Z="74.80354" />
        </HotSpots>
        <EntryTarget>
          <int>345</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Assessing the Threat</Name>
      <QuestId>
        <int>246</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-9744.57" Y="-2232.261" Z="59.60643" />
        </HotSpots>
        <EntryTarget>
          <int>424</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Assessing the Threat2</Name>
      <QuestId>
        <int>246</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-9537.743" Y="-1947.905" Z="72.8409" />
        </HotSpots>
        <EntryTarget>
          <int>423</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Blackrock Menace</Name>
      <QuestId>
        <int>20</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-9686.17" Y="-3088.98" Z="53.7543" />
          <Vector3 X="-9658.418" Y="-3126.181" Z="50.49715" />
          <Vector3 X="-9650.793" Y="-3236.186" Z="48.48072" />
          <Vector3 X="-9625.69" Y="-3206.58" Z="49.17078" />
          <Vector3 X="-9709.6" Y="-3067.4" Z="58.39597" />
          <Vector3 X="-9713.84" Y="-3106.15" Z="58.67305" />
          <Vector3 X="-9734.4" Y="-3142.29" Z="58.84843" />
          <Vector3 X="-9757.48" Y="-3140.41" Z="58.8279" />
        </HotSpots>
        <EntryTarget>
          <int>485</int>
          <int>440</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Canal District to Logging Camp</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-8835.252" Y="982.743" Z="98.32926" />
          <Vector3 X="-8829.757" Y="975.3669" Z="98.5574" />
          <Vector3 X="-8823.476" Y="966.953" Z="99.44735" />
          <Vector3 X="-8817.194" Y="958.5391" Z="100.3699" />
          <Vector3 X="-8814.255" Y="954.6014" Z="100.788" />
          <Vector3 X="-8822.718" Y="947.6552" Z="102.2764" />
          <Vector3 X="-8836.953" Y="937.4873" Z="105.3877" />
          <Vector3 X="-8848.047" Y="928.8356" Z="102.5358" />
          <Vector3 X="-8844.441" Y="918.0034" Z="100.5593" />
          <Vector3 X="-8836.197" Y="902.5692" Z="97.7267" />
          <Vector3 X="-8829.562" Y="886.4012" Z="98.34909" />
          <Vector3 X="-8825.947" Y="869.2985" Z="98.75506" />
          <Vector3 X="-8823.271" Y="852.0042" Z="99.15863" />
          <Vector3 X="-8823.18" Y="833.7224" Z="98.89217" />
          <Vector3 X="-8825.003" Y="807.5923" Z="98.25484" />
          <Vector3 X="-8838.878" Y="786.0231" Z="95.84502" />
          <Vector3 X="-8860.379" Y="771.0454" Z="96.64986" />
          <Vector3 X="-8868.378" Y="764.1616" Z="96.84566" />
          <Vector3 X="-8856.898" Y="741.7403" Z="100.6415" />
          <Vector3 X="-8844.171" Y="719.749" Z="97.40917" />
          <Vector3 X="-8832.239" Y="695.4459" Z="97.4863" />
          <Vector3 X="-8826.799" Y="679.1396" Z="97.3951" />
          <Vector3 X="-8837.673" Y="670.3772" Z="98.15314" />
          <Vector3 X="-8847.833" Y="662.0726" Z="97.4264" />
          <Vector3 X="-8845.541" Y="653.3387" Z="96.95723" />
          <Vector3 X="-8838.792" Y="628.019" Z="94.05914" />
          <Vector3 X="-8843.82" Y="612.6784" Z="92.74333" />
          <Vector3 X="-8863.639" Y="595.4654" Z="92.17683" />
          <Vector3 X="-8883.433" Y="578.2242" Z="92.99551" />
          <Vector3 X="-8902.569" Y="561.5077" Z="93.06471" />
          <Vector3 X="-8925.475" Y="547.6958" Z="94.2422" />
          <Vector3 X="-8947.632" Y="560.0378" Z="93.82995" />
          <Vector3 X="-8970.117" Y="552.997" Z="93.85136" />
          <Vector3 X="-8966.368" Y="542.1344" Z="94.43652" />
          <Vector3 X="-8961.428" Y="527.3525" Z="96.35818" />
          <Vector3 X="-8971.696" Y="506.9872" Z="96.35582" />
          <Vector3 X="-8992.225" Y="491.9245" Z="96.5755" />
          <Vector3 X="-9016.918" Y="473.81" Z="95.91209" />
          <Vector3 X="-9044.304" Y="452.0259" Z="93.05676" />
          <Vector3 X="-9071.494" Y="429.9876" Z="93.05676" />
          <Vector3 X="-9097.814" Y="408.6545" Z="92.45249" />
          <Vector3 X="-9125.921" Y="385.9694" Z="91.09921" />
          <Vector3 X="-9137.869" Y="376.4837" Z="90.58746" />
          <Vector3 X="-9158" Y="356.6376" Z="88.89754" />
          <Vector3 X="-9175.408" Y="325.0161" Z="81.34437" />
          <Vector3 X="-9179.687" Y="291.5608" Z="77.10734" />
          <Vector3 X="-9184.095" Y="255.7608" Z="73.71326" />
          <Vector3 X="-9199.021" Y="224.39" Z="71.5009" />
          <Vector3 X="-9220.121" Y="197.895" Z="68.71468" />
          <Vector3 X="-9244.555" Y="171.3667" Z="67.89005" />
          <Vector3 X="-9273.209" Y="153.5676" Z="67.00942" />
          <Vector3 X="-9307.002" Y="140.8285" Z="65.57658" />
          <Vector3 X="-9337.363" Y="123.4601" Z="63.47781" />
          <Vector3 X="-9369.106" Y="108.8128" Z="60.83598" />
          <Vector3 X="-9401.66" Y="96.00978" Z="58.45028" />
          <Vector3 X="-9431.123" Y="77.14845" Z="56.24784" />
          <Vector3 X="-9462.819" Y="66.53825" Z="56.03678" />
          <Vector3 X="-9495.55" Y="56.091" Z="55.89627" />
          <Vector3 X="-9512.154" Y="24.26245" Z="56.57076" />
          <Vector3 X="-9527.165" Y="-7.337925" Z="55.90559" />
          <Vector3 X="-9540.38" Y="-39.62714" Z="56.48942" />
          <Vector3 X="-9546.433" Y="-72.95883" Z="57.42352" />
          <Vector3 X="-9550.821" Y="-108.7304" Z="57.47251" />
          <Vector3 X="-9561.54" Y="-141.8928" Z="57.51819" />
          <Vector3 X="-9576.854" Y="-172.1133" Z="57.46141" />
          <Vector3 X="-9591.35" Y="-205.194" Z="57.78905" />
          <Vector3 X="-9601.588" Y="-237.478" Z="57.49864" />
          <Vector3 X="-9610.826" Y="-272.3929" Z="57.36903" />
          <Vector3 X="-9618.023" Y="-305.4977" Z="57.42452" />
          <Vector3 X="-9621.237" Y="-341.3618" Z="57.43372" />
          <Vector3 X="-9621.303" Y="-375.1603" Z="57.61568" />
          <Vector3 X="-9613.745" Y="-410.4198" Z="57.4263" />
          <Vector3 X="-9600.677" Y="-442.8574" Z="57.73463" />
          <Vector3 X="-9591.021" Y="-476.3311" Z="57.7102" />
          <Vector3 X="-9599.013" Y="-509.8813" Z="57.44853" />
          <Vector3 X="-9612.95" Y="-540.7251" Z="54.45653" />
          <Vector3 X="-9620.544" Y="-576.0266" Z="54.17123" />
          <Vector3 X="-9622.895" Y="-591.1039" Z="53.73616" />
          <Vector3 X="-9625.334" Y="-607.3719" Z="52.55944" />
          <Vector3 X="-9630.936" Y="-640.7682" Z="50.78419" />
          <Vector3 X="-9642.508" Y="-673.7878" Z="48.87202" />
          <Vector3 X="-9650.736" Y="-708.9174" Z="45.2262" />
          <Vector3 X="-9654.193" Y="-742.6008" Z="44.53818" />
          <Vector3 X="-9651.25" Y="-777.4349" Z="44.23811" />
          <Vector3 X="-9637.699" Y="-810.6785" Z="43.71791" />
          <Vector3 X="-9614.206" Y="-836.5724" Z="43.66057" />
          <Vector3 X="-9591.359" Y="-862.9902" Z="43.67641" />
          <Vector3 X="-9583.768" Y="-896.4747" Z="43.64081" />
          <Vector3 X="-9590.922" Y="-930.5302" Z="43.65016" />
          <Vector3 X="-9608.453" Y="-959.4423" Z="43.64634" />
          <Vector3 X="-9621.71" Y="-992.4674" Z="42.58434" />
          <Vector3 X="-9620.601" Y="-1027.409" Z="39.96262" />
          <Vector3 X="-9616.37" Y="-1061.022" Z="39.66673" />
          <Vector3 X="-9614.311" Y="-1097.002" Z="40.20099" />
          <Vector3 X="-9614.443" Y="-1115.552" Z="41.76636" />
          <Vector3 X="-9618.793" Y="-1132.503" Z="42.72771" />
          <Vector3 X="-9627.504" Y="-1166.401" Z="41.45398" />
          <Vector3 X="-9635.277" Y="-1199.358" Z="36.96067" />
          <Vector3 X="-9635.426" Y="-1235.405" Z="39.50048" />
          <Vector3 X="-9628.211" Y="-1269.587" Z="45.56593" />
          <Vector3 X="-9617.075" Y="-1292.06" Z="50.79611" />
          <Vector3 X="-9613.269" Y="-1298.754" Z="51.50748" />
          <Vector3 X="-9596.665" Y="-1329.561" Z="49.95403" />
          <Vector3 X="-9581.063" Y="-1360.89" Z="52.91256" />
          <Vector3 X="-9566.018" Y="-1391.245" Z="55.59336" />
          <Vector3 X="-9563.537" Y="-1396.109" Z="55.62016" />
          <Vector3 X="-9554.148" Y="-1398.918" Z="53.77139" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(74)  || new Vector3(-9554.148f, -1398.918f, 53.77139f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Darkshire to Goldshire</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10558.07" Y="-1147.776" Z="28.03418" />
          <Vector3 X="-10580.57" Y="-1178.226" Z="28.52999" />
          <Vector3 X="-10584.9" Y="-1178.477" Z="28.3721" />
          <Vector3 X="-10619.28" Y="-1184.613" Z="28.62604" />
          <Vector3 X="-10653.64" Y="-1191.095" Z="28.44582" />
          <Vector3 X="-10686.69" Y="-1184.831" Z="26.93894" />
          <Vector3 X="-10718.91" Y="-1168.657" Z="26.3466" />
          <Vector3 X="-10748.3" Y="-1150" Z="26.7747" />
          <Vector3 X="-10769.54" Y="-1123.134" Z="28.51593" />
          <Vector3 X="-10781.85" Y="-1090.37" Z="34.37864" />
          <Vector3 X="-10794.67" Y="-1057.822" Z="41.66565" />
          <Vector3 X="-10805.18" Y="-1025.647" Z="47.95447" />
          <Vector3 X="-10807.47" Y="-989.676" Z="54.27757" />
          <Vector3 X="-10802.61" Y="-955.2484" Z="56.47029" />
          <Vector3 X="-10797.13" Y="-921.856" Z="55.77327" />
          <Vector3 X="-10804.26" Y="-886.7011" Z="55.76951" />
          <Vector3 X="-10817.91" Y="-854.5015" Z="55.71788" />
          <Vector3 X="-10831.4" Y="-822.2234" Z="55.97335" />
          <Vector3 X="-10849.87" Y="-792.5433" Z="56.17505" />
          <Vector3 X="-10873.21" Y="-766.5394" Z="55.45768" />
          <Vector3 X="-10896.48" Y="-741.8427" Z="55.45205" />
          <Vector3 X="-10916.36" Y="-713.1068" Z="55.56452" />
          <Vector3 X="-10933.8" Y="-681.6168" Z="55.45331" />
          <Vector3 X="-10951.85" Y="-651.6322" Z="55.55938" />
          <Vector3 X="-10957.05" Y="-619.149" Z="55.02591" />
          <Vector3 X="-10941.6" Y="-588.1803" Z="54.26046" />
          <Vector3 X="-10923.37" Y="-557.1992" Z="53.90972" />
          <Vector3 X="-10913.71" Y="-523.6735" Z="53.79317" />
          <Vector3 X="-10911.11" Y="-488.7935" Z="49.84181" />
          <Vector3 X="-10909.11" Y="-454.9068" Z="45.36432" />
          <Vector3 X="-10906.63" Y="-419.9957" Z="42.13813" />
          <Vector3 X="-10900.86" Y="-384.4345" Z="40.4738" />
          <Vector3 X="-10890.21" Y="-352.2261" Z="38.96143" />
          <Vector3 X="-10877.05" Y="-318.6656" Z="37.85347" />
          <Vector3 X="-10864.99" Y="-285.8779" Z="38.16779" />
          <Vector3 X="-10854.75" Y="-251.2584" Z="38.30463" />
          <Vector3 X="-10848.13" Y="-216.8948" Z="37.87692" />
          <Vector3 X="-10840.61" Y="-182.7154" Z="34.03587" />
          <Vector3 X="-10830.65" Y="-149.1702" Z="31.79292" />
          <Vector3 X="-10818.84" Y="-115.1129" Z="29.7611" />
          <Vector3 X="-10806.88" Y="-82.29384" Z="29.36542" />
          <Vector3 X="-10795.5" Y="-49.21896" Z="29.43763" />
          <Vector3 X="-10785.28" Y="-15.75176" Z="29.77232" />
          <Vector3 X="-10774.47" Y="17.52911" Z="29.38613" />
          <Vector3 X="-10763" Y="50.59591" Z="28.2517" />
          <Vector3 X="-10753.69" Y="84.29394" Z="28.31363" />
          <Vector3 X="-10751.82" Y="118.0007" Z="28.64632" />
          <Vector3 X="-10763.92" Y="151.8006" Z="29.82679" />
          <Vector3 X="-10777.88" Y="183.8942" Z="29.99807" />
          <Vector3 X="-10789.25" Y="216.9571" Z="30.49028" />
          <Vector3 X="-10798.08" Y="250.8243" Z="30.4935" />
          <Vector3 X="-10799.18" Y="255.094" Z="30.4817" />
          <Vector3 X="-10805.7" Y="287.1457" Z="30.84036" />
          <Vector3 X="-10810.25" Y="321.8489" Z="30.633" />
          <Vector3 X="-10814.79" Y="356.5522" Z="29.8809" />
          <Vector3 X="-10818.21" Y="391.3803" Z="29.51378" />
          <Vector3 X="-10821.08" Y="426.2624" Z="29.36551" />
          <Vector3 X="-10822.65" Y="461.1888" Z="29.44522" />
          <Vector3 X="-10817.88" Y="495.7995" Z="32.24022" />
          <Vector3 X="-10808.04" Y="521.1617" Z="35.91885" />
          <Vector3 X="-10783.36" Y="526.2039" Z="34.36866" />
          <Vector3 X="-10748.49" Y="529.0013" Z="35.18184" />
          <Vector3 X="-10712.58" Y="531.4288" Z="34.0579" />
          <Vector3 X="-10678.77" Y="533.7137" Z="30.92147" />
          <Vector3 X="-10642.81" Y="536.2767" Z="27.61724" />
          <Vector3 X="-10609.17" Y="539.847" Z="28.26813" />
          <Vector3 X="-10574.32" Y="543.0319" Z="33.34715" />
          <Vector3 X="-10539.51" Y="546.5683" Z="28.1632" />
          <Vector3 X="-10505.16" Y="553.1639" Z="24.49635" />
          <Vector3 X="-10470.46" Y="562.4818" Z="24.9916" />
          <Vector3 X="-10439.1" Y="575.2961" Z="27.19748" />
          <Vector3 X="-10406.25" Y="590.0165" Z="29.41771" />
          <Vector3 X="-10378.62" Y="603.244" Z="31.58623" />
          <Vector3 X="-10362.2" Y="609.2726" Z="33.69193" />
          <Vector3 X="-10351.41" Y="611.2936" Z="33.44622" />
          <Vector3 X="-10349.44" Y="619.8191" Z="33.47389" />
          <Vector3 X="-10341.66" Y="636.4335" Z="27.55233" />
          <Vector3 X="-10307.17" Y="645.7291" Z="24.85482" />
          <Vector3 X="-10292.96" Y="644.9523" Z="28.35495" />
          <Vector3 X="-10264.02" Y="639.0485" Z="25.95445" />
          <Vector3 X="-10254.23" Y="638.6663" Z="25.17538" />
          <Vector3 X="-10220.28" Y="638.1525" Z="25.42451" />
          <Vector3 X="-10184.24" Y="637.6205" Z="22.61188" />
          <Vector3 X="-10181.61" Y="634.5362" Z="22.5701" />
          <Vector3 X="-10170.26" Y="604.9321" Z="26.14679" />
          <Vector3 X="-10152.45" Y="571.0735" Z="24.53558" />
          <Vector3 X="-10124.61" Y="550.459" Z="27.62259" />
          <Vector3 X="-10096.74" Y="530.0298" Z="23.99509" />
          <Vector3 X="-10070.02" Y="507.4216" Z="23.65008" />
          <Vector3 X="-10043.97" Y="485.6566" Z="24.63988" />
          <Vector3 X="-10015.85" Y="463.116" Z="30.14951" />
          <Vector3 X="-9986.463" Y="444.2671" Z="36.10606" />
          <Vector3 X="-9968.635" Y="433.6467" Z="35.5537" />
          <Vector3 X="-9939.002" Y="417.1783" Z="34.82634" />
          <Vector3 X="-9904.137" Y="408.472" Z="35.37566" />
          <Vector3 X="-9870.785" Y="417.9455" Z="34.71198" />
          <Vector3 X="-9837.221" Y="415.7769" Z="36.60574" />
          <Vector3 X="-9803.059" Y="408.2343" Z="38.17788" />
          <Vector3 X="-9770.479" Y="399.0154" Z="40.43517" />
          <Vector3 X="-9759.176" Y="394.8681" Z="40.19662" />
          <Vector3 X="-9738.989" Y="369.1524" Z="41.65795" />
          <Vector3 X="-9722.422" Y="337.1385" Z="43.78843" />
          <Vector3 X="-9704.753" Y="306.9762" Z="45.47097" />
          <Vector3 X="-9681.965" Y="280.524" Z="46.61212" />
          <Vector3 X="-9654.458" Y="260.9358" Z="46.45959" />
          <Vector3 X="-9619.625" Y="252.4904" Z="46.98044" />
          <Vector3 X="-9584.653" Y="251.0681" Z="48.31663" />
          <Vector3 X="-9549.993" Y="246.8711" Z="50.1002" />
          <Vector3 X="-9519.15" Y="231.0043" Z="51.81729" />
          <Vector3 X="-9498.071" Y="203.4114" Z="54.04818" />
          <Vector3 X="-9485.004" Y="172.3056" Z="55.79726" />
          <Vector3 X="-9483.533" Y="136.4514" Z="56.72097" />
          <Vector3 X="-9485.539" Y="102.5608" Z="56.4294" />
          <Vector3 X="-9475.469" Y="68.97735" Z="56.38769" />
          <Vector3 X="-9465.661" Y="54.48455" Z="56.71863" />
          <Vector3 X="-9461.963" Y="48.79127" Z="56.55979" />
          <Vector3 X="-9459.917" Y="41.9425" Z="56.95" />
          <Vector3 X="-9460.644" Y="37.4552" Z="56.95" />
          <Vector3 X="-9465.11" Y="36.3976" Z="56.96284" />
          <Vector3 X="-9467.666" Y="32.16935" Z="56.96469" />
          <Vector3 X="-9468.387" Y="25.20654" Z="56.33974" />
          <Vector3 X="-9468.229" Y="18.26143" Z="56.96292" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(69)  || new Vector3(-9468.229f, 18.26143f, 56.96292f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Deliver the Thread</Name>
      <QuestId>
        <int>157</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Deliveries to Sven</Name>
      <QuestId>
        <int>164</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Delivering Daffodils</Name>
      <QuestId>
        <int>131</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Dusky Crab Cakes</Name>
      <QuestId>
        <int>93</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-10111.44" Y="-785.2385" Z="36.10927" />
          <Vector3 X="-10134.81" Y="-838.9855" Z="36.64241" />
          <Vector3 X="-10053.8" Y="-785.2324" Z="35.80004" />
          <Vector3 X="-10056.85" Y="-717.6492" Z="36.01926" />
          <Vector3 X="-10093.56" Y="-733.1447" Z="35.48482" />
          <Vector3 X="-10083.2" Y="-677.2789" Z="38.78788" />
          <Vector3 X="-10112.16" Y="-649.2022" Z="48.33765" />
          <Vector3 X="-10074.53" Y="-625.8934" Z="48.26697" />
          <Vector3 X="-10010.35" Y="-635.0459" Z="38.65133" />
          <Vector3 X="-9976.646" Y="-685.7909" Z="32.37443" />
          <Vector3 X="-9955.01" Y="-625.2526" Z="31.63649" />
          <Vector3 X="-10021.94" Y="-576.826" Z="43.43585" />
          <Vector3 X="-10046.3" Y="-512.5711" Z="47.14765" />
        </HotSpots>
        <EntryTarget>
          <int>569</int>
          <int>217</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Eight-Legged Menaces</Name>
      <QuestId>
        <int>245</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-10840.46" Y="514.0189" Z="30.17492" />
          <Vector3 X="-10776.21" Y="548.8839" Z="33.13718" />
          <Vector3 X="-10782.2" Y="513.1003" Z="35.36126" />
          <Vector3 X="-10709.69" Y="545.4267" Z="34.10557" />
          <Vector3 X="-10684.09" Y="580.2807" Z="26.21565" />
          <Vector3 X="-10610" Y="575.5202" Z="29.88885" />
          <Vector3 X="-10549.74" Y="593.7366" Z="30.45439" />
          <Vector3 X="-10524.18" Y="617.0723" Z="25.18923" />
          <Vector3 X="-10487.42" Y="578.7422" Z="28.14131" />
          <Vector3 X="-10451.18" Y="620.9947" Z="24.12095" />
          <Vector3 X="-10400.09" Y="548.2822" Z="31.59646" />
        </HotSpots>
        <EntryTarget>
          <int>539</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Encroaching Gnolls</Name>
      <QuestId>
        <int>244</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Gather Rot Blossoms</Name>
      <QuestId>
        <int>156</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-10783.75" Y="-1313.536" Z="36.04205" />
          <Vector3 X="-10786.14" Y="-1343.917" Z="38.27391" />
          <Vector3 X="-10741.5" Y="-1386.832" Z="36.74717" />
          <Vector3 X="-10830.65" Y="-1318.195" Z="49.94309" />
          <Vector3 X="-10856.59" Y="-1153.104" Z="35.25944" />
        </HotSpots>
        <EntryTarget>
          <int>202</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ghost Hair Thread</Name>
      <QuestId>
        <int>149</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ghoulish Effigy</Name>
      <QuestId>
        <int>133</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-10359.49" Y="147.6417" Z="35.06637" />
          <Vector3 X="-10403.7" Y="155.6206" Z="35.25457" />
          <Vector3 X="-10420" Y="188.0342" Z="36.26899" />
          <Vector3 X="-10421.67" Y="218.0109" Z="34.00616" />
          <Vector3 X="-10392.16" Y="250.2377" Z="33.15616" />
          <Vector3 X="-10369.3" Y="255.3214" Z="36.29099" />
        </HotSpots>
        <EntryTarget>
          <int>3</int>
          <int>210</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Go to Abercrombie</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10746.3" Y="314.8515" Z="39.35541" />
          <Vector3 X="-10742.53" Y="298.9495" Z="40.1562" />
          <Vector3 X="-10742.06" Y="280.9572" Z="40.66894" />
          <Vector3 X="-10737.9" Y="264.3712" Z="42.3113" />
          <Vector3 X="-10725.63" Y="252.105" Z="42.93427" />
          <Vector3 X="-10714.79" Y="246.9983" Z="42.84994" />
          <Vector3 X="-10698.08" Y="241.8399" Z="41.75784" />
          <Vector3 X="-10681.93" Y="235.1158" Z="42.67361" />
          <Vector3 X="-10666.23" Y="227.459" Z="42.88448" />
          <Vector3 X="-10652" Y="217.3135" Z="40.97135" />
          <Vector3 X="-10640.7" Y="203.9765" Z="40.54121" />
          <Vector3 X="-10630.52" Y="190.3943" Z="35.44017" />
          <Vector3 X="-10619.45" Y="176.1717" Z="32.73803" />
          <Vector3 X="-10608.89" Y="162.8845" Z="30.81754" />
          <Vector3 X="-10595.86" Y="151.2367" Z="32.21152" />
          <Vector3 X="-10590.04" Y="145.4304" Z="32.62981" />
          <Vector3 X="-10579.81" Y="130.8369" Z="29.92603" />
          <Vector3 X="-10574.75" Y="114.0984" Z="31.75452" />
          <Vector3 X="-10569.23" Y="97.49321" Z="34.57045" />
          <Vector3 X="-10565.45" Y="86.09859" Z="37.22196" />
          <Vector3 X="-10561.84" Y="72.93956" Z="39.80547" />
          <Vector3 X="-10557.88" Y="55.89436" Z="38.49501" />
          <Vector3 X="-10553.22" Y="39.04499" Z="38.40754" />
          <Vector3 X="-10546.11" Y="23.06037" Z="44.60818" />
          <Vector3 X="-10543.54" Y="18.24348" Z="46.61065" />
          <Vector3 X="-10534.95" Y="6.242776" Z="48.48491" />
          <Vector3 X="-10523.99" Y="-7.398497" Z="46.90538" />
          <Vector3 X="-10515.64" Y="-20.25194" Z="46.45949" />
          <Vector3 X="-10509.88" Y="-28.89521" Z="45.95686" />
          <Vector3 X="-10498.28" Y="-41.70255" Z="46.0879" />
          <Vector3 X="-10484.41" Y="-48.20669" Z="46.90847" />
          <Vector3 X="-10467.47" Y="-42.24563" Z="48.43795" />
          <Vector3 X="-10452.55" Y="-33.12524" Z="47.96807" />
          <Vector3 X="-10439.08" Y="-21.97637" Z="47.62547" />
          <Vector3 X="-10427.88" Y="-8.579424" Z="48.89232" />
          <Vector3 X="-10419.25" Y="6.639249" Z="51.63935" />
          <Vector3 X="-10411.8" Y="20.63581" Z="55.60429" />
          <Vector3 X="-10404.16" Y="20.98269" Z="56.05986" />
          <Vector3 X="-10395.43" Y="20.71341" Z="56.15116" />
          <Vector3 X="-10379.6" Y="21.088" Z="55.49317" />
          <Vector3 X="-10366.48" Y="31.08353" Z="52.64327" />
          <Vector3 X="-10356.43" Y="45.40384" Z="49.47243" />
          <Vector3 X="-10341.33" Y="55.05027" Z="47.45193" />
          <Vector3 X="-10325.13" Y="59.70834" Z="47.71783" />
          <Vector3 X="-10308.11" Y="64.99957" Z="43.13578" />
          <Vector3 X="-10297.67" Y="78.90971" Z="38.88857" />
          <Vector3 X="-10290.42" Y="81.98946" Z="38.7617" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(157)  || new Vector3(-10290.42f, 81.98946f, 38.7617f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Go to Abercrombie2</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10746.3" Y="314.8515" Z="39.35541" />
          <Vector3 X="-10742.53" Y="298.9495" Z="40.1562" />
          <Vector3 X="-10742.06" Y="280.9572" Z="40.66894" />
          <Vector3 X="-10737.9" Y="264.3712" Z="42.3113" />
          <Vector3 X="-10725.63" Y="252.105" Z="42.93427" />
          <Vector3 X="-10714.79" Y="246.9983" Z="42.84994" />
          <Vector3 X="-10698.08" Y="241.8399" Z="41.75784" />
          <Vector3 X="-10681.93" Y="235.1158" Z="42.67361" />
          <Vector3 X="-10666.23" Y="227.459" Z="42.88448" />
          <Vector3 X="-10652" Y="217.3135" Z="40.97135" />
          <Vector3 X="-10640.7" Y="203.9765" Z="40.54121" />
          <Vector3 X="-10630.52" Y="190.3943" Z="35.44017" />
          <Vector3 X="-10619.45" Y="176.1717" Z="32.73803" />
          <Vector3 X="-10608.89" Y="162.8845" Z="30.81754" />
          <Vector3 X="-10595.86" Y="151.2367" Z="32.21152" />
          <Vector3 X="-10590.04" Y="145.4304" Z="32.62981" />
          <Vector3 X="-10579.81" Y="130.8369" Z="29.92603" />
          <Vector3 X="-10574.75" Y="114.0984" Z="31.75452" />
          <Vector3 X="-10569.23" Y="97.49321" Z="34.57045" />
          <Vector3 X="-10565.45" Y="86.09859" Z="37.22196" />
          <Vector3 X="-10561.84" Y="72.93956" Z="39.80547" />
          <Vector3 X="-10557.88" Y="55.89436" Z="38.49501" />
          <Vector3 X="-10553.22" Y="39.04499" Z="38.40754" />
          <Vector3 X="-10546.11" Y="23.06037" Z="44.60818" />
          <Vector3 X="-10543.54" Y="18.24348" Z="46.61065" />
          <Vector3 X="-10534.95" Y="6.242776" Z="48.48491" />
          <Vector3 X="-10523.99" Y="-7.398497" Z="46.90538" />
          <Vector3 X="-10515.64" Y="-20.25194" Z="46.45949" />
          <Vector3 X="-10509.88" Y="-28.89521" Z="45.95686" />
          <Vector3 X="-10498.28" Y="-41.70255" Z="46.0879" />
          <Vector3 X="-10484.41" Y="-48.20669" Z="46.90847" />
          <Vector3 X="-10467.47" Y="-42.24563" Z="48.43795" />
          <Vector3 X="-10452.55" Y="-33.12524" Z="47.96807" />
          <Vector3 X="-10439.08" Y="-21.97637" Z="47.62547" />
          <Vector3 X="-10427.88" Y="-8.579424" Z="48.89232" />
          <Vector3 X="-10419.25" Y="6.639249" Z="51.63935" />
          <Vector3 X="-10411.8" Y="20.63581" Z="55.60429" />
          <Vector3 X="-10404.16" Y="20.98269" Z="56.05986" />
          <Vector3 X="-10395.43" Y="20.71341" Z="56.15116" />
          <Vector3 X="-10379.6" Y="21.088" Z="55.49317" />
          <Vector3 X="-10366.48" Y="31.08353" Z="52.64327" />
          <Vector3 X="-10356.43" Y="45.40384" Z="49.47243" />
          <Vector3 X="-10341.33" Y="55.05027" Z="47.45193" />
          <Vector3 X="-10325.13" Y="59.70834" Z="47.71783" />
          <Vector3 X="-10308.11" Y="64.99957" Z="43.13578" />
          <Vector3 X="-10297.67" Y="78.90971" Z="38.88857" />
          <Vector3 X="-10290.42" Y="81.98946" Z="38.7617" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(159)  || new Vector3(-10290.42f, 81.98946f, 38.7617f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Go to Lakeshire</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10578.54" Y="982.639" Z="38.36399" />
          <Vector3 X="-10573.12" Y="980.654" Z="39.25007" />
          <Vector3 X="-10548.76" Y="970.8658" Z="41.31413" />
          <Vector3 X="-10524.95" Y="961.988" Z="40.95663" />
          <Vector3 X="-10498.71" Y="955.8418" Z="39.35476" />
          <Vector3 X="-10473.57" Y="958.5822" Z="36.15079" />
          <Vector3 X="-10450.64" Y="972.5047" Z="35.20912" />
          <Vector3 X="-10429.14" Y="987.1809" Z="34.10606" />
          <Vector3 X="-10403.43" Y="990.7147" Z="31.85712" />
          <Vector3 X="-10378.2" Y="983.6775" Z="31.06006" />
          <Vector3 X="-10353.24" Y="979.2138" Z="31.13083" />
          <Vector3 X="-10326.8" Y="973.5203" Z="31.13073" />
          <Vector3 X="-10301.37" Y="967.1399" Z="31.12883" />
          <Vector3 X="-10276.77" Y="970.547" Z="31.1261" />
          <Vector3 X="-10256.69" Y="988.5554" Z="31.28201" />
          <Vector3 X="-10230.95" Y="992.4501" Z="31.70264" />
          <Vector3 X="-10204.86" Y="990.0595" Z="32.65121" />
          <Vector3 X="-10178.9" Y="986.4907" Z="34.44781" />
          <Vector3 X="-10152.67" Y="987.4384" Z="34.12534" />
          <Vector3 X="-10126.54" Y="989.8502" Z="37.06704" />
          <Vector3 X="-10101.3" Y="996.8591" Z="37.73118" />
          <Vector3 X="-10076.67" Y="1001.528" Z="33.42601" />
          <Vector3 X="-10051.92" Y="993.1497" Z="32.96318" />
          <Vector3 X="-10026.35" Y="985.6774" Z="32.47126" />
          <Vector3 X="-10000.95" Y="992.0131" Z="32.00468" />
          <Vector3 X="-9975.764" Y="999.2656" Z="31.44913" />
          <Vector3 X="-9949.633" Y="999.2313" Z="31.48869" />
          <Vector3 X="-9925.111" Y="992.6086" Z="31.44064" />
          <Vector3 X="-9900.411" Y="983.8613" Z="31.15994" />
          <Vector3 X="-9880.328" Y="966.313" Z="31.26473" />
          <Vector3 X="-9873.507" Y="942.0598" Z="30.98717" />
          <Vector3 X="-9864.169" Y="917.7894" Z="30.10327" />
          <Vector3 X="-9848.287" Y="895.8655" Z="29.18406" />
          <Vector3 X="-9833.575" Y="875.1528" Z="26.13203" />
          <Vector3 X="-9817.518" Y="853.3349" Z="26.94155" />
          <Vector3 X="-9801.009" Y="832.9467" Z="29.09916" />
          <Vector3 X="-9784.328" Y="813.7782" Z="25.8123" />
          <Vector3 X="-9778.479" Y="804.8734" Z="25.2554" />
          <Vector3 X="-9760.627" Y="771.1721" Z="25.03684" />
          <Vector3 X="-9755.92" Y="736.5677" Z="25.10719" />
          <Vector3 X="-9757.473" Y="702.7913" Z="25.5597" />
          <Vector3 X="-9755.549" Y="667.0353" Z="27.72631" />
          <Vector3 X="-9746.044" Y="634.5411" Z="29.33176" />
          <Vector3 X="-9742.74" Y="598.6224" Z="31.09418" />
          <Vector3 X="-9742.274" Y="563.6407" Z="35.08386" />
          <Vector3 X="-9744.516" Y="528.7212" Z="35.5636" />
          <Vector3 X="-9749.327" Y="494.0571" Z="33.62323" />
          <Vector3 X="-9754.521" Y="460.5793" Z="34.62741" />
          <Vector3 X="-9756.137" Y="425.7081" Z="37.2209" />
          <Vector3 X="-9748.815" Y="391.6579" Z="39.79926" />
          <Vector3 X="-9735.674" Y="358.0432" Z="42.2979" />
          <Vector3 X="-9719.124" Y="328.5193" Z="44.26149" />
          <Vector3 X="-9698.633" Y="298.8057" Z="45.98235" />
          <Vector3 X="-9673.998" Y="274.0821" Z="46.54459" />
          <Vector3 X="-9644.585" Y="257.5545" Z="46.5836" />
          <Vector3 X="-9608.692" Y="254.8543" Z="47.4841" />
          <Vector3 X="-9573.865" Y="251.4447" Z="48.9199" />
          <Vector3 X="-9540.693" Y="244.9783" Z="50.492" />
          <Vector3 X="-9511.931" Y="223.9924" Z="52.50176" />
          <Vector3 X="-9493.302" Y="195.7587" Z="54.56862" />
          <Vector3 X="-9483.522" Y="161.1976" Z="56.00888" />
          <Vector3 X="-9481.827" Y="126.3266" Z="56.57478" />
          <Vector3 X="-9488.03" Y="91.9052" Z="56.25784" />
          <Vector3 X="-9496.43" Y="57.95111" Z="56.01605" />
          <Vector3 X="-9510.052" Y="25.74638" Z="56.51975" />
          <Vector3 X="-9524.805" Y="-5.992437" Z="55.82334" />
          <Vector3 X="-9537.023" Y="-37.43125" Z="56.4688" />
          <Vector3 X="-9544.798" Y="-72.49687" Z="57.52163" />
          <Vector3 X="-9548.643" Y="-106.1333" Z="57.39839" />
          <Vector3 X="-9558.825" Y="-140.6799" Z="57.48469" />
          <Vector3 X="-9575.119" Y="-171.5659" Z="57.56018" />
          <Vector3 X="-9590.038" Y="-203.1752" Z="57.75747" />
          <Vector3 X="-9602.063" Y="-234.8496" Z="57.50234" />
          <Vector3 X="-9612.57" Y="-269.3592" Z="57.08909" />
          <Vector3 X="-9616.729" Y="-304.0911" Z="57.50143" />
          <Vector3 X="-9618.479" Y="-337.9081" Z="57.6159" />
          <Vector3 X="-9617.481" Y="-374.01" Z="57.6528" />
          <Vector3 X="-9612.958" Y="-407.5518" Z="57.55217" />
          <Vector3 X="-9601.522" Y="-441.6726" Z="57.68248" />
          <Vector3 X="-9590.109" Y="-474.6123" Z="57.749" />
          <Vector3 X="-9596.157" Y="-507.5139" Z="57.41179" />
          <Vector3 X="-9611.037" Y="-540.3707" Z="54.64994" />
          <Vector3 X="-9616.952" Y="-573.7214" Z="54.3227" />
          <Vector3 X="-9624.935" Y="-610.0111" Z="52.32542" />
          <Vector3 X="-9633.298" Y="-642.9078" Z="50.51195" />
          <Vector3 X="-9643.41" Y="-676.4128" Z="48.64456" />
          <Vector3 X="-9649.888" Y="-709.6235" Z="45.17323" />
          <Vector3 X="-9653.105" Y="-745.5536" Z="44.58104" />
          <Vector3 X="-9649.678" Y="-780.3218" Z="44.19565" />
          <Vector3 X="-9637.263" Y="-812.7983" Z="43.73221" />
          <Vector3 X="-9613.578" Y="-836.9742" Z="43.65589" />
          <Vector3 X="-9593.17" Y="-865.0067" Z="43.8547" />
          <Vector3 X="-9584.511" Y="-898.7922" Z="43.80296" />
          <Vector3 X="-9588.771" Y="-934.2" Z="43.53084" />
          <Vector3 X="-9608.293" Y="-963.0604" Z="43.7916" />
          <Vector3 X="-9619.868" Y="-995.5" Z="42.61161" />
          <Vector3 X="-9619.816" Y="-1029.306" Z="39.8168" />
          <Vector3 X="-9615.81" Y="-1065.202" Z="39.64175" />
          <Vector3 X="-9614.146" Y="-1100.134" Z="40.46901" />
          <Vector3 X="-9618.17" Y="-1134.839" Z="42.7071" />
          <Vector3 X="-9627.546" Y="-1168.514" Z="41.00233" />
          <Vector3 X="-9641.857" Y="-1200.447" Z="36.64378" />
          <Vector3 X="-9649.407" Y="-1234.341" Z="37.11071" />
          <Vector3 X="-9650.509" Y="-1269.323" Z="43.07482" />
          <Vector3 X="-9653.628" Y="-1304.112" Z="46.80077" />
          <Vector3 X="-9659.467" Y="-1338.561" Z="48.6335" />
          <Vector3 X="-9661.494" Y="-1372.329" Z="49.92158" />
          <Vector3 X="-9657.111" Y="-1407.021" Z="53.45008" />
          <Vector3 X="-9652.804" Y="-1442.79" Z="54.01834" />
          <Vector3 X="-9654.207" Y="-1477.758" Z="55.37632" />
          <Vector3 X="-9650.904" Y="-1512.556" Z="57.11935" />
          <Vector3 X="-9648.37" Y="-1547.458" Z="53.82714" />
          <Vector3 X="-9646.362" Y="-1582.4" Z="54.90095" />
          <Vector3 X="-9642.333" Y="-1617.093" Z="56.02602" />
          <Vector3 X="-9629.428" Y="-1649.508" Z="55.85596" />
          <Vector3 X="-9616.949" Y="-1682.066" Z="55.93571" />
          <Vector3 X="-9612.222" Y="-1716.609" Z="55.89406" />
          <Vector3 X="-9614.248" Y="-1751.549" Z="55.66163" />
          <Vector3 X="-9614.801" Y="-1786.509" Z="52.06497" />
          <Vector3 X="-9610.497" Y="-1820.101" Z="52.15186" />
          <Vector3 X="-9605.158" Y="-1855.786" Z="55.8406" />
          <Vector3 X="-9603.12" Y="-1867.652" Z="57.04078" />
          <Vector3 X="-9602.129" Y="-1873.021" Z="57.52559" />
        </Path>
        <IsCompleteWhenAtLastPath>false</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(244)  || new Vector3(-9602.129f, -1873.021f, 57.52559f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Go to Moonbrook</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10280.17" Y="86.73293" Z="38.82418" />
          <Vector3 X="-10280.17" Y="86.73293" Z="38.82418" />
          <Vector3 X="-10277.37" Y="97.32416" Z="38.66538" />
          <Vector3 X="-10271.33" Y="105.7817" Z="38.45276" />
          <Vector3 X="-10261.63" Y="120.3169" Z="36.79375" />
          <Vector3 X="-10256.75" Y="137.0981" Z="35.06306" />
          <Vector3 X="-10253.2" Y="154.2278" Z="32.9243" />
          <Vector3 X="-10247.91" Y="170.9057" Z="33.83804" />
          <Vector3 X="-10246.71" Y="188.2933" Z="30.55819" />
          <Vector3 X="-10245.77" Y="205.7599" Z="26.81464" />
          <Vector3 X="-10243.26" Y="223.0484" Z="27.0101" />
          <Vector3 X="-10240.24" Y="240.2843" Z="32.50979" />
          <Vector3 X="-10237.29" Y="257.5336" Z="34.42953" />
          <Vector3 X="-10234.41" Y="274.2621" Z="34.3426" />
          <Vector3 X="-10231.08" Y="291.4158" Z="38.51772" />
          <Vector3 X="-10226.74" Y="308.9084" Z="40.0103" />
          <Vector3 X="-10221.78" Y="325.6903" Z="39.30475" />
          <Vector3 X="-10217.62" Y="342.6488" Z="40.64746" />
          <Vector3 X="-10214.63" Y="359.8924" Z="42.4628" />
          <Vector3 X="-10212.36" Y="376.6969" Z="44.20756" />
          <Vector3 X="-10214.42" Y="394.5224" Z="47.38956" />
          <Vector3 X="-10222.09" Y="410.194" Z="47.11418" />
          <Vector3 X="-10233.81" Y="423.1697" Z="46.37823" />
          <Vector3 X="-10246.53" Y="435.1761" Z="47.24537" />
          <Vector3 X="-10259.79" Y="445.7702" Z="46.08399" />
          <Vector3 X="-10273.91" Y="456.9785" Z="44.42903" />
          <Vector3 X="-10287.61" Y="467.8603" Z="43.75785" />
          <Vector3 X="-10301.32" Y="478.7421" Z="40.74267" />
          <Vector3 X="-10315.02" Y="489.6275" Z="40.15133" />
          <Vector3 X="-10329.57" Y="499.2482" Z="38.42769" />
          <Vector3 X="-10345.32" Y="506.8772" Z="36.89182" />
          <Vector3 X="-10360.68" Y="514.1153" Z="37.42613" />
          <Vector3 X="-10377" Y="521.7684" Z="35.49619" />
          <Vector3 X="-10393.97" Y="525.3125" Z="33.23577" />
          <Vector3 X="-10411.41" Y="526.5552" Z="32.47276" />
          <Vector3 X="-10428.65" Y="529.5399" Z="31.50495" />
          <Vector3 X="-10444.24" Y="535.7229" Z="28.34288" />
          <Vector3 X="-10458.7" Y="546.4821" Z="26.49477" />
          <Vector3 X="-10472.4" Y="557.3627" Z="26.1239" />
          <Vector3 X="-10486.11" Y="568.2445" Z="27.50206" />
          <Vector3 X="-10499.82" Y="579.1227" Z="27.67399" />
          <Vector3 X="-10513.89" Y="589.5006" Z="30.17165" />
          <Vector3 X="-10529.54" Y="597.2605" Z="29.27601" />
          <Vector3 X="-10545.93" Y="603.4014" Z="27.88247" />
          <Vector3 X="-10562.52" Y="608.8312" Z="26.64572" />
          <Vector3 X="-10579.18" Y="606.6735" Z="25.68502" />
          <Vector3 X="-10596.69" Y="602.5055" Z="26.84776" />
          <Vector3 X="-10613.79" Y="598.7922" Z="23.53189" />
          <Vector3 X="-10630.9" Y="595.1198" Z="22.29081" />
          <Vector3 X="-10647.65" Y="592.4045" Z="22.02551" />
          <Vector3 X="-10665.62" Y="591.0345" Z="22.40591" />
          <Vector3 X="-10682.57" Y="591.6795" Z="22.66949" />
          <Vector3 X="-10700.02" Y="592.6942" Z="23.78346" />
          <Vector3 X="-10717.97" Y="591.0255" Z="23.72823" />
          <Vector3 X="-10734.86" Y="589.4196" Z="23.95755" />
          <Vector3 X="-10752.88" Y="588.8283" Z="22.52508" />
          <Vector3 X="-10769.84" Y="588.2804" Z="25.66903" />
          <Vector3 X="-10787.84" Y="587.4554" Z="24.27073" />
          <Vector3 X="-10805.28" Y="586.3881" Z="24.45064" />
          <Vector3 X="-10822.73" Y="585.694" Z="27.31197" />
          <Vector3 X="-10840.16" Y="586.3234" Z="32.09988" />
          <Vector3 X="-10857.21" Y="590.1182" Z="31.10246" />
          <Vector3 X="-10856.42" Y="583.7661" Z="30.95497" />
          <Vector3 X="-10865.33" Y="584.4451" Z="30.93024" />
          <Vector3 X="-10865.36" Y="592.074" Z="31.24242" />
          <Vector3 X="-10865.53" Y="609.5713" Z="31.34665" />
          <Vector3 X="-10865.88" Y="626.5427" Z="31.34665" />
          <Vector3 X="-10866.26" Y="644.5635" Z="31.34665" />
          <Vector3 X="-10867.79" Y="661.4672" Z="31.20478" />
          <Vector3 X="-10869.53" Y="678.8799" Z="30.90136" />
          <Vector3 X="-10873.65" Y="713.5815" Z="30.88261" />
          <Vector3 X="-10883.42" Y="747.1045" Z="31.045" />
          <Vector3 X="-10900.83" Y="777.1198" Z="30.72282" />
          <Vector3 X="-10920.92" Y="805.6998" Z="30.72338" />
          <Vector3 X="-10928.9" Y="839.2123" Z="32.53849" />
          <Vector3 X="-10918.03" Y="871.3242" Z="32.36276" />
          <Vector3 X="-10920.28" Y="906.623" Z="32.22015" />
          <Vector3 X="-10942.81" Y="931.5564" Z="31.55143" />
          <Vector3 X="-10942.74" Y="966.4617" Z="32.29438" />
          <Vector3 X="-10921.97" Y="994.3479" Z="35.25941" />
          <Vector3 X="-10922.06" Y="1002.963" Z="35.83417" />
          <Vector3 X="-10938.46" Y="1030.861" Z="36.63472" />
          <Vector3 X="-10936.72" Y="1065.55" Z="36.32479" />
          <Vector3 X="-10952.69" Y="1096.432" Z="36.84712" />
          <Vector3 X="-10956.32" Y="1105.533" Z="36.7035" />
          <Vector3 X="-10953.88" Y="1125.313" Z="36.85828" />
          <Vector3 X="-10938.53" Y="1156.684" Z="37.70208" />
          <Vector3 X="-10923.35" Y="1188.222" Z="37.1128" />
          <Vector3 X="-10908.73" Y="1221.171" Z="34.85339" />
          <Vector3 X="-10896.78" Y="1252.927" Z="33.25813" />
          <Vector3 X="-10892.87" Y="1287.469" Z="33.64881" />
          <Vector3 X="-10896.87" Y="1322.236" Z="37.1555" />
          <Vector3 X="-10904.68" Y="1357.366" Z="39.60418" />
          <Vector3 X="-10911.23" Y="1391.747" Z="42.80014" />
          <Vector3 X="-10915.06" Y="1426.481" Z="42.86592" />
          <Vector3 X="-10914.15" Y="1460.414" Z="45.75399" />
          <Vector3 X="-10913.96" Y="1495.274" Z="48.43459" />
          <Vector3 X="-10915.02" Y="1503.957" Z="49.56159" />
          <Vector3 X="-10923.44" Y="1509.512" Z="50.24572" />
          <Vector3 X="-10933.23" Y="1513.293" Z="48.25076" />
          <Vector3 X="-10943.04" Y="1517.039" Z="44.85183" />
          <Vector3 X="-10952.63" Y="1521.275" Z="43.35476" />
          <Vector3 X="-10959.99" Y="1528.1" Z="43.51957" />
          <Vector3 X="-10961" Y="1538.63" Z="45.61765" />
          <Vector3 X="-10962.56" Y="1548.817" Z="45.61765" />
          <Vector3 X="-10966.72" Y="1550.305" Z="45.61765" />
          <Vector3 X="-10973.23" Y="1550.683" Z="44.71627" />
          <Vector3 X="-10975.73" Y="1553.295" Z="45.01248" />
          <Vector3 X="-10973.53" Y="1562.186" Z="45.61972" />
          <Vector3 X="-10964.57" Y="1565.268" Z="45.61972" />
          <Vector3 X="-10954.48" Y="1568.156" Z="46.57843" />
          <Vector3 X="-10950.46" Y="1570.755" Z="47.34747" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(67)  || new Vector3(-10950.46f, 1570.755f, 47.34747f).DistanceTo(ObjectManager.Me.Position) &lt; 5);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Goldshire to Canal District</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-9453.945" Y="59.80281" Z="55.97897" />
          <Vector3 X="-9444.634" Y="66.70554" Z="56.13768" />
          <Vector3 X="-9430.824" Y="76.51428" Z="56.24916" />
          <Vector3 X="-9416.743" Y="86.87508" Z="56.95916" />
          <Vector3 X="-9402.765" Y="96.40194" Z="58.42575" />
          <Vector3 X="-9386.289" Y="102.209" Z="59.56201" />
          <Vector3 X="-9369.901" Y="108.2723" Z="60.75655" />
          <Vector3 X="-9353.154" Y="116.3327" Z="62.27806" />
          <Vector3 X="-9337.976" Y="123.8467" Z="63.49639" />
          <Vector3 X="-9322.146" Y="132.5385" Z="64.21158" />
          <Vector3 X="-9307.178" Y="140.4659" Z="65.55428" />
          <Vector3 X="-9290.798" Y="146.4594" Z="66.35767" />
          <Vector3 X="-9273.995" Y="151.3476" Z="66.92564" />
          <Vector3 X="-9257.588" Y="157.1938" Z="67.64687" />
          <Vector3 X="-9244.05" Y="168.9845" Z="67.88067" />
          <Vector3 X="-9233.484" Y="182.2256" Z="67.7095" />
          <Vector3 X="-9222.526" Y="195.8694" Z="68.54391" />
          <Vector3 X="-9210.711" Y="208.777" Z="70.07764" />
          <Vector3 X="-9198.997" Y="221.7738" Z="71.31873" />
          <Vector3 X="-9189.192" Y="236.1907" Z="72.1562" />
          <Vector3 X="-9184.925" Y="252.9721" Z="73.51394" />
          <Vector3 X="-9182.445" Y="270.2949" Z="74.92367" />
          <Vector3 X="-9181.467" Y="287.764" Z="76.56701" />
          <Vector3 X="-9181.386" Y="305.2549" Z="78.60532" />
          <Vector3 X="-9179.302" Y="322.5834" Z="80.60368" />
          <Vector3 X="-9173.358" Y="338.9489" Z="84.00762" />
          <Vector3 X="-9161.689" Y="352.6543" Z="87.99183" />
          <Vector3 X="-9150.652" Y="365.3751" Z="90.29301" />
          <Vector3 X="-9138.4" Y="378.5136" Z="90.62369" />
          <Vector3 X="-9122.783" Y="390.9235" Z="91.70644" />
          <Vector3 X="-9101.467" Y="407.6388" Z="92.60345" />
          <Vector3 X="-9081.183" Y="422.9427" Z="92.54594" />
          <Vector3 X="-9060.224" Y="438.7471" Z="93.05621" />
          <Vector3 X="-9039.265" Y="454.5516" Z="93.05621" />
          <Vector3 X="-9018.507" Y="470.6117" Z="95.52004" />
          <Vector3 X="-8997.433" Y="487.6326" Z="96.62246" />
          <Vector3 X="-8979.388" Y="502.2577" Z="96.41724" />
          <Vector3 X="-8967.475" Y="513.55" Z="96.35297" />
          <Vector3 X="-8959.456" Y="529.3355" Z="96.35564" />
          <Vector3 X="-8967.381" Y="541.3708" Z="94.43198" />
          <Vector3 X="-8966.729" Y="557.4166" Z="93.86504" />
          <Vector3 X="-8958.877" Y="562.9879" Z="93.8347" />
          <Vector3 X="-8943.673" Y="555.8989" Z="94.34043" />
          <Vector3 X="-8928.806" Y="547.098" Z="94.27419" />
          <Vector3 X="-8912.549" Y="553.9257" Z="93.78992" />
          <Vector3 X="-8898.853" Y="564.8141" Z="92.79363" />
          <Vector3 X="-8885.705" Y="575.4772" Z="92.82423" />
          <Vector3 X="-8872.113" Y="586.5007" Z="92.7104" />
          <Vector3 X="-8858.521" Y="597.5242" Z="92.02138" />
          <Vector3 X="-8845.363" Y="609.0463" Z="92.65102" />
          <Vector3 X="-8837.7" Y="618.806" Z="92.92503" />
          <Vector3 X="-8837.944" Y="629.4219" Z="94.12371" />
          <Vector3 X="-8841.822" Y="638.8107" Z="95.25988" />
          <Vector3 X="-8846.088" Y="648.0594" Z="96.62341" />
          <Vector3 X="-8849.721" Y="658.217" Z="97.05581" />
          <Vector3 X="-8844.991" Y="667.2503" Z="97.71572" />
          <Vector3 X="-8836.58" Y="672.9287" Z="98.24809" />
          <Vector3 X="-8827.398" Y="678.5595" Z="97.43051" />
          <Vector3 X="-8828.626" Y="688.2648" Z="97.28567" />
          <Vector3 X="-8833.616" Y="697.8597" Z="97.55438" />
          <Vector3 X="-8838.684" Y="706.6683" Z="97.6352" />
          <Vector3 X="-8843.833" Y="715.8188" Z="97.45823" />
          <Vector3 X="-8848.782" Y="725.0602" Z="97.36486" />
          <Vector3 X="-8852.723" Y="735.1499" Z="100.2792" />
          <Vector3 X="-8858.056" Y="743.7939" Z="100.4376" />
          <Vector3 X="-8864.02" Y="752.8412" Z="98.68471" />
          <Vector3 X="-8868.479" Y="761.5673" Z="96.78936" />
          <Vector3 X="-8862.392" Y="769.1855" Z="96.75613" />
          <Vector3 X="-8852.812" Y="776.6163" Z="95.84486" />
          <Vector3 X="-8834.121" Y="792.624" Z="96.30524" />
          <Vector3 X="-8827.988" Y="800.1984" Z="97.40629" />
          <Vector3 X="-8823.209" Y="825.1262" Z="98.78352" />
          <Vector3 X="-8821.668" Y="851.2598" Z="99.09416" />
          <Vector3 X="-8826.543" Y="877.0026" Z="98.69039" />
          <Vector3 X="-8833.741" Y="899.632" Z="97.76271" />
          <Vector3 X="-8841.245" Y="914.8105" Z="99.61828" />
          <Vector3 X="-8845.998" Y="922.1511" Z="101.5476" />
          <Vector3 X="-8850.434" Y="929.0344" Z="102.0451" />
          <Vector3 X="-8846.379" Y="931.7845" Z="103.1604" />
          <Vector3 X="-8832.091" Y="941.8655" Z="104.7546" />
          <Vector3 X="-8818.952" Y="953.4041" Z="100.6309" />
          <Vector3 X="-8823.834" Y="965.4203" Z="99.54152" />
          <Vector3 X="-8831.439" Y="977.4228" Z="98.48198" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(70)  || new Vector3(-8831.904f, 981.1533f, 98.55235f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Grind to 19</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-9700.837" Y="-2519.004" Z="61.39124" />
          <Vector3 X="-9701.212" Y="-2622.737" Z="63.6978" />
          <Vector3 X="-9650.021" Y="-2677.304" Z="60.33127" />
          <Vector3 X="-9679.049" Y="-2740.476" Z="57.25861" />
          <Vector3 X="-9678.571" Y="-2812.723" Z="51.87247" />
          <Vector3 X="-9672.229" Y="-2866.646" Z="51.55036" />
          <Vector3 X="-9681.268" Y="-2963.066" Z="51.77911" />
        </HotSpots>
        <EntryTarget>
          <int>441</int>
          <int>428</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>18</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Grind to 22</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-10184.51" Y="147.9791" Z="27.43766" />
          <Vector3 X="-10178.69" Y="17.71388" Z="27.21194" />
          <Vector3 X="-10197.06" Y="-26.81432" Z="27.64033" />
          <Vector3 X="-10104.62" Y="-118.8661" Z="25.75522" />
          <Vector3 X="-10141.84" Y="-222.6004" Z="31.72872" />
          <Vector3 X="-10059.31" Y="-249.6537" Z="29.63722" />
          <Vector3 X="-10087.03" Y="-354.0725" Z="34.76266" />
          <Vector3 X="-10023.2" Y="-424.5303" Z="33.30466" />
          <Vector3 X="-10060.22" Y="-544.5498" Z="51.04549" />
          <Vector3 X="-10026.47" Y="-572.5195" Z="44.19084" />
          <Vector3 X="-9959.168" Y="-623.6135" Z="32.34129" />
          <Vector3 X="-9972.334" Y="-688.1796" Z="31.30503" />
          <Vector3 X="-10052.38" Y="-720.9626" Z="36.67696" />
          <Vector3 X="-10065.91" Y="-682.2702" Z="35.86307" />
          <Vector3 X="-10019.92" Y="-747.5756" Z="36.13439" />
        </HotSpots>
        <EntryTarget>
          <int>213</int>
          <int>539</int>
          <int>565</int>
          <int>569</int>
          <int>217</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>21</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Grind to 23</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-10091.67" Y="-294.9665" Z="32.42832" />
          <Vector3 X="-10115.09" Y="-248.8141" Z="31.09855" />
          <Vector3 X="-10071" Y="-216.0354" Z="30.07209" />
          <Vector3 X="-10082.33" Y="-537.3052" Z="51.87511" />
          <Vector3 X="-9961.754" Y="-621.4034" Z="32.95849" />
          <Vector3 X="-10111.84" Y="-643.7449" Z="48.96678" />
          <Vector3 X="-10114.7" Y="-714.3976" Z="39.7708" />
          <Vector3 X="-9997.139" Y="-731.1364" Z="32.07807" />
          <Vector3 X="-10052.2" Y="-793.8807" Z="35.56917" />
          <Vector3 X="-10085.5" Y="-854.3716" Z="36.81755" />
        </HotSpots>
        <EntryTarget>
          <int>217</int>
          <int>565</int>
          <int>213</int>
          <int>569</int>
          <int>539</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>22</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Grind to 24</Name>
      <QuestId />
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-10346.8" Y="-978.6447" Z="47.05938" />
          <Vector3 X="-10258.3" Y="-1038.85" Z="44.238" />
          <Vector3 X="-10274.27" Y="-941.7841" Z="43.71929" />
          <Vector3 X="-10233.14" Y="-950.8594" Z="37.76368" />
          <Vector3 X="-10215.48" Y="-876.334" Z="41.10127" />
          <Vector3 X="-10184.13" Y="-904.6306" Z="36.55928" />
        </HotSpots>
        <EntryTarget>
          <int>1258</int>
        </EntryTarget>
        <IsGrinderNotQuest>true</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>23</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Hilary's Necklace</Name>
      <QuestId>
        <int>3741</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="-9364.565" Y="-2396.607" Z="37.51764" Type="Swimming" />
          <Vector3 X="-9347.438" Y="-2310.622" Z="45.63565" Type="Swimming" />
          <Vector3 X="-9374.392" Y="-2305.036" Z="45.53672" Type="Swimming" />
          <Vector3 X="-9351.324" Y="-2242.57" Z="45.49532" Type="Swimming" />
          <Vector3 X="-9352.346" Y="-2129.993" Z="42.23247" Type="Swimming" />
          <Vector3 X="-9372.528" Y="-2091.416" Z="46.47307" Type="Swimming" />
          <Vector3 X="-9340.209" Y="-2037.078" Z="40.77855" Type="Swimming" />
          <Vector3 X="-9324.244" Y="-1991.518" Z="43.62687" Type="Swimming" />
          <Vector3 X="-9336.589" Y="-2017.345" Z="42.62549" Type="Swimming" />
        </HotSpots>
        <EntryIdObjects>
          <int>154357</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Jitters' Growling Gut</Name>
      <QuestId>
        <int>5</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Juice Delivery</Name>
      <QuestId>
        <int>159</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Logging Camp to Darkshire</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-9548.234" Y="-1400.304" Z="53.66422" />
          <Vector3 X="-9555.454" Y="-1400.536" Z="54.14097" />
          <Vector3 X="-9583.306" Y="-1401.655" Z="56.38001" />
          <Vector3 X="-9609.163" Y="-1406.177" Z="56.51788" />
          <Vector3 X="-9633.663" Y="-1413.032" Z="57.11587" />
          <Vector3 X="-9658.732" Y="-1420.818" Z="53.65385" />
          <Vector3 X="-9684.646" Y="-1428.53" Z="56.04778" />
          <Vector3 X="-9709.187" Y="-1435.323" Z="54.11111" />
          <Vector3 X="-9734.765" Y="-1444.005" Z="51.65787" />
          <Vector3 X="-9758.441" Y="-1453.371" Z="48.07104" />
          <Vector3 X="-9783.648" Y="-1463.129" Z="45.4816" />
          <Vector3 X="-9808.875" Y="-1470.389" Z="41.47324" />
          <Vector3 X="-9834.354" Y="-1476.701" Z="36.66014" />
          <Vector3 X="-9860.063" Y="-1481.989" Z="32.85878" />
          <Vector3 X="-9885.586" Y="-1488.11" Z="28.99929" />
          <Vector3 X="-9901.495" Y="-1492.222" Z="27.78162" />
          <Vector3 X="-9914.444" Y="-1499.29" Z="28.74027" />
          <Vector3 X="-9936.794" Y="-1511.49" Z="27.99079" />
          <Vector3 X="-9960.526" Y="-1524.444" Z="22.22749" />
          <Vector3 X="-9982.12" Y="-1524.236" Z="28.42957" />
          <Vector3 X="-9994.429" Y="-1524.687" Z="29.86035" />
          <Vector3 X="-10020.54" Y="-1526.453" Z="28.58199" />
          <Vector3 X="-10046.35" Y="-1522.741" Z="28.3307" />
          <Vector3 X="-10064.28" Y="-1503.827" Z="28.47105" />
          <Vector3 X="-10077.15" Y="-1481.109" Z="28.49832" />
          <Vector3 X="-10081.84" Y="-1455.376" Z="28.60662" />
          <Vector3 X="-10082.22" Y="-1429.134" Z="28.98067" />
          <Vector3 X="-10081.96" Y="-1402.913" Z="29.0036" />
          <Vector3 X="-10080.91" Y="-1376.689" Z="30.03737" />
          <Vector3 X="-10081.24" Y="-1350.52" Z="30.96816" />
          <Vector3 X="-10082.64" Y="-1324.391" Z="31.84257" />
          <Vector3 X="-10084.04" Y="-1298.263" Z="31.95941" />
          <Vector3 X="-10088.62" Y="-1273.26" Z="31.29084" />
          <Vector3 X="-10096.8" Y="-1247.491" Z="28.76316" />
          <Vector3 X="-10106.71" Y="-1223.185" Z="26.91529" />
          <Vector3 X="-10119.07" Y="-1200.041" Z="25.84579" />
          <Vector3 X="-10131.24" Y="-1176.817" Z="25.70864" />
          <Vector3 X="-10149.64" Y="-1158.145" Z="24.45199" />
          <Vector3 X="-10173.14" Y="-1147.153" Z="24.70139" />
          <Vector3 X="-10199.23" Y="-1148.081" Z="23.33997" />
          <Vector3 X="-10225.2" Y="-1151.891" Z="22.34338" />
          <Vector3 X="-10250.49" Y="-1154.693" Z="21.56724" />
          <Vector3 X="-10277.42" Y="-1153.068" Z="22.73069" />
          <Vector3 X="-10301.03" Y="-1142.324" Z="22.98077" />
          <Vector3 X="-10321.86" Y="-1127.744" Z="21.55147" />
          <Vector3 X="-10347.05" Y="-1118.095" Z="21.35672" />
          <Vector3 X="-10372.91" Y="-1114.868" Z="21.08924" />
          <Vector3 X="-10397.17" Y="-1121.67" Z="22.47346" />
          <Vector3 X="-10414.17" Y="-1134.948" Z="24.47451" />
          <Vector3 X="-10425.93" Y="-1150.425" Z="27.3023" />
          <Vector3 X="-10431.09" Y="-1163.389" Z="27.56004" />
          <Vector3 X="-10452.98" Y="-1174.526" Z="27.65859" />
          <Vector3 X="-10477.28" Y="-1181.915" Z="27.64021" />
          <Vector3 X="-10503.88" Y="-1186.745" Z="27.94832" />
          <Vector3 X="-10533.36" Y="-1186.868" Z="28.00789" />
          <Vector3 X="-10539.13" Y="-1186.855" Z="28.03485" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(78)  || new Vector3(-10539.13f, -1186.855f, 28.03485f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Move to Darkshire</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10269.4" Y="90.63816" Z="39.06763" />
          <Vector3 X="-10267.6" Y="86.95569" Z="39.11526" />
          <Vector3 X="-10252.83" Y="65.59115" Z="40.11596" />
          <Vector3 X="-10233.53" Y="47.80159" Z="39.18765" />
          <Vector3 X="-10215.48" Y="28.75409" Z="34.81275" />
          <Vector3 X="-10199.76" Y="8.733115" Z="29.65159" />
          <Vector3 X="-10183.52" Y="-12.88151" Z="28.36242" />
          <Vector3 X="-10168.96" Y="-33.76805" Z="26.85133" />
          <Vector3 X="-10150.94" Y="-53.87976" Z="28.15465" />
          <Vector3 X="-10133.44" Y="-73.42783" Z="27.31659" />
          <Vector3 X="-10118.45" Y="-94.96629" Z="26.83399" />
          <Vector3 X="-10104.25" Y="-116.0961" Z="25.42271" />
          <Vector3 X="-10087.25" Y="-137.1096" Z="25.92456" />
          <Vector3 X="-10070.14" Y="-157.0026" Z="23.94531" />
          <Vector3 X="-10052.47" Y="-176.4087" Z="26.17147" />
          <Vector3 X="-10038.75" Y="-198.6923" Z="24.24231" />
          <Vector3 X="-10031.96" Y="-223.8765" Z="24.04612" />
          <Vector3 X="-10032.85" Y="-250.0836" Z="24.19938" />
          <Vector3 X="-10035.6" Y="-276.1868" Z="25.08282" />
          <Vector3 X="-10038.37" Y="-301.4748" Z="27.24436" />
          <Vector3 X="-10032.43" Y="-327.6251" Z="25.17413" />
          <Vector3 X="-10022.3" Y="-350.9807" Z="24.31847" />
          <Vector3 X="-10011.05" Y="-375.5692" Z="23.21074" />
          <Vector3 X="-10000.14" Y="-399.4416" Z="23.01265" />
          <Vector3 X="-9988.042" Y="-422.7091" Z="22.25577" />
          <Vector3 X="-9973.457" Y="-443.5418" Z="22.18508" />
          <Vector3 X="-9957.107" Y="-465.0683" Z="23.05937" />
          <Vector3 X="-9943.171" Y="-487.3099" Z="24.09414" />
          <Vector3 X="-9930.459" Y="-509.326" Z="24.52195" />
          <Vector3 X="-9926.758" Y="-535.0193" Z="28.99887" />
          <Vector3 X="-9928.463" Y="-561.9213" Z="30.65539" />
          <Vector3 X="-9934.604" Y="-587.2819" Z="29.70898" />
          <Vector3 X="-9935.69" Y="-613.4963" Z="29.71868" />
          <Vector3 X="-9934.861" Y="-639.7321" Z="27.86199" />
          <Vector3 X="-9938.093" Y="-664.8621" Z="27.54331" />
          <Vector3 X="-9943.158" Y="-690.2175" Z="24.84653" />
          <Vector3 X="-9949.639" Y="-714.9905" Z="23.86713" />
          <Vector3 X="-9956.583" Y="-740.2505" Z="23.79157" />
          <Vector3 X="-9964.847" Y="-765.1641" Z="24.32048" />
          <Vector3 X="-9974.496" Y="-788.7205" Z="24.74117" />
          <Vector3 X="-9979.025" Y="-799.2881" Z="24.98518" />
          <Vector3 X="-9991.952" Y="-825.7363" Z="25.22273" />
          <Vector3 X="-9998.962" Y="-835.8594" Z="29.16163" />
          <Vector3 X="-10014.49" Y="-856.9247" Z="30.49107" />
          <Vector3 X="-10036.94" Y="-868.2686" Z="32.11337" />
          <Vector3 X="-10060.7" Y="-878.9586" Z="34.36721" />
          <Vector3 X="-10080.4" Y="-897.3489" Z="35.65678" />
          <Vector3 X="-10096.9" Y="-917.7595" Z="36.92265" />
          <Vector3 X="-10113.97" Y="-933.1322" Z="35.35504" />
          <Vector3 X="-10109.23" Y="-953.8261" Z="35.09192" />
          <Vector3 X="-10120.13" Y="-978.7665" Z="31.89306" />
          <Vector3 X="-10133.5" Y="-1001.351" Z="29.19232" />
          <Vector3 X="-10147.68" Y="-1022.489" Z="28.49871" />
          <Vector3 X="-10164.83" Y="-1042.29" Z="28.08586" />
          <Vector3 X="-10186.98" Y="-1056.312" Z="27.64507" />
          <Vector3 X="-10207.79" Y="-1069.234" Z="34.73117" />
          <Vector3 X="-10232.18" Y="-1080.567" Z="39.16304" />
          <Vector3 X="-10246.47" Y="-1084.398" Z="40.23092" />
          <Vector3 X="-10255.78" Y="-1079.324" Z="34.72916" />
          <Vector3 X="-10265.65" Y="-1073.796" Z="34.21821" />
          <Vector3 X="-10270.92" Y="-1082.08" Z="29.06277" />
          <Vector3 X="-10286.44" Y="-1103.229" Z="20.56165" />
          <Vector3 X="-10306.47" Y="-1118.655" Z="19.11721" />
          <Vector3 X="-10332.67" Y="-1122.251" Z="21.79154" />
          <Vector3 X="-10358.35" Y="-1116.862" Z="21.30661" />
          <Vector3 X="-10384.32" Y="-1117.461" Z="21.62691" />
          <Vector3 X="-10407.05" Y="-1127.51" Z="23.18432" />
          <Vector3 X="-10420.83" Y="-1150.705" Z="26.03016" />
          <Vector3 X="-10438.87" Y="-1168.145" Z="27.84661" />
          <Vector3 X="-10463.81" Y="-1178.475" Z="27.56059" />
          <Vector3 X="-10489.11" Y="-1185.381" Z="27.5963" />
          <Vector3 X="-10497.16" Y="-1187.133" Z="27.90188" />
          <Vector3 X="-10514.37" Y="-1187.815" Z="28.08652" />
          <Vector3 X="-10537.26" Y="-1189.366" Z="27.90397" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(148)  || new Vector3(-10537.26f, -1189.366f, 27.90397f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Move to Darkshire2</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10269.4" Y="90.63816" Z="39.06763" />
          <Vector3 X="-10267.6" Y="86.95569" Z="39.11526" />
          <Vector3 X="-10252.83" Y="65.59115" Z="40.11596" />
          <Vector3 X="-10233.53" Y="47.80159" Z="39.18765" />
          <Vector3 X="-10215.48" Y="28.75409" Z="34.81275" />
          <Vector3 X="-10199.76" Y="8.733115" Z="29.65159" />
          <Vector3 X="-10183.52" Y="-12.88151" Z="28.36242" />
          <Vector3 X="-10168.96" Y="-33.76805" Z="26.85133" />
          <Vector3 X="-10150.94" Y="-53.87976" Z="28.15465" />
          <Vector3 X="-10133.44" Y="-73.42783" Z="27.31659" />
          <Vector3 X="-10118.45" Y="-94.96629" Z="26.83399" />
          <Vector3 X="-10104.25" Y="-116.0961" Z="25.42271" />
          <Vector3 X="-10087.25" Y="-137.1096" Z="25.92456" />
          <Vector3 X="-10070.14" Y="-157.0026" Z="23.94531" />
          <Vector3 X="-10052.47" Y="-176.4087" Z="26.17147" />
          <Vector3 X="-10038.75" Y="-198.6923" Z="24.24231" />
          <Vector3 X="-10031.96" Y="-223.8765" Z="24.04612" />
          <Vector3 X="-10032.85" Y="-250.0836" Z="24.19938" />
          <Vector3 X="-10035.6" Y="-276.1868" Z="25.08282" />
          <Vector3 X="-10038.37" Y="-301.4748" Z="27.24436" />
          <Vector3 X="-10032.43" Y="-327.6251" Z="25.17413" />
          <Vector3 X="-10022.3" Y="-350.9807" Z="24.31847" />
          <Vector3 X="-10011.05" Y="-375.5692" Z="23.21074" />
          <Vector3 X="-10000.14" Y="-399.4416" Z="23.01265" />
          <Vector3 X="-9988.042" Y="-422.7091" Z="22.25577" />
          <Vector3 X="-9973.457" Y="-443.5418" Z="22.18508" />
          <Vector3 X="-9957.107" Y="-465.0683" Z="23.05937" />
          <Vector3 X="-9943.171" Y="-487.3099" Z="24.09414" />
          <Vector3 X="-9930.459" Y="-509.326" Z="24.52195" />
          <Vector3 X="-9926.758" Y="-535.0193" Z="28.99887" />
          <Vector3 X="-9928.463" Y="-561.9213" Z="30.65539" />
          <Vector3 X="-9934.604" Y="-587.2819" Z="29.70898" />
          <Vector3 X="-9935.69" Y="-613.4963" Z="29.71868" />
          <Vector3 X="-9934.861" Y="-639.7321" Z="27.86199" />
          <Vector3 X="-9938.093" Y="-664.8621" Z="27.54331" />
          <Vector3 X="-9943.158" Y="-690.2175" Z="24.84653" />
          <Vector3 X="-9949.639" Y="-714.9905" Z="23.86713" />
          <Vector3 X="-9956.583" Y="-740.2505" Z="23.79157" />
          <Vector3 X="-9964.847" Y="-765.1641" Z="24.32048" />
          <Vector3 X="-9974.496" Y="-788.7205" Z="24.74117" />
          <Vector3 X="-9979.025" Y="-799.2881" Z="24.98518" />
          <Vector3 X="-9991.952" Y="-825.7363" Z="25.22273" />
          <Vector3 X="-9998.962" Y="-835.8594" Z="29.16163" />
          <Vector3 X="-10014.49" Y="-856.9247" Z="30.49107" />
          <Vector3 X="-10036.94" Y="-868.2686" Z="32.11337" />
          <Vector3 X="-10060.7" Y="-878.9586" Z="34.36721" />
          <Vector3 X="-10080.4" Y="-897.3489" Z="35.65678" />
          <Vector3 X="-10096.9" Y="-917.7595" Z="36.92265" />
          <Vector3 X="-10113.97" Y="-933.1322" Z="35.35504" />
          <Vector3 X="-10109.23" Y="-953.8261" Z="35.09192" />
          <Vector3 X="-10120.13" Y="-978.7665" Z="31.89306" />
          <Vector3 X="-10133.5" Y="-1001.351" Z="29.19232" />
          <Vector3 X="-10147.68" Y="-1022.489" Z="28.49871" />
          <Vector3 X="-10164.83" Y="-1042.29" Z="28.08586" />
          <Vector3 X="-10186.98" Y="-1056.312" Z="27.64507" />
          <Vector3 X="-10207.79" Y="-1069.234" Z="34.73117" />
          <Vector3 X="-10232.18" Y="-1080.567" Z="39.16304" />
          <Vector3 X="-10246.47" Y="-1084.398" Z="40.23092" />
          <Vector3 X="-10255.78" Y="-1079.324" Z="34.72916" />
          <Vector3 X="-10265.65" Y="-1073.796" Z="34.21821" />
          <Vector3 X="-10270.92" Y="-1082.08" Z="29.06277" />
          <Vector3 X="-10286.44" Y="-1103.229" Z="20.56165" />
          <Vector3 X="-10306.47" Y="-1118.655" Z="19.11721" />
          <Vector3 X="-10332.67" Y="-1122.251" Z="21.79154" />
          <Vector3 X="-10358.35" Y="-1116.862" Z="21.30661" />
          <Vector3 X="-10384.32" Y="-1117.461" Z="21.62691" />
          <Vector3 X="-10407.05" Y="-1127.51" Z="23.18432" />
          <Vector3 X="-10420.83" Y="-1150.705" Z="26.03016" />
          <Vector3 X="-10438.87" Y="-1168.145" Z="27.84661" />
          <Vector3 X="-10463.81" Y="-1178.475" Z="27.56059" />
          <Vector3 X="-10489.11" Y="-1185.381" Z="27.5963" />
          <Vector3 X="-10497.16" Y="-1187.133" Z="27.90188" />
          <Vector3 X="-10514.37" Y="-1187.815" Z="28.08652" />
          <Vector3 X="-10537.26" Y="-1189.366" Z="27.90397" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(93)  || new Vector3(-10537.26f, -1189.366f, 27.90397f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Move to Darkshire3</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10269.4" Y="90.63816" Z="39.06763" />
          <Vector3 X="-10267.6" Y="86.95569" Z="39.11526" />
          <Vector3 X="-10252.83" Y="65.59115" Z="40.11596" />
          <Vector3 X="-10233.53" Y="47.80159" Z="39.18765" />
          <Vector3 X="-10215.48" Y="28.75409" Z="34.81275" />
          <Vector3 X="-10199.76" Y="8.733115" Z="29.65159" />
          <Vector3 X="-10183.52" Y="-12.88151" Z="28.36242" />
          <Vector3 X="-10168.96" Y="-33.76805" Z="26.85133" />
          <Vector3 X="-10150.94" Y="-53.87976" Z="28.15465" />
          <Vector3 X="-10133.44" Y="-73.42783" Z="27.31659" />
          <Vector3 X="-10118.45" Y="-94.96629" Z="26.83399" />
          <Vector3 X="-10104.25" Y="-116.0961" Z="25.42271" />
          <Vector3 X="-10087.25" Y="-137.1096" Z="25.92456" />
          <Vector3 X="-10070.14" Y="-157.0026" Z="23.94531" />
          <Vector3 X="-10052.47" Y="-176.4087" Z="26.17147" />
          <Vector3 X="-10038.75" Y="-198.6923" Z="24.24231" />
          <Vector3 X="-10031.96" Y="-223.8765" Z="24.04612" />
          <Vector3 X="-10032.85" Y="-250.0836" Z="24.19938" />
          <Vector3 X="-10035.6" Y="-276.1868" Z="25.08282" />
          <Vector3 X="-10038.37" Y="-301.4748" Z="27.24436" />
          <Vector3 X="-10032.43" Y="-327.6251" Z="25.17413" />
          <Vector3 X="-10022.3" Y="-350.9807" Z="24.31847" />
          <Vector3 X="-10011.05" Y="-375.5692" Z="23.21074" />
          <Vector3 X="-10000.14" Y="-399.4416" Z="23.01265" />
          <Vector3 X="-9988.042" Y="-422.7091" Z="22.25577" />
          <Vector3 X="-9973.457" Y="-443.5418" Z="22.18508" />
          <Vector3 X="-9957.107" Y="-465.0683" Z="23.05937" />
          <Vector3 X="-9943.171" Y="-487.3099" Z="24.09414" />
          <Vector3 X="-9930.459" Y="-509.326" Z="24.52195" />
          <Vector3 X="-9926.758" Y="-535.0193" Z="28.99887" />
          <Vector3 X="-9928.463" Y="-561.9213" Z="30.65539" />
          <Vector3 X="-9934.604" Y="-587.2819" Z="29.70898" />
          <Vector3 X="-9935.69" Y="-613.4963" Z="29.71868" />
          <Vector3 X="-9934.861" Y="-639.7321" Z="27.86199" />
          <Vector3 X="-9938.093" Y="-664.8621" Z="27.54331" />
          <Vector3 X="-9943.158" Y="-690.2175" Z="24.84653" />
          <Vector3 X="-9949.639" Y="-714.9905" Z="23.86713" />
          <Vector3 X="-9956.583" Y="-740.2505" Z="23.79157" />
          <Vector3 X="-9964.847" Y="-765.1641" Z="24.32048" />
          <Vector3 X="-9974.496" Y="-788.7205" Z="24.74117" />
          <Vector3 X="-9979.025" Y="-799.2881" Z="24.98518" />
          <Vector3 X="-9991.952" Y="-825.7363" Z="25.22273" />
          <Vector3 X="-9998.962" Y="-835.8594" Z="29.16163" />
          <Vector3 X="-10014.49" Y="-856.9247" Z="30.49107" />
          <Vector3 X="-10036.94" Y="-868.2686" Z="32.11337" />
          <Vector3 X="-10060.7" Y="-878.9586" Z="34.36721" />
          <Vector3 X="-10080.4" Y="-897.3489" Z="35.65678" />
          <Vector3 X="-10096.9" Y="-917.7595" Z="36.92265" />
          <Vector3 X="-10113.97" Y="-933.1322" Z="35.35504" />
          <Vector3 X="-10109.23" Y="-953.8261" Z="35.09192" />
          <Vector3 X="-10120.13" Y="-978.7665" Z="31.89306" />
          <Vector3 X="-10133.5" Y="-1001.351" Z="29.19232" />
          <Vector3 X="-10147.68" Y="-1022.489" Z="28.49871" />
          <Vector3 X="-10164.83" Y="-1042.29" Z="28.08586" />
          <Vector3 X="-10186.98" Y="-1056.312" Z="27.64507" />
          <Vector3 X="-10207.79" Y="-1069.234" Z="34.73117" />
          <Vector3 X="-10232.18" Y="-1080.567" Z="39.16304" />
          <Vector3 X="-10246.47" Y="-1084.398" Z="40.23092" />
          <Vector3 X="-10255.78" Y="-1079.324" Z="34.72916" />
          <Vector3 X="-10265.65" Y="-1073.796" Z="34.21821" />
          <Vector3 X="-10270.92" Y="-1082.08" Z="29.06277" />
          <Vector3 X="-10286.44" Y="-1103.229" Z="20.56165" />
          <Vector3 X="-10306.47" Y="-1118.655" Z="19.11721" />
          <Vector3 X="-10332.67" Y="-1122.251" Z="21.79154" />
          <Vector3 X="-10358.35" Y="-1116.862" Z="21.30661" />
          <Vector3 X="-10384.32" Y="-1117.461" Z="21.62691" />
          <Vector3 X="-10407.05" Y="-1127.51" Z="23.18432" />
          <Vector3 X="-10420.83" Y="-1150.705" Z="26.03016" />
          <Vector3 X="-10438.87" Y="-1168.145" Z="27.84661" />
          <Vector3 X="-10463.81" Y="-1178.475" Z="27.56059" />
          <Vector3 X="-10489.11" Y="-1185.381" Z="27.5963" />
          <Vector3 X="-10497.16" Y="-1187.133" Z="27.90188" />
          <Vector3 X="-10514.37" Y="-1187.815" Z="28.08652" />
          <Vector3 X="-10537.26" Y="-1189.366" Z="27.90397" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(158)  || new Vector3(-10537.26f, -1189.366f, 27.90397f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Move to Darkshire4</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10269.4" Y="90.63816" Z="39.06763" />
          <Vector3 X="-10267.6" Y="86.95569" Z="39.11526" />
          <Vector3 X="-10252.83" Y="65.59115" Z="40.11596" />
          <Vector3 X="-10233.53" Y="47.80159" Z="39.18765" />
          <Vector3 X="-10215.48" Y="28.75409" Z="34.81275" />
          <Vector3 X="-10199.76" Y="8.733115" Z="29.65159" />
          <Vector3 X="-10183.52" Y="-12.88151" Z="28.36242" />
          <Vector3 X="-10168.96" Y="-33.76805" Z="26.85133" />
          <Vector3 X="-10150.94" Y="-53.87976" Z="28.15465" />
          <Vector3 X="-10133.44" Y="-73.42783" Z="27.31659" />
          <Vector3 X="-10118.45" Y="-94.96629" Z="26.83399" />
          <Vector3 X="-10104.25" Y="-116.0961" Z="25.42271" />
          <Vector3 X="-10087.25" Y="-137.1096" Z="25.92456" />
          <Vector3 X="-10070.14" Y="-157.0026" Z="23.94531" />
          <Vector3 X="-10052.47" Y="-176.4087" Z="26.17147" />
          <Vector3 X="-10038.75" Y="-198.6923" Z="24.24231" />
          <Vector3 X="-10031.96" Y="-223.8765" Z="24.04612" />
          <Vector3 X="-10032.85" Y="-250.0836" Z="24.19938" />
          <Vector3 X="-10035.6" Y="-276.1868" Z="25.08282" />
          <Vector3 X="-10038.37" Y="-301.4748" Z="27.24436" />
          <Vector3 X="-10032.43" Y="-327.6251" Z="25.17413" />
          <Vector3 X="-10022.3" Y="-350.9807" Z="24.31847" />
          <Vector3 X="-10011.05" Y="-375.5692" Z="23.21074" />
          <Vector3 X="-10000.14" Y="-399.4416" Z="23.01265" />
          <Vector3 X="-9988.042" Y="-422.7091" Z="22.25577" />
          <Vector3 X="-9973.457" Y="-443.5418" Z="22.18508" />
          <Vector3 X="-9957.107" Y="-465.0683" Z="23.05937" />
          <Vector3 X="-9943.171" Y="-487.3099" Z="24.09414" />
          <Vector3 X="-9930.459" Y="-509.326" Z="24.52195" />
          <Vector3 X="-9926.758" Y="-535.0193" Z="28.99887" />
          <Vector3 X="-9928.463" Y="-561.9213" Z="30.65539" />
          <Vector3 X="-9934.604" Y="-587.2819" Z="29.70898" />
          <Vector3 X="-9935.69" Y="-613.4963" Z="29.71868" />
          <Vector3 X="-9934.861" Y="-639.7321" Z="27.86199" />
          <Vector3 X="-9938.093" Y="-664.8621" Z="27.54331" />
          <Vector3 X="-9943.158" Y="-690.2175" Z="24.84653" />
          <Vector3 X="-9949.639" Y="-714.9905" Z="23.86713" />
          <Vector3 X="-9956.583" Y="-740.2505" Z="23.79157" />
          <Vector3 X="-9964.847" Y="-765.1641" Z="24.32048" />
          <Vector3 X="-9974.496" Y="-788.7205" Z="24.74117" />
          <Vector3 X="-9979.025" Y="-799.2881" Z="24.98518" />
          <Vector3 X="-9991.952" Y="-825.7363" Z="25.22273" />
          <Vector3 X="-9998.962" Y="-835.8594" Z="29.16163" />
          <Vector3 X="-10014.49" Y="-856.9247" Z="30.49107" />
          <Vector3 X="-10036.94" Y="-868.2686" Z="32.11337" />
          <Vector3 X="-10060.7" Y="-878.9586" Z="34.36721" />
          <Vector3 X="-10080.4" Y="-897.3489" Z="35.65678" />
          <Vector3 X="-10096.9" Y="-917.7595" Z="36.92265" />
          <Vector3 X="-10113.97" Y="-933.1322" Z="35.35504" />
          <Vector3 X="-10109.23" Y="-953.8261" Z="35.09192" />
          <Vector3 X="-10120.13" Y="-978.7665" Z="31.89306" />
          <Vector3 X="-10133.5" Y="-1001.351" Z="29.19232" />
          <Vector3 X="-10147.68" Y="-1022.489" Z="28.49871" />
          <Vector3 X="-10164.83" Y="-1042.29" Z="28.08586" />
          <Vector3 X="-10186.98" Y="-1056.312" Z="27.64507" />
          <Vector3 X="-10207.79" Y="-1069.234" Z="34.73117" />
          <Vector3 X="-10232.18" Y="-1080.567" Z="39.16304" />
          <Vector3 X="-10246.47" Y="-1084.398" Z="40.23092" />
          <Vector3 X="-10255.78" Y="-1079.324" Z="34.72916" />
          <Vector3 X="-10265.65" Y="-1073.796" Z="34.21821" />
          <Vector3 X="-10270.92" Y="-1082.08" Z="29.06277" />
          <Vector3 X="-10286.44" Y="-1103.229" Z="20.56165" />
          <Vector3 X="-10306.47" Y="-1118.655" Z="19.11721" />
          <Vector3 X="-10332.67" Y="-1122.251" Z="21.79154" />
          <Vector3 X="-10358.35" Y="-1116.862" Z="21.30661" />
          <Vector3 X="-10384.32" Y="-1117.461" Z="21.62691" />
          <Vector3 X="-10407.05" Y="-1127.51" Z="23.18432" />
          <Vector3 X="-10420.83" Y="-1150.705" Z="26.03016" />
          <Vector3 X="-10438.87" Y="-1168.145" Z="27.84661" />
          <Vector3 X="-10463.81" Y="-1178.475" Z="27.56059" />
          <Vector3 X="-10489.11" Y="-1185.381" Z="27.5963" />
          <Vector3 X="-10497.16" Y="-1187.133" Z="27.90188" />
          <Vector3 X="-10514.37" Y="-1187.815" Z="28.08652" />
          <Vector3 X="-10537.26" Y="-1189.366" Z="27.90397" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(101)  || new Vector3(-10537.26f, -1189.366f, 27.90397f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Move to Duskwood</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-9481.526" Y="-2265.063" Z="75.13886" />
          <Vector3 X="-9489.489" Y="-2261.183" Z="75.56688" />
          <Vector3 X="-9498.505" Y="-2255.872" Z="76.01196" />
          <Vector3 X="-9506.834" Y="-2249.49" Z="77.04835" />
          <Vector3 X="-9514.722" Y="-2243.079" Z="78.5697" />
          <Vector3 X="-9525.429" Y="-2234.212" Z="81.64492" />
          <Vector3 X="-9538.586" Y="-2222.688" Z="86.87554" />
          <Vector3 X="-9549.869" Y="-2209.35" Z="92.69404" />
          <Vector3 X="-9557.758" Y="-2194.425" Z="92.29839" />
          <Vector3 X="-9564.667" Y="-2177.743" Z="85.58934" />
          <Vector3 X="-9572.186" Y="-2161.941" Z="78.72545" />
          <Vector3 X="-9581.033" Y="-2146.872" Z="73.06301" />
          <Vector3 X="-9592.57" Y="-2133.735" Z="68.56596" />
          <Vector3 X="-9605.026" Y="-2121.442" Z="65.64669" />
          <Vector3 X="-9616.335" Y="-2108.834" Z="63.08936" />
          <Vector3 X="-9625.588" Y="-2093.521" Z="61.332" />
          <Vector3 X="-9620.778" Y="-2077.899" Z="61.22344" />
          <Vector3 X="-9605.114" Y="-2069.305" Z="62.61362" />
          <Vector3 X="-9589.387" Y="-2062.274" Z="64.57074" />
          <Vector3 X="-9585.593" Y="-2046.139" Z="65.53677" />
          <Vector3 X="-9586.709" Y="-2028.136" Z="65.4987" />
          <Vector3 X="-9584.665" Y="-2010.868" Z="65.76926" />
          <Vector3 X="-9580.265" Y="-1993.93" Z="66.33141" />
          <Vector3 X="-9576.77" Y="-1976.791" Z="66.8715" />
          <Vector3 X="-9577.034" Y="-1959.404" Z="67.2159" />
          <Vector3 X="-9581.765" Y="-1943.293" Z="65.51811" />
          <Vector3 X="-9592.919" Y="-1929.141" Z="63.15443" />
          <Vector3 X="-9606.104" Y="-1917.783" Z="61.76768" />
          <Vector3 X="-9622.601" Y="-1911.99" Z="60.05028" />
          <Vector3 X="-9639.895" Y="-1909.846" Z="57.98395" />
          <Vector3 X="-9657.359" Y="-1910.86" Z="57.03944" />
          <Vector3 X="-9674.822" Y="-1911.445" Z="56.76043" />
          <Vector3 X="-9691.185" Y="-1907.768" Z="57.26439" />
          <Vector3 X="-9705.12" Y="-1897.31" Z="53.25796" />
          <Vector3 X="-9716.806" Y="-1883.549" Z="50.02009" />
          <Vector3 X="-9727.324" Y="-1870.271" Z="47.95613" />
          <Vector3 X="-9738.732" Y="-1856.27" Z="44.91402" />
          <Vector3 X="-9749.831" Y="-1842.74" Z="41.12073" />
          <Vector3 X="-9761.371" Y="-1829.612" Z="37.01506" />
          <Vector3 X="-9775.436" Y="-1819.237" Z="32.65852" />
          <Vector3 X="-9790.356" Y="-1810.095" Z="28.62259" />
          <Vector3 X="-9805.728" Y="-1801.731" Z="25.74461" />
          <Vector3 X="-9820.996" Y="-1793.185" Z="23.65697" />
          <Vector3 X="-9834.138" Y="-1781.783" Z="23.13379" />
          <Vector3 X="-9843.933" Y="-1767.304" Z="22.70951" />
          <Vector3 X="-9852.672" Y="-1752.158" Z="22.40942" />
          <Vector3 X="-9862.09" Y="-1738.109" Z="23.20074" />
          <Vector3 X="-9875.465" Y="-1725.988" Z="23.36393" />
          <Vector3 X="-9889.984" Y="-1716.236" Z="26.04086" />
          <Vector3 X="-9904.754" Y="-1706.849" Z="25.55661" />
          <Vector3 X="-9919.523" Y="-1697.461" Z="22.8175" />
          <Vector3 X="-9933.211" Y="-1686.601" Z="23.63541" />
          <Vector3 X="-9945.173" Y="-1674.647" Z="24.71161" />
          <Vector3 X="-9959.971" Y="-1657.448" Z="26.03163" />
          <Vector3 X="-9973.45" Y="-1634.984" Z="26.91909" />
          <Vector3 X="-9986.705" Y="-1612.413" Z="27.5516" />
          <Vector3 X="-9999.572" Y="-1590.501" Z="26.71005" />
          <Vector3 X="-10013.12" Y="-1567.042" Z="26.84879" />
          <Vector3 X="-10028.79" Y="-1546.077" Z="28.29674" />
          <Vector3 X="-10046.57" Y="-1526.758" Z="28.37385" />
          <Vector3 X="-10063.33" Y="-1507.714" Z="28.58327" />
          <Vector3 X="-10076.92" Y="-1484.353" Z="28.88173" />
          <Vector3 X="-10082.64" Y="-1458.036" Z="28.55044" />
          <Vector3 X="-10083.57" Y="-1432.596" Z="29.00424" />
          <Vector3 X="-10083.04" Y="-1405.584" Z="28.89842" />
          <Vector3 X="-10079.92" Y="-1380.317" Z="29.79808" />
          <Vector3 X="-10079.99" Y="-1353.316" Z="30.96768" />
          <Vector3 X="-10080.73" Y="-1327.951" Z="31.6456" />
          <Vector3 X="-10083.97" Y="-1301.922" Z="31.93289" />
          <Vector3 X="-10088.28" Y="-1275.232" Z="31.36187" />
          <Vector3 X="-10095.07" Y="-1249.921" Z="29.12517" />
          <Vector3 X="-10105.02" Y="-1225.637" Z="27.1387" />
          <Vector3 X="-10117.15" Y="-1202.394" Z="25.86306" />
          <Vector3 X="-10130.32" Y="-1179.688" Z="25.88254" />
          <Vector3 X="-10146.33" Y="-1159.16" Z="24.51254" />
          <Vector3 X="-10168.92" Y="-1148.284" Z="24.97777" />
          <Vector3 X="-10195.07" Y="-1146.98" Z="23.65291" />
          <Vector3 X="-10221.04" Y="-1150.503" Z="22.64417" />
          <Vector3 X="-10247.67" Y="-1154.948" Z="21.50286" />
          <Vector3 X="-10273.1" Y="-1154.126" Z="22.52493" />
          <Vector3 X="-10298" Y="-1146.495" Z="23.16226" />
          <Vector3 X="-10319.56" Y="-1130.246" Z="21.71364" />
          <Vector3 X="-10342.56" Y="-1118.052" Z="21.41167" />
          <Vector3 X="-10368.55" Y="-1114.681" Z="21.01245" />
          <Vector3 X="-10393.7" Y="-1117.835" Z="22.51197" />
          <Vector3 X="-10414.66" Y="-1134.08" Z="23.97794" />
          <Vector3 X="-10427.67" Y="-1156.769" Z="27.1365" />
          <Vector3 X="-10446.88" Y="-1173.616" Z="27.80318" />
          <Vector3 X="-10471.71" Y="-1181.962" Z="27.78193" />
          <Vector3 X="-10496.93" Y="-1185.317" Z="27.91187" />
          <Vector3 X="-10523.1" Y="-1187.365" Z="28.15041" />
          <Vector3 X="-10545.25" Y="-1187.975" Z="27.82176" />
        </Path>
        <IsCompleteWhenAtLastPath>false</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(163)  || new Vector3(-10545.25f, -1187.975f, 27.82176f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Move to Field</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10504.64" Y="-1161.955" Z="28.09263" />
          <Vector3 X="-10515.39" Y="-1163.374" Z="28.09823" />
          <Vector3 X="-10525.77" Y="-1164.904" Z="27.4765" />
          <Vector3 X="-10532.28" Y="-1165.523" Z="28.10371" />
          <Vector3 X="-10537.82" Y="-1160.883" Z="28.08814" />
          <Vector3 X="-10542.3" Y="-1160.528" Z="28.08653" />
          <Vector3 X="-10551.6" Y="-1164.017" Z="27.77926" />
          <Vector3 X="-10553.63" Y="-1173.921" Z="27.88768" />
          <Vector3 X="-10547.21" Y="-1181.955" Z="27.93318" />
          <Vector3 X="-10537.64" Y="-1186.167" Z="28.00832" />
          <Vector3 X="-10527.31" Y="-1188.035" Z="28.03875" />
          <Vector3 X="-10516.88" Y="-1189.196" Z="28.00573" />
          <Vector3 X="-10506.64" Y="-1187.302" Z="28.02887" />
          <Vector3 X="-10496.72" Y="-1183.877" Z="27.92083" />
          <Vector3 X="-10480.93" Y="-1180.818" Z="27.66506" />
          <Vector3 X="-10470.56" Y="-1179.214" Z="27.53806" />
          <Vector3 X="-10460.25" Y="-1177.39" Z="27.43137" />
          <Vector3 X="-10450.28" Y="-1174.102" Z="27.8321" />
          <Vector3 X="-10440.85" Y="-1169.491" Z="27.85769" />
          <Vector3 X="-10436.08" Y="-1166.632" Z="27.9676" />
          <Vector3 X="-10432.19" Y="-1163.646" Z="27.64956" />
          <Vector3 X="-10426.17" Y="-1155.505" Z="26.84728" />
          <Vector3 X="-10420.39" Y="-1146.337" Z="25.93827" />
          <Vector3 X="-10414.75" Y="-1137.484" Z="27.51146" />
          <Vector3 X="-10409.1" Y="-1128.63" Z="24.4094" />
          <Vector3 X="-10400.7" Y="-1122.685" Z="22.62605" />
          <Vector3 X="-10391.15" Y="-1118.44" Z="22.39619" />
          <Vector3 X="-10381.1" Y="-1116.933" Z="21.34703" />
          <Vector3 X="-10370.3" Y="-1116.234" Z="21.11863" />
          <Vector3 X="-10359.8" Y="-1115.826" Z="21.22067" />
          <Vector3 X="-10349.33" Y="-1116.469" Z="21.44469" />
          <Vector3 X="-10338.93" Y="-1117.848" Z="21.62058" />
          <Vector3 X="-10328.53" Y="-1119.269" Z="21.63875" />
          <Vector3 X="-10319.25" Y="-1123.937" Z="21.76732" />
          <Vector3 X="-10309.67" Y="-1128.943" Z="20.79737" />
          <Vector3 X="-10299.47" Y="-1131.356" Z="20.20238" />
          <Vector3 X="-10288.99" Y="-1131.755" Z="20.22417" />
          <Vector3 X="-10278.49" Y="-1131.882" Z="20.93749" />
          <Vector3 X="-10268.32" Y="-1132.005" Z="22.26101" />
          <Vector3 X="-10257.85" Y="-1131.497" Z="26.6752" />
          <Vector3 X="-10247.54" Y="-1128.347" Z="28.22551" />
          <Vector3 X="-10239.62" Y="-1121.686" Z="31.27061" />
          <Vector3 X="-10234.98" Y="-1112.669" Z="32.17379" />
          <Vector3 X="-10231.7" Y="-1102.358" Z="35.37268" />
          <Vector3 X="-10229.12" Y="-1092.178" Z="38.82475" />
          <Vector3 X="-10225.96" Y="-1082.17" Z="39.45319" />
          <Vector3 X="-10222.13" Y="-1072.757" Z="39.34062" />
          <Vector3 X="-10217.94" Y="-1062.763" Z="34.60699" />
          <Vector3 X="-10214.01" Y="-1053.391" Z="30.39353" />
          <Vector3 X="-10210.14" Y="-1043.99" Z="29.02256" />
          <Vector3 X="-10207.33" Y="-1032.86" Z="30.58946" />
          <Vector3 X="-10204.13" Y="-1022.948" Z="29.54364" />
          <Vector3 X="-10198.26" Y="-1014.292" Z="28.61389" />
          <Vector3 X="-10190.34" Y="-1007.996" Z="30.31488" />
          <Vector3 X="-10181.04" Y="-1002.43" Z="30.82059" />
          <Vector3 X="-10172.69" Y="-996.1066" Z="30.16928" />
          <Vector3 X="-10165.9" Y="-988.5526" Z="30.60951" />
          <Vector3 X="-10161.17" Y="-980.3312" Z="31.79334" />
          <Vector3 X="-10155.56" Y="-967.7281" Z="31.08282" />
          <Vector3 X="-10151.56" Y="-958.0192" Z="30.75801" />
          <Vector3 X="-10148.93" Y="-947.8562" Z="30.8875" />
          <Vector3 X="-10146.66" Y="-937.6055" Z="31.83861" />
          <Vector3 X="-10145.25" Y="-927.2164" Z="32.2407" />
          <Vector3 X="-10144.05" Y="-916.791" Z="33.31075" />
          <Vector3 X="-10142.19" Y="-906.8038" Z="34.3936" />
          <Vector3 X="-10139.04" Y="-896.7889" Z="34.70048" />
          <Vector3 X="-10135.55" Y="-886.8936" Z="35.11244" />
          <Vector3 X="-10131.64" Y="-876.7896" Z="35.2589" />
          <Vector3 X="-10128.23" Y="-866.8615" Z="35.06204" />
          <Vector3 X="-10123.98" Y="-857.2661" Z="35.39153" />
          <Vector3 X="-10119.61" Y="-847.7235" Z="34.62699" />
          <Vector3 X="-10116.48" Y="-837.7005" Z="33.77819" />
          <Vector3 X="-10113.21" Y="-827.7411" Z="33.87316" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(93)  || new Vector3(-10113.21f, -827.7411f, 33.87316f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ogre Thieves</Name>
      <QuestId>
        <int>134</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots />
        <EntryIdObjects />
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Path Middle to Raven Hill</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10904.6" Y="-380.1357" Z="40.19611" />
          <Vector3 X="-10895.01" Y="-358.3744" Z="38.98454" />
          <Vector3 X="-10884.85" Y="-334.1698" Z="38.07323" />
          <Vector3 X="-10875.05" Y="-309.8662" Z="38.12055" />
          <Vector3 X="-10865.53" Y="-285.4156" Z="38.14671" />
          <Vector3 X="-10858.29" Y="-260.2105" Z="38.07625" />
          <Vector3 X="-10852.35" Y="-234.6422" Z="38.66305" />
          <Vector3 X="-10846.47" Y="-209.059" Z="36.9872" />
          <Vector3 X="-10840.59" Y="-183.4758" Z="34.10884" />
          <Vector3 X="-10834.7" Y="-157.8967" Z="32.77956" />
          <Vector3 X="-10827.38" Y="-133.515" Z="31.76034" />
          <Vector3 X="-10817.94" Y="-108.1797" Z="29.83602" />
          <Vector3 X="-10808.66" Y="-83.65835" Z="29.35013" />
          <Vector3 X="-10799.36" Y="-59.10886" Z="29.20654" />
          <Vector3 X="-10791.96" Y="-33.93187" Z="29.62009" />
          <Vector3 X="-10785" Y="-9.504105" Z="30.12879" />
          <Vector3 X="-10776.34" Y="15.26517" Z="29.41609" />
          <Vector3 X="-10766.26" Y="40.35526" Z="28.53294" />
          <Vector3 X="-10758.19" Y="65.23313" Z="28.78077" />
          <Vector3 X="-10754.21" Y="91.15017" Z="28.61414" />
          <Vector3 X="-10752.4" Y="117.3076" Z="28.67438" />
          <Vector3 X="-10759.26" Y="142.4474" Z="29.35497" />
          <Vector3 X="-10770.65" Y="166.0961" Z="29.51506" />
          <Vector3 X="-10782.41" Y="190.4994" Z="30.45348" />
          <Vector3 X="-10792.03" Y="213.9865" Z="30.6104" />
          <Vector3 X="-10797.87" Y="240.3845" Z="30.51144" />
          <Vector3 X="-10801.45" Y="265.5397" Z="30.50543" />
          <Vector3 X="-10803.51" Y="291.6466" Z="31.08297" />
          <Vector3 X="-10788.94" Y="311.2574" Z="33.95369" />
          <Vector3 X="-10775.86" Y="310.9075" Z="35.82217" />
          <Vector3 X="-10762.91" Y="317.724" Z="36.86159" />
          <Vector3 X="-10757.43" Y="321.3268" Z="37.26357" />
          <Vector3 X="-10736.37" Y="335.5949" Z="38.40137" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(163)  || new Vector3(-10736.37f, 335.5949f, 38.40137f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Path Middle to Raven Hill2</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10904.6" Y="-380.1357" Z="40.19611" />
          <Vector3 X="-10895.01" Y="-358.3744" Z="38.98454" />
          <Vector3 X="-10884.85" Y="-334.1698" Z="38.07323" />
          <Vector3 X="-10875.05" Y="-309.8662" Z="38.12055" />
          <Vector3 X="-10865.53" Y="-285.4156" Z="38.14671" />
          <Vector3 X="-10858.29" Y="-260.2105" Z="38.07625" />
          <Vector3 X="-10852.35" Y="-234.6422" Z="38.66305" />
          <Vector3 X="-10846.47" Y="-209.059" Z="36.9872" />
          <Vector3 X="-10840.59" Y="-183.4758" Z="34.10884" />
          <Vector3 X="-10834.7" Y="-157.8967" Z="32.77956" />
          <Vector3 X="-10827.38" Y="-133.515" Z="31.76034" />
          <Vector3 X="-10817.94" Y="-108.1797" Z="29.83602" />
          <Vector3 X="-10808.66" Y="-83.65835" Z="29.35013" />
          <Vector3 X="-10799.36" Y="-59.10886" Z="29.20654" />
          <Vector3 X="-10791.96" Y="-33.93187" Z="29.62009" />
          <Vector3 X="-10785" Y="-9.504105" Z="30.12879" />
          <Vector3 X="-10776.34" Y="15.26517" Z="29.41609" />
          <Vector3 X="-10766.26" Y="40.35526" Z="28.53294" />
          <Vector3 X="-10758.19" Y="65.23313" Z="28.78077" />
          <Vector3 X="-10754.21" Y="91.15017" Z="28.61414" />
          <Vector3 X="-10752.4" Y="117.3076" Z="28.67438" />
          <Vector3 X="-10759.26" Y="142.4474" Z="29.35497" />
          <Vector3 X="-10770.65" Y="166.0961" Z="29.51506" />
          <Vector3 X="-10782.41" Y="190.4994" Z="30.45348" />
          <Vector3 X="-10792.03" Y="213.9865" Z="30.6104" />
          <Vector3 X="-10797.87" Y="240.3845" Z="30.51144" />
          <Vector3 X="-10801.45" Y="265.5397" Z="30.50543" />
          <Vector3 X="-10803.51" Y="291.6466" Z="31.08297" />
          <Vector3 X="-10788.94" Y="311.2574" Z="33.95369" />
          <Vector3 X="-10775.86" Y="310.9075" Z="35.82217" />
          <Vector3 X="-10762.91" Y="317.724" Z="36.86159" />
          <Vector3 X="-10757.43" Y="321.3268" Z="37.26357" />
          <Vector3 X="-10736.37" Y="335.5949" Z="38.40137" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(240)  || new Vector3(-10736.37f, 335.5949f, 38.40137f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Path Middle to Raven Hill3</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10904.6" Y="-380.1357" Z="40.19611" />
          <Vector3 X="-10895.01" Y="-358.3744" Z="38.98454" />
          <Vector3 X="-10884.85" Y="-334.1698" Z="38.07323" />
          <Vector3 X="-10875.05" Y="-309.8662" Z="38.12055" />
          <Vector3 X="-10865.53" Y="-285.4156" Z="38.14671" />
          <Vector3 X="-10858.29" Y="-260.2105" Z="38.07625" />
          <Vector3 X="-10852.35" Y="-234.6422" Z="38.66305" />
          <Vector3 X="-10846.47" Y="-209.059" Z="36.9872" />
          <Vector3 X="-10840.59" Y="-183.4758" Z="34.10884" />
          <Vector3 X="-10834.7" Y="-157.8967" Z="32.77956" />
          <Vector3 X="-10827.38" Y="-133.515" Z="31.76034" />
          <Vector3 X="-10817.94" Y="-108.1797" Z="29.83602" />
          <Vector3 X="-10808.66" Y="-83.65835" Z="29.35013" />
          <Vector3 X="-10799.36" Y="-59.10886" Z="29.20654" />
          <Vector3 X="-10791.96" Y="-33.93187" Z="29.62009" />
          <Vector3 X="-10785" Y="-9.504105" Z="30.12879" />
          <Vector3 X="-10776.34" Y="15.26517" Z="29.41609" />
          <Vector3 X="-10766.26" Y="40.35526" Z="28.53294" />
          <Vector3 X="-10758.19" Y="65.23313" Z="28.78077" />
          <Vector3 X="-10754.21" Y="91.15017" Z="28.61414" />
          <Vector3 X="-10752.4" Y="117.3076" Z="28.67438" />
          <Vector3 X="-10759.26" Y="142.4474" Z="29.35497" />
          <Vector3 X="-10770.65" Y="166.0961" Z="29.51506" />
          <Vector3 X="-10782.41" Y="190.4994" Z="30.45348" />
          <Vector3 X="-10792.03" Y="213.9865" Z="30.6104" />
          <Vector3 X="-10797.87" Y="240.3845" Z="30.51144" />
          <Vector3 X="-10801.45" Y="265.5397" Z="30.50543" />
          <Vector3 X="-10803.51" Y="291.6466" Z="31.08297" />
          <Vector3 X="-10788.94" Y="311.2574" Z="33.95369" />
          <Vector3 X="-10775.86" Y="310.9075" Z="35.82217" />
          <Vector3 X="-10762.91" Y="317.724" Z="36.86159" />
          <Vector3 X="-10757.43" Y="321.3268" Z="37.26357" />
          <Vector3 X="-10736.37" Y="335.5949" Z="38.40137" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(159)  || new Vector3(-10736.37f, 335.5949f, 38.40137f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Path Middle to Raven Hill4</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10904.6" Y="-380.1357" Z="40.19611" />
          <Vector3 X="-10895.01" Y="-358.3744" Z="38.98454" />
          <Vector3 X="-10884.85" Y="-334.1698" Z="38.07323" />
          <Vector3 X="-10875.05" Y="-309.8662" Z="38.12055" />
          <Vector3 X="-10865.53" Y="-285.4156" Z="38.14671" />
          <Vector3 X="-10858.29" Y="-260.2105" Z="38.07625" />
          <Vector3 X="-10852.35" Y="-234.6422" Z="38.66305" />
          <Vector3 X="-10846.47" Y="-209.059" Z="36.9872" />
          <Vector3 X="-10840.59" Y="-183.4758" Z="34.10884" />
          <Vector3 X="-10834.7" Y="-157.8967" Z="32.77956" />
          <Vector3 X="-10827.38" Y="-133.515" Z="31.76034" />
          <Vector3 X="-10817.94" Y="-108.1797" Z="29.83602" />
          <Vector3 X="-10808.66" Y="-83.65835" Z="29.35013" />
          <Vector3 X="-10799.36" Y="-59.10886" Z="29.20654" />
          <Vector3 X="-10791.96" Y="-33.93187" Z="29.62009" />
          <Vector3 X="-10785" Y="-9.504105" Z="30.12879" />
          <Vector3 X="-10776.34" Y="15.26517" Z="29.41609" />
          <Vector3 X="-10766.26" Y="40.35526" Z="28.53294" />
          <Vector3 X="-10758.19" Y="65.23313" Z="28.78077" />
          <Vector3 X="-10754.21" Y="91.15017" Z="28.61414" />
          <Vector3 X="-10752.4" Y="117.3076" Z="28.67438" />
          <Vector3 X="-10759.26" Y="142.4474" Z="29.35497" />
          <Vector3 X="-10770.65" Y="166.0961" Z="29.51506" />
          <Vector3 X="-10782.41" Y="190.4994" Z="30.45348" />
          <Vector3 X="-10792.03" Y="213.9865" Z="30.6104" />
          <Vector3 X="-10797.87" Y="240.3845" Z="30.51144" />
          <Vector3 X="-10801.45" Y="265.5397" Z="30.50543" />
          <Vector3 X="-10803.51" Y="291.6466" Z="31.08297" />
          <Vector3 X="-10788.94" Y="311.2574" Z="33.95369" />
          <Vector3 X="-10775.86" Y="310.9075" Z="35.82217" />
          <Vector3 X="-10762.91" Y="317.724" Z="36.86159" />
          <Vector3 X="-10757.43" Y="321.3268" Z="37.26357" />
          <Vector3 X="-10736.37" Y="335.5949" Z="38.40137" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(159)  || new Vector3(-10736.37f, 335.5949f, 38.40137f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Path Middle to Raven Hill5</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10904.6" Y="-380.1357" Z="40.19611" />
          <Vector3 X="-10895.01" Y="-358.3744" Z="38.98454" />
          <Vector3 X="-10884.85" Y="-334.1698" Z="38.07323" />
          <Vector3 X="-10875.05" Y="-309.8662" Z="38.12055" />
          <Vector3 X="-10865.53" Y="-285.4156" Z="38.14671" />
          <Vector3 X="-10858.29" Y="-260.2105" Z="38.07625" />
          <Vector3 X="-10852.35" Y="-234.6422" Z="38.66305" />
          <Vector3 X="-10846.47" Y="-209.059" Z="36.9872" />
          <Vector3 X="-10840.59" Y="-183.4758" Z="34.10884" />
          <Vector3 X="-10834.7" Y="-157.8967" Z="32.77956" />
          <Vector3 X="-10827.38" Y="-133.515" Z="31.76034" />
          <Vector3 X="-10817.94" Y="-108.1797" Z="29.83602" />
          <Vector3 X="-10808.66" Y="-83.65835" Z="29.35013" />
          <Vector3 X="-10799.36" Y="-59.10886" Z="29.20654" />
          <Vector3 X="-10791.96" Y="-33.93187" Z="29.62009" />
          <Vector3 X="-10785" Y="-9.504105" Z="30.12879" />
          <Vector3 X="-10776.34" Y="15.26517" Z="29.41609" />
          <Vector3 X="-10766.26" Y="40.35526" Z="28.53294" />
          <Vector3 X="-10758.19" Y="65.23313" Z="28.78077" />
          <Vector3 X="-10754.21" Y="91.15017" Z="28.61414" />
          <Vector3 X="-10752.4" Y="117.3076" Z="28.67438" />
          <Vector3 X="-10759.26" Y="142.4474" Z="29.35497" />
          <Vector3 X="-10770.65" Y="166.0961" Z="29.51506" />
          <Vector3 X="-10782.41" Y="190.4994" Z="30.45348" />
          <Vector3 X="-10792.03" Y="213.9865" Z="30.6104" />
          <Vector3 X="-10797.87" Y="240.3845" Z="30.51144" />
          <Vector3 X="-10801.45" Y="265.5397" Z="30.50543" />
          <Vector3 X="-10803.51" Y="291.6466" Z="31.08297" />
          <Vector3 X="-10788.94" Y="311.2574" Z="33.95369" />
          <Vector3 X="-10775.86" Y="310.9075" Z="35.82217" />
          <Vector3 X="-10762.91" Y="317.724" Z="36.86159" />
          <Vector3 X="-10757.43" Y="321.3268" Z="37.26357" />
          <Vector3 X="-10736.37" Y="335.5949" Z="38.40137" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(133)  || new Vector3(-10736.37f, 335.5949f, 38.40137f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Path to Middle Duskwood</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10592.95" Y="-1178.96" Z="28.2491" />
          <Vector3 X="-10606.41" Y="-1181.249" Z="28.26757" />
          <Vector3 X="-10622.93" Y="-1185.108" Z="28.84669" />
          <Vector3 X="-10639.93" Y="-1189.257" Z="28.67529" />
          <Vector3 X="-10657.63" Y="-1192.375" Z="28.47659" />
          <Vector3 X="-10674.97" Y="-1190.486" Z="27.57687" />
          <Vector3 X="-10691.47" Y="-1184.716" Z="27.03143" />
          <Vector3 X="-10706.92" Y="-1177.705" Z="26.39936" />
          <Vector3 X="-10722.68" Y="-1169.039" Z="26.45262" />
          <Vector3 X="-10737.06" Y="-1159.091" Z="26.47879" />
          <Vector3 X="-10750.17" Y="-1148.354" Z="26.8428" />
          <Vector3 X="-10763.04" Y="-1135.745" Z="27.17667" />
          <Vector3 X="-10773.1" Y="-1121.454" Z="29.06353" />
          <Vector3 X="-10780.5" Y="-1105.653" Z="31.68522" />
          <Vector3 X="-10786.42" Y="-1089.185" Z="34.73066" />
          <Vector3 X="-10791.4" Y="-1072.963" Z="38.05593" />
          <Vector3 X="-10796.3" Y="-1055.632" Z="42.22598" />
          <Vector3 X="-10801.06" Y="-1038.816" Z="45.53092" />
          <Vector3 X="-10805.41" Y="-1021.87" Z="48.68121" />
          <Vector3 X="-10807.59" Y="-1005.071" Z="51.82121" />
          <Vector3 X="-10808.58" Y="-987.0731" Z="54.72087" />
          <Vector3 X="-10806.6" Y="-969.8024" Z="56.25114" />
          <Vector3 X="-10802.44" Y="-952.8044" Z="56.5622" />
          <Vector3 X="-10798.28" Y="-935.8085" Z="56.30567" />
          <Vector3 X="-10797.38" Y="-918.3882" Z="55.80106" />
          <Vector3 X="-10800.32" Y="-901.1508" Z="56.03901" />
          <Vector3 X="-10804.74" Y="-884.2267" Z="55.80543" />
          <Vector3 X="-10811.14" Y="-868.5089" Z="55.93056" />
          <Vector3 X="-10818.08" Y="-851.8716" Z="55.81648" />
          <Vector3 X="-10825.19" Y="-836.4658" Z="55.79665" />
          <Vector3 X="-10833.38" Y="-820.4078" Z="56.21247" />
          <Vector3 X="-10841.37" Y="-804.84" Z="56.33952" />
          <Vector3 X="-10851.36" Y="-790.5223" Z="56.17343" />
          <Vector3 X="-10862.17" Y="-777.4367" Z="56.10011" />
          <Vector3 X="-10874.24" Y="-764.0463" Z="55.42399" />
          <Vector3 X="-10886.01" Y="-751.0958" Z="55.49485" />
          <Vector3 X="-10897.79" Y="-738.1506" Z="55.28736" />
          <Vector3 X="-10909.46" Y="-725.1151" Z="54.74832" />
          <Vector3 X="-10919.17" Y="-710.6029" Z="55.83227" />
          <Vector3 X="-10926.68" Y="-694.7997" Z="55.6493" />
          <Vector3 X="-10934.16" Y="-678.9821" Z="55.53809" />
          <Vector3 X="-10943.9" Y="-664.4836" Z="55.61161" />
          <Vector3 X="-10953.88" Y="-650.7513" Z="55.42632" />
          <Vector3 X="-10958.49" Y="-638.0215" Z="55.19342" />
          <Vector3 X="-10957" Y="-620.6431" Z="55.06496" />
          <Vector3 X="-10952.39" Y="-603.7912" Z="55.277" />
          <Vector3 X="-10944.19" Y="-588.9519" Z="54.38098" />
          <Vector3 X="-10934.43" Y="-573.7978" Z="53.7536" />
          <Vector3 X="-10925.59" Y="-558.7227" Z="53.94788" />
          <Vector3 X="-10920.03" Y="-542.1355" Z="53.98765" />
          <Vector3 X="-10915.05" Y="-525.3698" Z="53.80636" />
          <Vector3 X="-10913.06" Y="-507.9874" Z="51.77775" />
          <Vector3 X="-10911.24" Y="-490.5823" Z="50.22089" />
          <Vector3 X="-10909.42" Y="-473.1766" Z="47.84802" />
          <Vector3 X="-10908.45" Y="-455.7081" Z="45.53175" />
          <Vector3 X="-10908.89" Y="-438.2137" Z="42.567" />
          <Vector3 X="-10909.18" Y="-420.7163" Z="42.22189" />
          <Vector3 X="-10909.39" Y="-403.2176" Z="41.28282" />
        </Path>
        <IsCompleteWhenAtLastPath>false</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(163)  || new Vector3(-10909.39f, -403.2176f, 41.28282f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Path to Middle Duskwood2</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10592.95" Y="-1178.96" Z="28.2491" />
          <Vector3 X="-10606.41" Y="-1181.249" Z="28.26757" />
          <Vector3 X="-10622.93" Y="-1185.108" Z="28.84669" />
          <Vector3 X="-10639.93" Y="-1189.257" Z="28.67529" />
          <Vector3 X="-10657.63" Y="-1192.375" Z="28.47659" />
          <Vector3 X="-10674.97" Y="-1190.486" Z="27.57687" />
          <Vector3 X="-10691.47" Y="-1184.716" Z="27.03143" />
          <Vector3 X="-10706.92" Y="-1177.705" Z="26.39936" />
          <Vector3 X="-10722.68" Y="-1169.039" Z="26.45262" />
          <Vector3 X="-10737.06" Y="-1159.091" Z="26.47879" />
          <Vector3 X="-10750.17" Y="-1148.354" Z="26.8428" />
          <Vector3 X="-10763.04" Y="-1135.745" Z="27.17667" />
          <Vector3 X="-10773.1" Y="-1121.454" Z="29.06353" />
          <Vector3 X="-10780.5" Y="-1105.653" Z="31.68522" />
          <Vector3 X="-10786.42" Y="-1089.185" Z="34.73066" />
          <Vector3 X="-10791.4" Y="-1072.963" Z="38.05593" />
          <Vector3 X="-10796.3" Y="-1055.632" Z="42.22598" />
          <Vector3 X="-10801.06" Y="-1038.816" Z="45.53092" />
          <Vector3 X="-10805.41" Y="-1021.87" Z="48.68121" />
          <Vector3 X="-10807.59" Y="-1005.071" Z="51.82121" />
          <Vector3 X="-10808.58" Y="-987.0731" Z="54.72087" />
          <Vector3 X="-10806.6" Y="-969.8024" Z="56.25114" />
          <Vector3 X="-10802.44" Y="-952.8044" Z="56.5622" />
          <Vector3 X="-10798.28" Y="-935.8085" Z="56.30567" />
          <Vector3 X="-10797.38" Y="-918.3882" Z="55.80106" />
          <Vector3 X="-10800.32" Y="-901.1508" Z="56.03901" />
          <Vector3 X="-10804.74" Y="-884.2267" Z="55.80543" />
          <Vector3 X="-10811.14" Y="-868.5089" Z="55.93056" />
          <Vector3 X="-10818.08" Y="-851.8716" Z="55.81648" />
          <Vector3 X="-10825.19" Y="-836.4658" Z="55.79665" />
          <Vector3 X="-10833.38" Y="-820.4078" Z="56.21247" />
          <Vector3 X="-10841.37" Y="-804.84" Z="56.33952" />
          <Vector3 X="-10851.36" Y="-790.5223" Z="56.17343" />
          <Vector3 X="-10862.17" Y="-777.4367" Z="56.10011" />
          <Vector3 X="-10874.24" Y="-764.0463" Z="55.42399" />
          <Vector3 X="-10886.01" Y="-751.0958" Z="55.49485" />
          <Vector3 X="-10897.79" Y="-738.1506" Z="55.28736" />
          <Vector3 X="-10909.46" Y="-725.1151" Z="54.74832" />
          <Vector3 X="-10919.17" Y="-710.6029" Z="55.83227" />
          <Vector3 X="-10926.68" Y="-694.7997" Z="55.6493" />
          <Vector3 X="-10934.16" Y="-678.9821" Z="55.53809" />
          <Vector3 X="-10943.9" Y="-664.4836" Z="55.61161" />
          <Vector3 X="-10953.88" Y="-650.7513" Z="55.42632" />
          <Vector3 X="-10958.49" Y="-638.0215" Z="55.19342" />
          <Vector3 X="-10957" Y="-620.6431" Z="55.06496" />
          <Vector3 X="-10952.39" Y="-603.7912" Z="55.277" />
          <Vector3 X="-10944.19" Y="-588.9519" Z="54.38098" />
          <Vector3 X="-10934.43" Y="-573.7978" Z="53.7536" />
          <Vector3 X="-10925.59" Y="-558.7227" Z="53.94788" />
          <Vector3 X="-10920.03" Y="-542.1355" Z="53.98765" />
          <Vector3 X="-10915.05" Y="-525.3698" Z="53.80636" />
          <Vector3 X="-10913.06" Y="-507.9874" Z="51.77775" />
          <Vector3 X="-10911.24" Y="-490.5823" Z="50.22089" />
          <Vector3 X="-10909.42" Y="-473.1766" Z="47.84802" />
          <Vector3 X="-10908.45" Y="-455.7081" Z="45.53175" />
          <Vector3 X="-10908.89" Y="-438.2137" Z="42.567" />
          <Vector3 X="-10909.18" Y="-420.7163" Z="42.22189" />
          <Vector3 X="-10909.39" Y="-403.2176" Z="41.28282" />
        </Path>
        <IsCompleteWhenAtLastPath>false</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(245)  || new Vector3(-10909.39f, -403.2176f, 41.28282f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Path to Middle Duskwood3</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10592.95" Y="-1178.96" Z="28.2491" />
          <Vector3 X="-10606.41" Y="-1181.249" Z="28.26757" />
          <Vector3 X="-10622.93" Y="-1185.108" Z="28.84669" />
          <Vector3 X="-10639.93" Y="-1189.257" Z="28.67529" />
          <Vector3 X="-10657.63" Y="-1192.375" Z="28.47659" />
          <Vector3 X="-10674.97" Y="-1190.486" Z="27.57687" />
          <Vector3 X="-10691.47" Y="-1184.716" Z="27.03143" />
          <Vector3 X="-10706.92" Y="-1177.705" Z="26.39936" />
          <Vector3 X="-10722.68" Y="-1169.039" Z="26.45262" />
          <Vector3 X="-10737.06" Y="-1159.091" Z="26.47879" />
          <Vector3 X="-10750.17" Y="-1148.354" Z="26.8428" />
          <Vector3 X="-10763.04" Y="-1135.745" Z="27.17667" />
          <Vector3 X="-10773.1" Y="-1121.454" Z="29.06353" />
          <Vector3 X="-10780.5" Y="-1105.653" Z="31.68522" />
          <Vector3 X="-10786.42" Y="-1089.185" Z="34.73066" />
          <Vector3 X="-10791.4" Y="-1072.963" Z="38.05593" />
          <Vector3 X="-10796.3" Y="-1055.632" Z="42.22598" />
          <Vector3 X="-10801.06" Y="-1038.816" Z="45.53092" />
          <Vector3 X="-10805.41" Y="-1021.87" Z="48.68121" />
          <Vector3 X="-10807.59" Y="-1005.071" Z="51.82121" />
          <Vector3 X="-10808.58" Y="-987.0731" Z="54.72087" />
          <Vector3 X="-10806.6" Y="-969.8024" Z="56.25114" />
          <Vector3 X="-10802.44" Y="-952.8044" Z="56.5622" />
          <Vector3 X="-10798.28" Y="-935.8085" Z="56.30567" />
          <Vector3 X="-10797.38" Y="-918.3882" Z="55.80106" />
          <Vector3 X="-10800.32" Y="-901.1508" Z="56.03901" />
          <Vector3 X="-10804.74" Y="-884.2267" Z="55.80543" />
          <Vector3 X="-10811.14" Y="-868.5089" Z="55.93056" />
          <Vector3 X="-10818.08" Y="-851.8716" Z="55.81648" />
          <Vector3 X="-10825.19" Y="-836.4658" Z="55.79665" />
          <Vector3 X="-10833.38" Y="-820.4078" Z="56.21247" />
          <Vector3 X="-10841.37" Y="-804.84" Z="56.33952" />
          <Vector3 X="-10851.36" Y="-790.5223" Z="56.17343" />
          <Vector3 X="-10862.17" Y="-777.4367" Z="56.10011" />
          <Vector3 X="-10874.24" Y="-764.0463" Z="55.42399" />
          <Vector3 X="-10886.01" Y="-751.0958" Z="55.49485" />
          <Vector3 X="-10897.79" Y="-738.1506" Z="55.28736" />
          <Vector3 X="-10909.46" Y="-725.1151" Z="54.74832" />
          <Vector3 X="-10919.17" Y="-710.6029" Z="55.83227" />
          <Vector3 X="-10926.68" Y="-694.7997" Z="55.6493" />
          <Vector3 X="-10934.16" Y="-678.9821" Z="55.53809" />
          <Vector3 X="-10943.9" Y="-664.4836" Z="55.61161" />
          <Vector3 X="-10953.88" Y="-650.7513" Z="55.42632" />
          <Vector3 X="-10958.49" Y="-638.0215" Z="55.19342" />
          <Vector3 X="-10957" Y="-620.6431" Z="55.06496" />
          <Vector3 X="-10952.39" Y="-603.7912" Z="55.277" />
          <Vector3 X="-10944.19" Y="-588.9519" Z="54.38098" />
          <Vector3 X="-10934.43" Y="-573.7978" Z="53.7536" />
          <Vector3 X="-10925.59" Y="-558.7227" Z="53.94788" />
          <Vector3 X="-10920.03" Y="-542.1355" Z="53.98765" />
          <Vector3 X="-10915.05" Y="-525.3698" Z="53.80636" />
          <Vector3 X="-10913.06" Y="-507.9874" Z="51.77775" />
          <Vector3 X="-10911.24" Y="-490.5823" Z="50.22089" />
          <Vector3 X="-10909.42" Y="-473.1766" Z="47.84802" />
          <Vector3 X="-10908.45" Y="-455.7081" Z="45.53175" />
          <Vector3 X="-10908.89" Y="-438.2137" Z="42.567" />
          <Vector3 X="-10909.18" Y="-420.7163" Z="42.22189" />
          <Vector3 X="-10909.39" Y="-403.2176" Z="41.28282" />
        </Path>
        <IsCompleteWhenAtLastPath>false</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(159)  || new Vector3(-10909.39f, -403.2176f, 41.28282f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Path to Middle Duskwood4</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10592.95" Y="-1178.96" Z="28.2491" />
          <Vector3 X="-10606.41" Y="-1181.249" Z="28.26757" />
          <Vector3 X="-10622.93" Y="-1185.108" Z="28.84669" />
          <Vector3 X="-10639.93" Y="-1189.257" Z="28.67529" />
          <Vector3 X="-10657.63" Y="-1192.375" Z="28.47659" />
          <Vector3 X="-10674.97" Y="-1190.486" Z="27.57687" />
          <Vector3 X="-10691.47" Y="-1184.716" Z="27.03143" />
          <Vector3 X="-10706.92" Y="-1177.705" Z="26.39936" />
          <Vector3 X="-10722.68" Y="-1169.039" Z="26.45262" />
          <Vector3 X="-10737.06" Y="-1159.091" Z="26.47879" />
          <Vector3 X="-10750.17" Y="-1148.354" Z="26.8428" />
          <Vector3 X="-10763.04" Y="-1135.745" Z="27.17667" />
          <Vector3 X="-10773.1" Y="-1121.454" Z="29.06353" />
          <Vector3 X="-10780.5" Y="-1105.653" Z="31.68522" />
          <Vector3 X="-10786.42" Y="-1089.185" Z="34.73066" />
          <Vector3 X="-10791.4" Y="-1072.963" Z="38.05593" />
          <Vector3 X="-10796.3" Y="-1055.632" Z="42.22598" />
          <Vector3 X="-10801.06" Y="-1038.816" Z="45.53092" />
          <Vector3 X="-10805.41" Y="-1021.87" Z="48.68121" />
          <Vector3 X="-10807.59" Y="-1005.071" Z="51.82121" />
          <Vector3 X="-10808.58" Y="-987.0731" Z="54.72087" />
          <Vector3 X="-10806.6" Y="-969.8024" Z="56.25114" />
          <Vector3 X="-10802.44" Y="-952.8044" Z="56.5622" />
          <Vector3 X="-10798.28" Y="-935.8085" Z="56.30567" />
          <Vector3 X="-10797.38" Y="-918.3882" Z="55.80106" />
          <Vector3 X="-10800.32" Y="-901.1508" Z="56.03901" />
          <Vector3 X="-10804.74" Y="-884.2267" Z="55.80543" />
          <Vector3 X="-10811.14" Y="-868.5089" Z="55.93056" />
          <Vector3 X="-10818.08" Y="-851.8716" Z="55.81648" />
          <Vector3 X="-10825.19" Y="-836.4658" Z="55.79665" />
          <Vector3 X="-10833.38" Y="-820.4078" Z="56.21247" />
          <Vector3 X="-10841.37" Y="-804.84" Z="56.33952" />
          <Vector3 X="-10851.36" Y="-790.5223" Z="56.17343" />
          <Vector3 X="-10862.17" Y="-777.4367" Z="56.10011" />
          <Vector3 X="-10874.24" Y="-764.0463" Z="55.42399" />
          <Vector3 X="-10886.01" Y="-751.0958" Z="55.49485" />
          <Vector3 X="-10897.79" Y="-738.1506" Z="55.28736" />
          <Vector3 X="-10909.46" Y="-725.1151" Z="54.74832" />
          <Vector3 X="-10919.17" Y="-710.6029" Z="55.83227" />
          <Vector3 X="-10926.68" Y="-694.7997" Z="55.6493" />
          <Vector3 X="-10934.16" Y="-678.9821" Z="55.53809" />
          <Vector3 X="-10943.9" Y="-664.4836" Z="55.61161" />
          <Vector3 X="-10953.88" Y="-650.7513" Z="55.42632" />
          <Vector3 X="-10958.49" Y="-638.0215" Z="55.19342" />
          <Vector3 X="-10957" Y="-620.6431" Z="55.06496" />
          <Vector3 X="-10952.39" Y="-603.7912" Z="55.277" />
          <Vector3 X="-10944.19" Y="-588.9519" Z="54.38098" />
          <Vector3 X="-10934.43" Y="-573.7978" Z="53.7536" />
          <Vector3 X="-10925.59" Y="-558.7227" Z="53.94788" />
          <Vector3 X="-10920.03" Y="-542.1355" Z="53.98765" />
          <Vector3 X="-10915.05" Y="-525.3698" Z="53.80636" />
          <Vector3 X="-10913.06" Y="-507.9874" Z="51.77775" />
          <Vector3 X="-10911.24" Y="-490.5823" Z="50.22089" />
          <Vector3 X="-10909.42" Y="-473.1766" Z="47.84802" />
          <Vector3 X="-10908.45" Y="-455.7081" Z="45.53175" />
          <Vector3 X="-10908.89" Y="-438.2137" Z="42.567" />
          <Vector3 X="-10909.18" Y="-420.7163" Z="42.22189" />
          <Vector3 X="-10909.39" Y="-403.2176" Z="41.28282" />
        </Path>
        <IsCompleteWhenAtLastPath>false</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(133)  || new Vector3(-10909.39f, -403.2176f, 41.28282f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Raven Hill</Name>
      <QuestId>
        <int>163</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Ravenhill to Middle</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10845.45" Y="513.332" Z="30.22545" />
          <Vector3 X="-10842.49" Y="505.0999" Z="30.1574" />
          <Vector3 X="-10830.63" Y="470.9861" Z="29.73648" />
          <Vector3 X="-10822.14" Y="435.9852" Z="29.37711" />
          <Vector3 X="-10817.7" Y="401.3066" Z="29.41542" />
          <Vector3 X="-10815.22" Y="367.4652" Z="29.72652" />
          <Vector3 X="-10813.11" Y="331.4843" Z="30.17264" />
          <Vector3 X="-10807.42" Y="297.0383" Z="31.133" />
          <Vector3 X="-10800.45" Y="262.7994" Z="30.48899" />
          <Vector3 X="-10797.34" Y="247.7872" Z="30.51028" />
          <Vector3 X="-10794.9" Y="235.9967" Z="30.48581" />
          <Vector3 X="-10787.47" Y="207.4193" Z="30.56159" />
          <Vector3 X="-10774.11" Y="175.1336" Z="29.63021" />
          <Vector3 X="-10758.85" Y="143.6419" Z="29.37423" />
          <Vector3 X="-10750.09" Y="110.9917" Z="28.49333" />
          <Vector3 X="-10751.31" Y="75.17834" Z="28.35792" />
          <Vector3 X="-10764.27" Y="42.75552" Z="28.56129" />
          <Vector3 X="-10776.83" Y="10.15607" Z="29.12048" />
          <Vector3 X="-10787.34" Y="-23.22065" Z="29.17799" />
          <Vector3 X="-10797.62" Y="-56.67761" Z="29.1175" />
          <Vector3 X="-10808.2" Y="-90.00612" Z="29.03998" />
          <Vector3 X="-10820.04" Y="-122.9425" Z="30.30052" />
          <Vector3 X="-10831.56" Y="-154.8775" Z="32.3653" />
          <Vector3 X="-10842.87" Y="-189.0824" Z="35.17115" />
          <Vector3 X="-10849.37" Y="-223.4686" Z="38.18766" />
          <Vector3 X="-10856.27" Y="-257.773" Z="38.06956" />
          <Vector3 X="-10865.9" Y="-290.3048" Z="38.04386" />
          <Vector3 X="-10880.44" Y="-323.2883" Z="37.80882" />
          <Vector3 X="-10896.97" Y="-354.0835" Z="39.16742" />
          <Vector3 X="-10902.3" Y="-361.0082" Z="39.44424" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(159)  || new Vector3(-10902.3f, -361.0082f, 39.44424f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Return the Comb</Name>
      <QuestId>
        <int>154</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Return to Jitters</Name>
      <QuestId>
        <int>240</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Return to Verner</Name>
      <QuestId>
        <int>119</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTE G2Goldshire</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-9275.284" Y="-2253.006" Z="64.62304" />
          <Vector3 X="-9277.524" Y="-2259.824" Z="65.74769" />
          <Vector3 X="-9280.976" Y="-2276.043" Z="67.50224" />
          <Vector3 X="-9295.995" Y="-2282.808" Z="68.39377" />
          <Vector3 X="-9313.986" Y="-2282.218" Z="70.53962" />
          <Vector3 X="-9331.423" Y="-2280.941" Z="71.50605" />
          <Vector3 X="-9354.862" Y="-2279.226" Z="71.64188" />
          <Vector3 X="-9381.043" Y="-2277.309" Z="70.52587" />
          <Vector3 X="-9407.223" Y="-2275.393" Z="67.54504" />
          <Vector3 X="-9440.412" Y="-2272.584" Z="70.96802" />
          <Vector3 X="-9474.536" Y="-2264.829" Z="74.58337" />
          <Vector3 X="-9505.92" Y="-2249.996" Z="76.91769" />
          <Vector3 X="-9532.601" Y="-2227.537" Z="84.32069" />
          <Vector3 X="-9550.292" Y="-2206.665" Z="93.20493" />
          <Vector3 X="-9563.087" Y="-2182.55" Z="87.7373" />
          <Vector3 X="-9578.308" Y="-2151.043" Z="74.50271" />
          <Vector3 X="-9600.467" Y="-2124.215" Z="66.35453" />
          <Vector3 X="-9622.948" Y="-2097.592" Z="61.67239" />
          <Vector3 X="-9623.15" Y="-2088.255" Z="61.37223" />
          <Vector3 X="-9598.839" Y="-2064.713" Z="63.64457" />
          <Vector3 X="-9589.572" Y="-2053.565" Z="65.22578" />
          <Vector3 X="-9587.471" Y="-2018.911" Z="65.46207" />
          <Vector3 X="-9579.063" Y="-1984.953" Z="66.53757" />
          <Vector3 X="-9579.305" Y="-1950.154" Z="66.5548" />
          <Vector3 X="-9586.609" Y="-1915.939" Z="62.67541" />
          <Vector3 X="-9596.15" Y="-1882.274" Z="58.94787" />
          <Vector3 X="-9607.114" Y="-1849.036" Z="54.85194" />
          <Vector3 X="-9615.965" Y="-1815.225" Z="51.91848" />
          <Vector3 X="-9616.62" Y="-1780.395" Z="52.39889" />
          <Vector3 X="-9612.735" Y="-1746.753" Z="56.2066" />
          <Vector3 X="-9611.813" Y="-1710.835" Z="56.03769" />
          <Vector3 X="-9620.208" Y="-1676.979" Z="55.91944" />
          <Vector3 X="-9634.682" Y="-1645.116" Z="55.45048" />
          <Vector3 X="-9644.381" Y="-1611.654" Z="56.0528" />
          <Vector3 X="-9646.081" Y="-1576.7" Z="54.80775" />
          <Vector3 X="-9647.729" Y="-1541.74" Z="54.31146" />
          <Vector3 X="-9650.647" Y="-1506.913" Z="57.49917" />
          <Vector3 X="-9652.934" Y="-1471.995" Z="54.98467" />
          <Vector3 X="-9654.36" Y="-1437.026" Z="54.0493" />
          <Vector3 X="-9658.677" Y="-1402.3" Z="53.0575" />
          <Vector3 X="-9662.355" Y="-1368.591" Z="49.61484" />
          <Vector3 X="-9659.452" Y="-1332.787" Z="48.4986" />
          <Vector3 X="-9653.124" Y="-1298.38" Z="46.22507" />
          <Vector3 X="-9649.649" Y="-1263.683" Z="42.1023" />
          <Vector3 X="-9649.417" Y="-1229.738" Z="36.57915" />
          <Vector3 X="-9640.505" Y="-1195.194" Z="37.22532" />
          <Vector3 X="-9624.593" Y="-1164.105" Z="41.61983" />
          <Vector3 X="-9616.268" Y="-1130.22" Z="42.50991" />
          <Vector3 X="-9613.584" Y="-1095.384" Z="40.21749" />
          <Vector3 X="-9616.121" Y="-1060.969" Z="39.66615" />
          <Vector3 X="-9620.315" Y="-1026.227" Z="40.12315" />
          <Vector3 X="-9620.213" Y="-992.4009" Z="42.73541" />
          <Vector3 X="-9607.454" Y="-958.9925" Z="43.66966" />
          <Vector3 X="-9589.405" Y="-929.0157" Z="43.50742" />
          <Vector3 X="-9583.962" Y="-894.822" Z="43.62247" />
          <Vector3 X="-9592.235" Y="-862.092" Z="43.65483" />
          <Vector3 X="-9614.505" Y="-833.9767" Z="43.67597" />
          <Vector3 X="-9636.641" Y="-806.9542" Z="43.78827" />
          <Vector3 X="-9648.307" Y="-775.529" Z="43.99957" />
          <Vector3 X="-9652.244" Y="-739.7444" Z="44.72027" />
          <Vector3 X="-9650.695" Y="-704.9553" Z="45.56042" />
          <Vector3 X="-9643.081" Y="-670.8423" Z="48.92555" />
          <Vector3 X="-9631.459" Y="-637.8763" Z="50.95869" />
          <Vector3 X="-9622.948" Y="-604.014" Z="52.73898" />
          <Vector3 X="-9618.274" Y="-570.4607" Z="54.36892" />
          <Vector3 X="-9610.444" Y="-535.2969" Z="54.78106" />
          <Vector3 X="-9597.053" Y="-502.9922" Z="57.6381" />
          <Vector3 X="-9592.996" Y="-468.4675" Z="57.74899" />
          <Vector3 X="-9604.771" Y="-436.7391" Z="57.52702" />
          <Vector3 X="-9614.163" Y="-402.1262" Z="57.78398" />
          <Vector3 X="-9619.052" Y="-367.4842" Z="57.43641" />
          <Vector3 X="-9620.373" Y="-332.5139" Z="57.58952" />
          <Vector3 X="-9617.785" Y="-297.6756" Z="57.12566" />
          <Vector3 X="-9611.63" Y="-263.2532" Z="57.18611" />
          <Vector3 X="-9600.311" Y="-230.1515" Z="57.3533" />
          <Vector3 X="-9587.797" Y="-197.465" Z="57.53082" />
          <Vector3 X="-9573.677" Y="-165.4626" Z="57.65784" />
          <Vector3 X="-9557.769" Y="-134.2956" Z="57.70699" />
          <Vector3 X="-9549.658" Y="-100.4081" Z="57.27064" />
          <Vector3 X="-9546.578" Y="-65.54417" Z="57.12912" />
          <Vector3 X="-9537.759" Y="-31.89018" Z="56.02021" />
          <Vector3 X="-9522.862" Y="-0.2208176" Z="55.9277" />
          <Vector3 X="-9508.247" Y="30.42224" Z="56.45482" />
          <Vector3 X="-9498.665" Y="50.04645" Z="56.03549" />
          <Vector3 X="-9488.974" Y="57.11069" Z="56.1145" />
          <Vector3 X="-9477.856" Y="64.01736" Z="56.17084" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(118)  || new Vector3(-9477.8561f, 64.01736f, 56.17084f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTE LostTools</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-9270.549" Y="-2204.428" Z="64.05869" />
          <Vector3 X="-9270.597" Y="-2209.349" Z="64.05869" />
          <Vector3 X="-9270.96" Y="-2216.338" Z="64.05869" />
          <Vector3 X="-9271.214" Y="-2219.941" Z="64.00244" />
          <Vector3 X="-9271.561" Y="-2224.843" Z="64.00244" />
          <Vector3 X="-9272.323" Y="-2235.652" Z="64.00244" />
          <Vector3 X="-9273.038" Y="-2245.791" Z="64.06396" />
          <Vector3 X="-9273.801" Y="-2256.599" Z="65.01578" />
          <Vector3 X="-9274.517" Y="-2266.738" Z="66.78911" />
          <Vector3 X="-9275.278" Y="-2277.534" Z="67.59657" />
          <Vector3 X="-9276.03" Y="-2287.654" Z="67.94271" />
          <Vector3 X="-9277.477" Y="-2298.393" Z="68.29421" />
          <Vector3 X="-9278.988" Y="-2308.441" Z="68.00963" />
          <Vector3 X="-9281.263" Y="-2319.036" Z="66.14644" />
          <Vector3 X="-9283.866" Y="-2329.205" Z="64.52068" />
          <Vector3 X="-9287.622" Y="-2338.993" Z="62.29576" />
          <Vector3 X="-9291.449" Y="-2346.983" Z="59.19441" />
          <Vector3 X="-9297.468" Y="-2354.738" Z="55.85993" />
          <Vector3 X="-9301.837" Y="-2358.667" Z="54.44918" Type="Swimming" />
          <Vector3 X="-9305.665" Y="-2361.46" Z="54.70547" Type="Swimming" />
          <Vector3 X="-9309.463" Y="-2364.103" Z="54.72669" Type="Swimming" />
          <Vector3 X="-9313.249" Y="-2367.046" Z="54.72669" Type="Swimming" />
          <Vector3 X="-9316.918" Y="-2369.898" Z="54.72669" Type="Swimming" />
          <Vector3 X="-9336.924" Y="-2393.411" Z="54.43227" Type="Swimming" />
          <Vector3 X="-9344.942" Y="-2401.482" Z="54.43227" Type="Swimming" />
          <Vector3 X="-9351.572" Y="-2410.789" Z="54.43227" Type="Swimming" />
          <Vector3 X="-9358.642" Y="-2420.712" Z="54.43227" Type="Swimming" />
          <Vector3 X="-9365.183" Y="-2430.077" Z="54.43227" Type="Swimming" />
          <Vector3 X="-9368.606" Y="-2440.995" Z="54.43227" Type="Swimming" />
          <Vector3 X="-9371.757" Y="-2451.586" Z="54.43227" Type="Swimming" />
          <Vector3 X="-9361.237" Y="-2452.658" Z="52.92768" Type="Swimming" />
          <Vector3 X="-9361.32" Y="-2452.97" Z="45.54443" Type="Swimming" />
          <Vector3 X="-9362.085" Y="-2455.299" Z="38.59786" Type="Swimming" />
          <Vector3 X="-9364.658" Y="-2458.193" Z="26.79272" Type="Swimming" />
          <Vector3 X="-9367.854" Y="-2461.721" Z="22.47455" Type="Swimming" />
          <Vector3 X="-9370.565" Y="-2464.969" Z="19.68963" Type="Swimming" />
          <Vector3 X="-9373.331" Y="-2467.725" Z="18.07315" Type="Swimming" />
          <Vector3 X="-9369.695" Y="-2472.02" Z="16.60551" Type="Swimming" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(125)  || new Vector3(-9369.695f, -2472.02f, 16.60551f).DistanceTo(ObjectManager.Me.Position) &lt; 2);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEB2Lakeshire</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-9459.307" Y="82.74419" Z="58.3005" />
          <Vector3 X="-9463.58" Y="74.31252" Z="56.65112" />
          <Vector3 X="-9466.224" Y="71.85271" Z="56.46807" />
          <Vector3 X="-9471.346" Y="67.24699" Z="56.27556" />
          <Vector3 X="-9489.251" Y="51.14568" Z="56.3535" />
          <Vector3 X="-9508.411" Y="22.28726" Z="56.42279" />
          <Vector3 X="-9524.991" Y="-9.720778" Z="55.82647" />
          <Vector3 X="-9541.187" Y="-40.69383" Z="56.50782" />
          <Vector3 X="-9546.579" Y="-74.06718" Z="57.45577" />
          <Vector3 X="-9549.027" Y="-108.962" Z="57.47759" />
          <Vector3 X="-9561.265" Y="-141.5057" Z="57.54988" />
          <Vector3 X="-9578.269" Y="-173.293" Z="57.41056" />
          <Vector3 X="-9591.542" Y="-205.5696" Z="57.7688" />
          <Vector3 X="-9603.623" Y="-238.4146" Z="57.34587" />
          <Vector3 X="-9612.807" Y="-272.1027" Z="57.23187" />
          <Vector3 X="-9616.96" Y="-305.7618" Z="57.52038" />
          <Vector3 X="-9618.958" Y="-340.6794" Z="57.56794" />
          <Vector3 X="-9618.516" Y="-376.7037" Z="57.66972" />
          <Vector3 X="-9614.545" Y="-411.3824" Z="57.38289" />
          <Vector3 X="-9601.207" Y="-443.6302" Z="57.68342" />
          <Vector3 X="-9592.041" Y="-475.942" Z="57.71674" />
          <Vector3 X="-9598.658" Y="-510.945" Z="57.37529" />
          <Vector3 X="-9612.817" Y="-542.9333" Z="54.46569" />
          <Vector3 X="-9620.396" Y="-575.9608" Z="54.17552" />
          <Vector3 X="-9625.319" Y="-611.6711" Z="52.26374" />
          <Vector3 X="-9631.791" Y="-646.0661" Z="50.27079" />
          <Vector3 X="-9643.328" Y="-677.9201" Z="48.52443" />
          <Vector3 X="-9654.266" Y="-712.1705" Z="44.90031" />
          <Vector3 X="-9655.784" Y="-747.003" Z="44.59052" />
          <Vector3 X="-9650.575" Y="-780.485" Z="44.24788" />
          <Vector3 X="-9636.987" Y="-812.5005" Z="43.73437" />
          <Vector3 X="-9613.197" Y="-839.3976" Z="43.73142" />
          <Vector3 X="-9591.61" Y="-865.2774" Z="43.78202" />
          <Vector3 X="-9585.776" Y="-900.3781" Z="43.82446" />
          <Vector3 X="-9591.665" Y="-934.6294" Z="43.63589" />
          <Vector3 X="-9610.041" Y="-964.2704" Z="43.84837" />
          <Vector3 X="-9621.745" Y="-996.6136" Z="42.41901" />
          <Vector3 X="-9619.347" Y="-1031.497" Z="39.6731" />
          <Vector3 X="-9615.135" Y="-1066.242" Z="39.66676" />
          <Vector3 X="-9614.078" Y="-1100.134" Z="40.4657" />
          <Vector3 X="-9618.359" Y="-1135.884" Z="42.76373" />
          <Vector3 X="-9626.932" Y="-1168.688" Z="40.92171" />
          <Vector3 X="-9642.713" Y="-1201.063" Z="36.56851" />
          <Vector3 X="-9650.262" Y="-1234.925" Z="37.16182" />
          <Vector3 X="-9651.814" Y="-1268.804" Z="43.06796" />
          <Vector3 X="-9655.104" Y="-1300.343" Z="46.63538" />
          <Vector3 X="-9656.647" Y="-1329.843" Z="48.54317" />
          <Vector3 X="-9661.317" Y="-1364.501" Z="49.43432" />
          <Vector3 X="-9662.744" Y="-1387.406" Z="51.36884" />
          <Vector3 X="-9659.619" Y="-1415.529" Z="53.65461" />
          <Vector3 X="-9651.837" Y="-1449.579" Z="54.3637" />
          <Vector3 X="-9652.891" Y="-1484.464" Z="56.19831" />
          <Vector3 X="-9650.205" Y="-1519.263" Z="56.73202" />
          <Vector3 X="-9646.426" Y="-1554.051" Z="53.70493" />
          <Vector3 X="-9645.737" Y="-1589.038" Z="55.23263" />
          <Vector3 X="-9643.334" Y="-1623.89" Z="55.86969" />
          <Vector3 X="-9629.571" Y="-1655.986" Z="56.29472" />
          <Vector3 X="-9617.427" Y="-1688.769" Z="56.13819" />
          <Vector3 X="-9614.102" Y="-1723.483" Z="56.35809" />
          <Vector3 X="-9615.496" Y="-1758.446" Z="54.73107" />
          <Vector3 X="-9614.758" Y="-1792.341" Z="51.96827" />
          <Vector3 X="-9609.543" Y="-1827.938" Z="52.47991" />
          <Vector3 X="-9601.016" Y="-1861.83" Z="56.77049" />
          <Vector3 X="-9590.368" Y="-1895.049" Z="60.29491" />
          <Vector3 X="-9580.904" Y="-1928.624" Z="64.22745" />
          <Vector3 X="-9577.957" Y="-1963.452" Z="67.08662" />
          <Vector3 X="-9583.455" Y="-1997.966" Z="66.03865" />
          <Vector3 X="-9586.704" Y="-2032.777" Z="65.4447" />
          <Vector3 X="-9600.393" Y="-2063.845" Z="63.59398" />
          <Vector3 X="-9626.02" Y="-2087.162" Z="61.21584" />
          <Vector3 X="-9624.692" Y="-2092.257" Z="61.35553" />
          <Vector3 X="-9603.228" Y="-2119.779" Z="65.60624" />
          <Vector3 X="-9581.579" Y="-2145.874" Z="72.74353" />
          <Vector3 X="-9565.374" Y="-2177.883" Z="85.50005" />
          <Vector3 X="-9559.653" Y="-2193.214" Z="91.83755" />
          <Vector3 X="-9542.56" Y="-2222.5" Z="87.895" />
          <Vector3 X="-9513.599" Y="-2243.909" Z="78.33761" />
          <Vector3 X="-9483.216" Y="-2261.017" Z="75.2606" />
          <Vector3 X="-9449.149" Y="-2268.754" Z="71.97505" />
          <Vector3 X="-9414.462" Y="-2273.355" Z="67.70377" />
          <Vector3 X="-9379.65" Y="-2276.994" Z="70.62003" />
          <Vector3 X="-9345.89" Y="-2280.466" Z="71.64422" />
          <Vector3 X="-9310.898" Y="-2281.176" Z="70.36963" />
          <Vector3 X="-9283.603" Y="-2280.7" Z="67.52872" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(119)  || new Vector3(-9283.603f, -2280.7f, 67.52872f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEBetterPosForGhouls</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10622.91" Y="292.9882" Z="33.41676" />
          <Vector3 X="-10624.75" Y="283.3337" Z="36.16357" />
          <Vector3 X="-10625.1" Y="274.1429" Z="39.25896" />
          <Vector3 X="-10625.71" Y="263.66" Z="40.02985" />
          <Vector3 X="-10626.31" Y="253.1773" Z="38.71392" />
          <Vector3 X="-10627.03" Y="242.7023" Z="37.06796" />
          <Vector3 X="-10627.31" Y="231.8952" Z="36.65295" />
          <Vector3 X="-10627.4" Y="221.596" Z="37.51598" />
          <Vector3 X="-10621.86" Y="214.0753" Z="36.19101" />
          <Vector3 X="-10615.18" Y="205.5491" Z="33.00883" />
          <Vector3 X="-10608.88" Y="197.1517" Z="31.91867" />
          <Vector3 X="-10602.3" Y="188.9721" Z="33.12147" />
          <Vector3 X="-10595.02" Y="181.4234" Z="32.48005" />
          <Vector3 X="-10586.92" Y="174.7326" Z="30.61891" />
          <Vector3 X="-10577.92" Y="169.3523" Z="30.58202" />
          <Vector3 X="-10568.54" Y="164.645" Z="30.5268" />
          <Vector3 X="-10559.63" Y="159.0962" Z="29.34892" />
          <Vector3 X="-10556.3" Y="157.0018" Z="29.34883" />
          <Vector3 X="-10546.32" Y="150.7074" Z="29.91895" />
          <Vector3 X="-10536.57" Y="148.0107" Z="30.67361" />
          <Vector3 X="-10526.39" Y="145.435" Z="31.66698" />
          <Vector3 X="-10516.22" Y="142.8027" Z="32.94841" />
          <Vector3 X="-10510.83" Y="141.4234" Z="33.55604" />
          <Vector3 X="-10504.14" Y="139.7103" Z="34.27662" />
          <Vector3 X="-10493.97" Y="137.1068" Z="36.62436" />
          <Vector3 X="-10483.74" Y="134.7687" Z="36.97272" />
          <Vector3 X="-10473.54" Y="132.3286" Z="36.15503" />
          <Vector3 X="-10463.53" Y="129.1913" Z="35.54577" />
          <Vector3 X="-10454.36" Y="124.1231" Z="36.05656" />
          <Vector3 X="-10445.27" Y="118.2691" Z="36.32624" />
          <Vector3 X="-10436.84" Y="112.5485" Z="37.09233" />
          <Vector3 X="-10428.08" Y="106.7729" Z="38.70922" />
          <Vector3 X="-10418.35" Y="102.8773" Z="39.04573" />
          <Vector3 X="-10410.88" Y="104.0062" Z="38.77807" />
          <Vector3 X="-10406.2" Y="108.1464" Z="38.37721" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(133)  || new Vector3(-10406.2f, 108.1464f, 38.37721f).DistanceTo(ObjectManager.Me.Position) &lt; 5);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoToBuyHerbs</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-8834.957" Y="545.7473" Z="96.72439" />
          <Vector3 X="-8827.839" Y="552.3782" Z="95.49557" />
          <Vector3 X="-8820.542" Y="559.9255" Z="94.44037" />
          <Vector3 X="-8814.338" Y="567.9746" Z="94.15147" />
          <Vector3 X="-8807.936" Y="576.2965" Z="95.26866" />
          <Vector3 X="-8800.96" Y="584.1396" Z="96.97514" />
          <Vector3 X="-8793.407" Y="591.4321" Z="97.6072" />
          <Vector3 X="-8785.593" Y="598.4425" Z="97.51217" />
          <Vector3 X="-8776.698" Y="603.9632" Z="97.2613" />
          <Vector3 X="-8766.498" Y="605.2941" Z="96.86722" />
          <Vector3 X="-8758.649" Y="598.6577" Z="97.12105" />
          <Vector3 X="-8751.751" Y="590.7492" Z="97.34528" />
          <Vector3 X="-8744.512" Y="583.1438" Z="97.44162" />
          <Vector3 X="-8739.82" Y="578.101" Z="97.4929" />
          <Vector3 X="-8737.768" Y="575.1295" Z="97.43283" />
          <Vector3 X="-8743.333" Y="568.2353" Z="97.37138" />
          <Vector3 X="-8750.584" Y="560.6497" Z="97.39777" />
          <Vector3 X="-8757.674" Y="552.908" Z="97.39584" />
          <Vector3 X="-8763.532" Y="544.6141" Z="97.39584" />
          <Vector3 X="-8769.339" Y="535.4659" Z="97.39439" />
          <Vector3 X="-8775.479" Y="526.5383" Z="97.49251" />
          <Vector3 X="-8781.777" Y="518.1381" Z="97.68414" />
          <Vector3 X="-8788.979" Y="510.5267" Z="97.95228" />
          <Vector3 X="-8797.34" Y="504.1804" Z="98.22294" />
          <Vector3 X="-8807.197" Y="500.8549" Z="98.23631" />
          <Vector3 X="-8816.616" Y="504.7025" Z="99.0524" />
          <Vector3 X="-8820.395" Y="509.2296" Z="98.68359" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoToFPDarkshire</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10553.33" Y="-1185.066" Z="27.87992" />
          <Vector3 X="-10552.75" Y="-1195.445" Z="27.81404" />
          <Vector3 X="-10552.18" Y="-1212.935" Z="27.32676" />
          <Vector3 X="-10551.62" Y="-1230.426" Z="27.71643" />
          <Vector3 X="-10550.67" Y="-1247.871" Z="31.07732" />
          <Vector3 X="-10546.79" Y="-1264.777" Z="34.09609" />
          <Vector3 X="-10534.83" Y="-1277.006" Z="37.80938" />
          <Vector3 X="-10520" Y="-1271.917" Z="39.7426" />
          <Vector3 X="-10515.15" Y="-1266.824" Z="40.99478" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEGoToWolfGrind</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10504.77" Y="-1161.122" Z="28.09604" />
          <Vector3 X="-10509.59" Y="-1162.115" Z="28.09813" />
          <Vector3 X="-10513.01" Y="-1162.856" Z="28.09813" />
          <Vector3 X="-10519.77" Y="-1164.196" Z="27.51417" />
          <Vector3 X="-10523.23" Y="-1164.751" Z="27.47658" />
          <Vector3 X="-10530.13" Y="-1165.892" Z="28.10393" />
          <Vector3 X="-10536.78" Y="-1165.365" Z="28.10393" />
          <Vector3 X="-10538.5" Y="-1159.085" Z="28.08704" />
          <Vector3 X="-10545.37" Y="-1159.938" Z="28.02268" />
          <Vector3 X="-10549.58" Y="-1168.053" Z="27.6748" />
          <Vector3 X="-10547.34" Y="-1178.138" Z="28.21594" />
          <Vector3 X="-10539.99" Y="-1185.331" Z="28.03622" />
          <Vector3 X="-10529.61" Y="-1185.868" Z="28.04346" />
          <Vector3 X="-10517.15" Y="-1185.18" Z="28.10082" />
          <Vector3 X="-10499.68" Y="-1184.216" Z="28.06544" />
          <Vector3 X="-10482.29" Y="-1182.47" Z="27.70577" />
          <Vector3 X="-10465.11" Y="-1179.141" Z="27.56873" />
          <Vector3 X="-10448.27" Y="-1172.825" Z="27.88054" />
          <Vector3 X="-10434.67" Y="-1163.734" Z="27.84322" />
          <Vector3 X="-10424.51" Y="-1149.653" Z="26.32533" />
          <Vector3 X="-10415.02" Y="-1133.718" Z="23.99245" />
          <Vector3 X="-10402.85" Y="-1122.84" Z="22.8039" />
          <Vector3 X="-10385.54" Y="-1116.486" Z="21.78732" />
          <Vector3 X="-10368.05" Y="-1115.935" Z="21.04771" />
          <Vector3 X="-10350.6" Y="-1116.741" Z="21.45143" />
          <Vector3 X="-10334.03" Y="-1122.167" Z="21.7275" />
          <Vector3 X="-10325.62" Y="-1126.161" Z="21.72331" />
          <Vector3 X="-10313.14" Y="-1129.932" Z="21.99846" />
          <Vector3 X="-10295.75" Y="-1131.898" Z="20.16059" />
          <Vector3 X="-10278.8" Y="-1132.676" Z="20.93232" />
          <Vector3 X="-10261.35" Y="-1133.282" Z="26.25389" />
          <Vector3 X="-10251.98" Y="-1130.372" Z="27.5338" />
          <Vector3 X="-10242.62" Y="-1125.845" Z="30.1913" />
          <Vector3 X="-10237.31" Y="-1121.247" Z="31.67387" />
          <Vector3 X="-10233.52" Y="-1118.099" Z="31.07769" />
          <Vector3 X="-10218.19" Y="-1111.15" Z="35.39758" />
          <Vector3 X="-10214.84" Y="-1109.246" Z="31.89516" />
          <Vector3 X="-10204.54" Y="-1104.2" Z="29.32731" />
          <Vector3 X="-10191.99" Y="-1098.835" Z="32.75253" />
          <Vector3 X="-10180.25" Y="-1093.063" Z="31.35976" />
          <Vector3 X="-10174.83" Y="-1087.669" Z="30.8103" />
          <Vector3 X="-10163.27" Y="-1078.673" Z="28.927" />
          <Vector3 X="-10147.97" Y="-1070.161" Z="28.54141" />
          <Vector3 X="-10132.42" Y="-1062.15" Z="31.82346" />
          <Vector3 X="-10117.29" Y="-1054.533" Z="34.4631" />
          <Vector3 X="-10101.45" Y="-1044.936" Z="33.45855" />
          <Vector3 X="-10092.92" Y="-1030.03" Z="32.19954" />
          <Vector3 X="-10092.08" Y="-1013.714" Z="33.24821" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEHerbsBackToFlightMaster</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-8821.976" Y="512.1843" Z="98.68359" />
          <Vector3 X="-8817.989" Y="507.2502" Z="99.37226" />
          <Vector3 X="-8806.784" Y="504.596" Z="99.03397" />
          <Vector3 X="-8797.297" Y="508.8333" Z="98.48054" />
          <Vector3 X="-8796.004" Y="509.8395" Z="98.41412" />
          <Vector3 X="-8791.599" Y="513.2759" Z="98.35101" />
          <Vector3 X="-8787.112" Y="517.1048" Z="98.13573" />
          <Vector3 X="-8783.796" Y="520.2894" Z="97.96664" />
          <Vector3 X="-8779.519" Y="525.5313" Z="97.80785" />
          <Vector3 X="-8774.875" Y="531.629" Z="97.67323" />
          <Vector3 X="-8768.757" Y="539.3273" Z="97.62927" />
          <Vector3 X="-8763.844" Y="545.2112" Z="97.39455" />
          <Vector3 X="-8757.499" Y="552.7261" Z="97.39497" />
          <Vector3 X="-8752.48" Y="558.5195" Z="97.39677" />
          <Vector3 X="-8746.03" Y="565.9438" Z="97.39785" />
          <Vector3 X="-8740.636" Y="572.1527" Z="97.39281" />
          <Vector3 X="-8739.58" Y="573.3681" Z="97.40984" />
          <Vector3 X="-8739.81" Y="579.4443" Z="97.4977" />
          <Vector3 X="-8743.938" Y="582.1169" Z="97.45284" />
          <Vector3 X="-8748.263" Y="585.5809" Z="97.40163" />
          <Vector3 X="-8751.726" Y="589.0966" Z="97.35689" />
          <Vector3 X="-8755.603" Y="593.0886" Z="97.27381" />
          <Vector3 X="-8759.049" Y="596.6207" Z="97.15169" />
          <Vector3 X="-8763.271" Y="600.743" Z="97.0042" />
          <Vector3 X="-8766.438" Y="603.5966" Z="96.89868" />
          <Vector3 X="-8771.063" Y="607.2465" Z="97.1381" />
          <Vector3 X="-8774.479" Y="608.277" Z="97.33694" />
          <Vector3 X="-8774.479" Y="608.277" Z="97.33694" />
          <Vector3 X="-8777.015" Y="605.7032" Z="97.30006" />
          <Vector3 X="-8781.244" Y="601.5892" Z="97.4251" />
          <Vector3 X="-8784.517" Y="598.3575" Z="97.43255" />
          <Vector3 X="-8790.961" Y="591.9827" Z="97.56554" />
          <Vector3 X="-8796.707" Y="586.0988" Z="97.28126" />
          <Vector3 X="-8797.073" Y="585.7223" Z="97.25201" />
          <Vector3 X="-8800.122" Y="582.585" Z="96.7229" />
          <Vector3 X="-8805.855" Y="576.6868" Z="95.48019" />
          <Vector3 X="-8812.679" Y="569.6051" Z="94.15314" />
          <Vector3 X="-8817.181" Y="564.1091" Z="94.1516" />
          <Vector3 X="-8823.343" Y="556.444" Z="94.88397" />
          <Vector3 X="-8828.231" Y="550.541" Z="95.81313" />
          <Vector3 X="-8834.456" Y="542.9276" Z="96.93615" />
          <Vector3 X="-8839.268" Y="536.9606" Z="99.78725" />
          <Vector3 X="-8845.362" Y="529.2422" Z="104.4637" />
          <Vector3 X="-8848.624" Y="525.2543" Z="105.9926" />
          <Vector3 X="-8848.624" Y="525.2543" Z="105.9926" />
          <Vector3 X="-8852.859" Y="525.6191" Z="106.0492" />
          <Vector3 X="-8852.859" Y="525.6191" Z="106.0492" />
          <Vector3 X="-8852.745" Y="530.2166" Z="105.9703" />
          <Vector3 X="-8853.138" Y="534.7927" Z="105.9191" />
          <Vector3 X="-8854.884" Y="538.2068" Z="105.9035" />
          <Vector3 X="-8854.884" Y="538.2068" Z="105.9035" />
          <Vector3 X="-8860.064" Y="536.1805" Z="106.4159" />
          <Vector3 X="-8864.283" Y="534.3552" Z="106.6041" />
          <Vector3 X="-8867.241" Y="530.3145" Z="106.8651" />
          <Vector3 X="-8867.241" Y="530.3145" Z="106.8651" />
          <Vector3 X="-8865.247" Y="525.4587" Z="107.4006" />
          <Vector3 X="-8862.789" Y="521.1851" Z="107.9594" />
          <Vector3 X="-8859.584" Y="516.6366" Z="108.7261" />
          <Vector3 X="-8856.842" Y="512.9456" Z="109.3515" />
          <Vector3 X="-8853.219" Y="508.2874" Z="109.6082" />
          <Vector3 X="-8850.366" Y="504.6803" Z="109.6088" />
          <Vector3 X="-8846.571" Y="500.162" Z="109.6099" />
          <Vector3 X="-8843.52" Y="496.7218" Z="109.6103" />
          <Vector3 X="-8841.568" Y="494.4945" Z="109.6104" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEWalkIntoHouseStalvan</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-9553.248" Y="-1412.327" Z="55.84944" />
          <Vector3 X="-9553.238" Y="-1413.853" Z="56.10194" />
          <Vector3 X="-9553.173" Y="-1420.852" Z="57.52998" />
          <Vector3 X="-9552.843" Y="-1426.086" Z="57.52998" />
          <Vector3 X="-9550.458" Y="-1427.192" Z="57.52998" />
          <Vector3 X="-9545.655" Y="-1427.552" Z="57.52998" />
          <Vector3 X="-9538.896" Y="-1426.419" Z="57.52998" />
          <Vector3 X="-9538.233" Y="-1419.958" Z="57.53043" />
          <Vector3 X="-9541.241" Y="-1420.692" Z="58.46481" />
          <Vector3 X="-9548.232" Y="-1421.043" Z="62.25647" />
          <Vector3 X="-9551.42" Y="-1422.675" Z="62.25864" />
          <Vector3 X="-9552.686" Y="-1429.52" Z="62.29464" />
          <Vector3 X="-9552.488" Y="-1434.105" Z="62.29478" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(75)  || new Vector3(-9552.488f, -1434.105f, 62.29478f).DistanceTo(ObjectManager.Me.Position) &lt; 1);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEWolfToFlightMaster</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10177.65" Y="-1051.597" Z="27.88419" />
          <Vector3 X="-10181.25" Y="-1057.093" Z="27.82406" />
          <Vector3 X="-10189.4" Y="-1068.337" Z="28.95682" />
          <Vector3 X="-10199.01" Y="-1082.912" Z="31.42564" />
          <Vector3 X="-10204.75" Y="-1099.991" Z="29.93334" />
          <Vector3 X="-10208.46" Y="-1117.079" Z="27.60491" />
          <Vector3 X="-10212.1" Y="-1134.193" Z="26.00984" />
          <Vector3 X="-10217.49" Y="-1145.981" Z="22.17689" />
          <Vector3 X="-10230.47" Y="-1152.647" Z="22.11214" />
          <Vector3 X="-10247.85" Y="-1154.575" Z="21.53279" />
          <Vector3 X="-10264.78" Y="-1154.871" Z="22.11528" />
          <Vector3 X="-10282.66" Y="-1152.612" Z="22.92223" />
          <Vector3 X="-10298.02" Y="-1145.851" Z="23.13708" />
          <Vector3 X="-10311.84" Y="-1135.119" Z="22.15634" />
          <Vector3 X="-10326.05" Y="-1124.929" Z="21.75424" />
          <Vector3 X="-10343.19" Y="-1119.418" Z="21.39843" />
          <Vector3 X="-10359.85" Y="-1116.355" Z="21.22698" />
          <Vector3 X="-10377.88" Y="-1115.738" Z="21.24797" />
          <Vector3 X="-10394.52" Y="-1120.416" Z="22.4595" />
          <Vector3 X="-10408.82" Y="-1129.492" Z="23.25357" />
          <Vector3 X="-10418.28" Y="-1143.834" Z="25.53581" />
          <Vector3 X="-10426.39" Y="-1159.86" Z="27.08865" />
          <Vector3 X="-10440.51" Y="-1169.995" Z="27.8648" />
          <Vector3 X="-10444.77" Y="-1172.404" Z="27.85015" />
          <Vector3 X="-10450.91" Y="-1174.681" Z="27.76998" />
          <Vector3 X="-10467.32" Y="-1180.768" Z="27.62092" />
          <Vector3 X="-10484.35" Y="-1184.487" Z="27.6718" />
          <Vector3 X="-10501.82" Y="-1185.628" Z="28.03607" />
          <Vector3 X="-10519.25" Y="-1187.068" Z="28.07951" />
          <Vector3 X="-10537.21" Y="-1189.038" Z="27.92388" />
          <Vector3 X="-10552.68" Y="-1195.121" Z="27.82183" />
          <Vector3 X="-10555.77" Y="-1212.054" Z="27.50349" />
          <Vector3 X="-10552.35" Y="-1229.766" Z="27.64188" />
          <Vector3 X="-10546.39" Y="-1245.559" Z="30.39046" />
          <Vector3 X="-10539.05" Y="-1262.043" Z="33.51953" />
          <Vector3 X="-10526.4" Y="-1272.87" Z="38.3781" />
          <Vector3 X="-10521.9" Y="-1271.064" Z="39.41219" />
          <Vector3 X="-10513.52" Y="-1262.661" Z="41.28525" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Seasoned Wolf Kabobs1</Name>
      <QuestId>
        <int>90</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-10090.87" Y="-1004.064" Z="32.54034" />
          <Vector3 X="-10072.85" Y="-827.1923" Z="36.8661" />
          <Vector3 X="-10013.26" Y="-727.5829" Z="33.8457" />
          <Vector3 X="-10013.78" Y="-453.8571" Z="33.71492" />
        </HotSpots>
        <EntryTarget>
          <int>565</int>
          <int>213</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Seasoned Wolf Kabobs2</Name>
      <QuestId>
        <int>90</int>
      </QuestId>
      <QuestType>InteractWithNpc</QuestType>
      <QuestClass xsi:type="InteractWithNpcEasyQuestClass">
        <HotSpots>
          <Vector3 X="-8822.07" Y="518.022" Z="98.6826" />
        </HotSpots>
        <GossipOptionNpcInteractWith>1</GossipOptionNpcInteractWith>
        <Macro>BuyMerchantItem(1,1)</Macro>
        <IgnoreIfDead>false</IgnoreIfDead>
        <EntryIdTarget>
          <int>1303</int>
        </EntryIdTarget>
        <Range>4.5</Range>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Selling Fish</Name>
      <QuestId>
        <int>127</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots />
        <EntryTarget>
          <int>578</int>
          <int>422</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Solomon's Law</Name>
      <QuestId>
        <int>91</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots />
        <EntryTarget />
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Supplies from Darkshire</Name>
      <QuestId>
        <int>148</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Everstill Bridge</Name>
      <QuestId>
        <int>89</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-9155.635" Y="-2023.883" Z="119.7024" />
          <Vector3 X="-9123.653" Y="-2052.442" Z="128.6503" />
          <Vector3 X="-9087.138" Y="-2032.159" Z="128.6589" />
          <Vector3 X="-9074.902" Y="-2092.72" Z="128.9972" />
          <Vector3 X="-9047.55" Y="-2092.159" Z="130.8578" />
          <Vector3 X="-9034.54" Y="-2108.23" Z="135.1061" />
          <Vector3 X="-9010.033" Y="-2086.481" Z="132.4344" />
          <Vector3 X="-9112.187" Y="-2093.898" Z="124.7908" />
          <Vector3 X="-9111.688" Y="-2156.89" Z="130.7698" />
          <Vector3 X="-9123.114" Y="-2215.133" Z="123.7827" />
          <Vector3 X="-9091.3" Y="-2153.33" Z="140.7026" />
          <Vector3 X="-9030.87" Y="-2190.52" Z="131.6758" />
        </HotSpots>
        <EntryTarget>
          <int>430</int>
          <int>426</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Hermit</Name>
      <QuestId>
        <int>165</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Legend of Stalvan</Name>
      <QuestId>
        <int>66</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Legend of Stalvan 10</Name>
      <QuestId>
        <int>79</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Legend of Stalvan 11</Name>
      <QuestId>
        <int>80</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Legend of Stalvan 12</Name>
      <QuestId>
        <int>97</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Legend of Stalvan 13</Name>
      <QuestId>
        <int>98</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Legend of Stalvan 2</Name>
      <QuestId>
        <int>67</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Legend of Stalvan 3</Name>
      <QuestId>
        <int>68</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Legend of Stalvan 4</Name>
      <QuestId>
        <int>69</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Legend of Stalvan 5</Name>
      <QuestId>
        <int>70</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="-9462.733" Y="-2.114618" Z="64.44856" />
        </HotSpots>
        <EntryIdObjects>
          <int>1560</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return ItemsManager.GetItemCountById(910) &gt;= 1;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Legend of Stalvan 6</Name>
      <QuestId>
        <int>72</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Legend of Stalvan 7</Name>
      <QuestId>
        <int>74</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Legend of Stalvan 8</Name>
      <QuestId>
        <int>75</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="-9549.374" Y="-1438.561" Z="62.5279" />
        </HotSpots>
        <EntryIdObjects>
          <int>1562</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return ItemsManager.GetItemCountById(921) &gt;=1;</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Legend of Stalvan 9</Name>
      <QuestId>
        <int>78</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Lost Tools</Name>
      <QuestId>
        <int>125</int>
      </QuestId>
      <QuestType>Gatherer</QuestType>
      <QuestClass xsi:type="GathererEasyQuestClass">
        <HotSpots>
          <Vector3 X="-9366.5" Y="-2472.3" Z="17" Type="Swimming" />
          <Vector3 X="-9366.373" Y="-2471.4" Z="17.40759" Type="Swimming" />
        </HotSpots>
        <EntryIdObjects>
          <int>32</int>
        </EntryIdObjects>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Night Watch 1</Name>
      <QuestId>
        <int>56</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-10906.06" Y="-1323.897" Z="52.95179" />
          <Vector3 X="-10960.9" Y="-1351.344" Z="51.4644" />
          <Vector3 X="-10980.9" Y="-1381.33" Z="60.94971" />
          <Vector3 X="-10944.66" Y="-1248.801" Z="51.62734" />
          <Vector3 X="-10975.38" Y="-1296.45" Z="52.85711" />
          <Vector3 X="-10979.79" Y="-1340.571" Z="51.79228" />
          <Vector3 X="-11007.88" Y="-1263.01" Z="51.88461" />
          <Vector3 X="-11044.09" Y="-1256.773" Z="57.09156" />
          <Vector3 X="-11056.87" Y="-1314.14" Z="53.86255" />
          <Vector3 X="-11045.42" Y="-1349.524" Z="54.97355" />
        </HotSpots>
        <EntryTarget>
          <int>203</int>
          <int>48</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Night Watch 2</Name>
      <QuestId>
        <int>57</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-10496.57" Y="222.3374" Z="32.33169" />
          <Vector3 X="-10562.86" Y="341.8446" Z="28.71387" />
        </HotSpots>
        <EntryTarget>
          <int>531</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Night Watch 2/2</Name>
      <QuestId>
        <int>57</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-10562.86" Y="341.8446" Z="28.71387" />
          <Vector3 X="-10484.72" Y="215.3574" Z="31.38551" />
        </HotSpots>
        <EntryTarget>
          <int>202</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Night Watch 3</Name>
      <QuestId>
        <int>58</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots />
        <EntryTarget />
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Price of Shoes</Name>
      <QuestId>
        <int>118</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>The Totem of Infliction</Name>
      <QuestId>
        <int>101</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-10415.72" Y="217.1069" Z="33.84992" />
          <Vector3 X="-10326" Y="245.7954" Z="34.66105" />
          <Vector3 X="-10369.16" Y="193.5066" Z="33.95416" />
          <Vector3 X="-10363.38" Y="150.0794" Z="35.2598" />
          <Vector3 X="-10320.2" Y="141.062" Z="39.4904" />
          <Vector3 X="-10306.8" Y="206.4483" Z="34.23518" />
        </HotSpots>
        <EntryTarget>
          <int>3</int>
          <int>948</int>
          <int>604</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Underbelly Scales</Name>
      <QuestId>
        <int>122</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-9491.231" Y="-2289.904" Z="74.43605" />
          <Vector3 X="-9505.097" Y="-2353.066" Z="68.4343" />
          <Vector3 X="-9565.629" Y="-2326.39" Z="64.13461" />
          <Vector3 X="-9630.037" Y="-2362.912" Z="64.3278" />
          <Vector3 X="-9627.393" Y="-2390.587" Z="60.22401" />
          <Vector3 X="-9700.151" Y="-2517.737" Z="61.41999" />
          <Vector3 X="-9694.669" Y="-2615.014" Z="63.67864" />
          <Vector3 X="-9658.027" Y="-2692.595" Z="60.66972" />
          <Vector3 X="-9657.994" Y="-2845.005" Z="52.48735" />
          <Vector3 X="-9714.549" Y="-2905.398" Z="53.94624" />
        </HotSpots>
        <EntryTarget>
          <int>441</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Visit the Herbalist</Name>
      <QuestId>
        <int>130</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Westfall to Darkshire</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-10976.8" Y="1563.489" Z="45.61893" />
          <Vector3 X="-10975.99" Y="1558.309" Z="45.61893" />
          <Vector3 X="-10975.01" Y="1552.883" Z="44.83284" />
          <Vector3 X="-10966.39" Y="1550.68" Z="45.61888" />
          <Vector3 X="-10962.74" Y="1548.033" Z="45.61721" />
          <Vector3 X="-10960.25" Y="1537.861" Z="45.61721" />
          <Vector3 X="-10958.6" Y="1527.492" Z="43.41092" />
          <Vector3 X="-10951.83" Y="1519.827" Z="43.36411" />
          <Vector3 X="-10943.3" Y="1513.712" Z="45.16429" />
          <Vector3 X="-10937.33" Y="1505.108" Z="46.06716" />
          <Vector3 X="-10934.26" Y="1495.404" Z="45.4439" />
          <Vector3 X="-10933.86" Y="1484.611" Z="45.16507" />
          <Vector3 X="-10933.74" Y="1474.12" Z="46.60907" />
          <Vector3 X="-10933.58" Y="1459.799" Z="48.84888" />
          <Vector3 X="-10927.67" Y="1426.884" Z="43.1272" />
          <Vector3 X="-10914.66" Y="1394.394" Z="42.94751" />
          <Vector3 X="-10904.23" Y="1361.02" Z="39.8959" />
          <Vector3 X="-10896.89" Y="1325.729" Z="37.55983" />
          <Vector3 X="-10892.78" Y="1292.037" Z="34.00934" />
          <Vector3 X="-10894.03" Y="1256.171" Z="33.42458" />
          <Vector3 X="-10905.72" Y="1223.281" Z="34.61555" />
          <Vector3 X="-10922.08" Y="1192.342" Z="36.9497" />
          <Vector3 X="-10936.49" Y="1160.518" Z="37.7575" />
          <Vector3 X="-10950.12" Y="1128.283" Z="37.07555" />
          <Vector3 X="-10955.14" Y="1096.037" Z="36.762" />
          <Vector3 X="-10938.36" Y="1064.588" Z="36.27015" />
          <Vector3 X="-10935.33" Y="1029.729" Z="36.80297" />
          <Vector3 X="-10930.26" Y="1011.866" Z="36.61922" />
          <Vector3 X="-10932.91" Y="983.0258" Z="34.64556" />
          <Vector3 X="-10943.75" Y="949.9286" Z="31.97799" />
          <Vector3 X="-10931.45" Y="920.202" Z="31.33497" />
          <Vector3 X="-10915.59" Y="889.5797" Z="31.75507" />
          <Vector3 X="-10920.6" Y="856.2755" Z="32.91013" />
          <Vector3 X="-10922.83" Y="821.0919" Z="31.89306" />
          <Vector3 X="-10911.06" Y="789.838" Z="30.75232" />
          <Vector3 X="-10889.28" Y="761.171" Z="31.09467" />
          <Vector3 X="-10877.69" Y="729.3841" Z="31.31396" />
          <Vector3 X="-10871.64" Y="693.8687" Z="30.89152" />
          <Vector3 X="-10867.87" Y="659.1234" Z="31.34671" />
          <Vector3 X="-10866.11" Y="635.1081" Z="31.34671" />
          <Vector3 X="-10864.29" Y="612.22" Z="31.34671" />
          <Vector3 X="-10860.71" Y="577.4391" Z="30.48844" />
          <Vector3 X="-10853.13" Y="544.3561" Z="30.46992" />
          <Vector3 X="-10843.38" Y="510.7447" Z="30.18975" />
          <Vector3 X="-10831.96" Y="476.5501" Z="29.81717" />
          <Vector3 X="-10822.46" Y="442.9412" Z="29.38889" />
          <Vector3 X="-10818.86" Y="409.2289" Z="29.38838" />
          <Vector3 X="-10815.82" Y="373.3246" Z="29.66078" />
          <Vector3 X="-10812.86" Y="338.5102" Z="30.097" />
          <Vector3 X="-10806.75" Y="304.057" Z="31.23248" />
          <Vector3 X="-10800.43" Y="270.7008" Z="30.48033" />
          <Vector3 X="-10793.92" Y="236.3105" Z="30.48033" />
          <Vector3 X="-10785.87" Y="201.1973" Z="30.04222" />
          <Vector3 X="-10772.09" Y="169.0598" Z="29.6178" />
          <Vector3 X="-10757.41" Y="137.3095" Z="29.09657" />
          <Vector3 X="-10752.28" Y="102.8856" Z="28.30755" />
          <Vector3 X="-10756.9" Y="68.27876" Z="29.02784" />
          <Vector3 X="-10768.02" Y="35.11837" Z="28.19371" />
          <Vector3 X="-10778.56" Y="2.888193" Z="29.65765" />
          <Vector3 X="-10788.99" Y="-31.58348" Z="29.47061" />
          <Vector3 X="-10799.53" Y="-63.84634" Z="29.24767" />
          <Vector3 X="-10812.45" Y="-97.50216" Z="29.291" />
          <Vector3 X="-10823.89" Y="-130.5792" Z="31.63329" />
          <Vector3 X="-10834.63" Y="-162.7858" Z="33.70169" />
          <Vector3 X="-10845.46" Y="-197.1653" Z="35.93522" />
          <Vector3 X="-10852.05" Y="-231.497" Z="38.80092" />
          <Vector3 X="-10857.45" Y="-266.0721" Z="38.18657" />
          <Vector3 X="-10868.13" Y="-298.2355" Z="37.87731" />
          <Vector3 X="-10881.44" Y="-331.7391" Z="37.95766" />
          <Vector3 X="-10895.02" Y="-363.9863" Z="38.88543" />
          <Vector3 X="-10902.55" Y="-398.1148" Z="40.96387" />
          <Vector3 X="-10905.97" Y="-432.9403" Z="42.80661" />
          <Vector3 X="-10907.99" Y="-467.8354" Z="47.48753" />
          <Vector3 X="-10910.27" Y="-502.7582" Z="51.45642" />
          <Vector3 X="-10916.05" Y="-537.1665" Z="54.13667" />
          <Vector3 X="-10929.55" Y="-569.3574" Z="54.14987" />
          <Vector3 X="-10947.16" Y="-598.2765" Z="55.18814" />
          <Vector3 X="-10958.46" Y="-632.1301" Z="55.18594" />
          <Vector3 X="-10948.2" Y="-664.9554" Z="55.75801" />
          <Vector3 X="-10927.11" Y="-692.6789" Z="55.54189" />
          <Vector3 X="-10910.11" Y="-723.2483" Z="54.84781" />
          <Vector3 X="-10889.66" Y="-750.3282" Z="55.48543" />
          <Vector3 X="-10863.85" Y="-775.4363" Z="55.90959" />
          <Vector3 X="-10841.74" Y="-802.3871" Z="56.29478" />
          <Vector3 X="-10825.53" Y="-833.3322" Z="55.60012" />
          <Vector3 X="-10811.92" Y="-865.549" Z="55.88069" />
          <Vector3 X="-10802.71" Y="-899.2677" Z="56.08248" />
          <Vector3 X="-10798.83" Y="-933.9576" Z="56.15833" />
          <Vector3 X="-10805.14" Y="-968.328" Z="56.30632" />
          <Vector3 X="-10806.29" Y="-1003.197" Z="52.02968" />
          <Vector3 X="-10804.08" Y="-1038.072" Z="45.74039" />
          <Vector3 X="-10792.76" Y="-1071.164" Z="38.40754" />
          <Vector3 X="-10781.7" Y="-1104.369" Z="31.99052" />
          <Vector3 X="-10765.57" Y="-1135.144" Z="27.26591" />
          <Vector3 X="-10739.17" Y="-1157.888" Z="26.37264" />
          <Vector3 X="-10709.76" Y="-1176.865" Z="26.48277" />
          <Vector3 X="-10677.93" Y="-1191.145" Z="27.41069" />
          <Vector3 X="-10643.27" Y="-1190.763" Z="28.55301" />
          <Vector3 X="-10609.82" Y="-1180.623" Z="28.43714" />
          <Vector3 X="-10577.09" Y="-1179.151" Z="28.26548" />
          <Vector3 X="-10569.14" Y="-1168.31" Z="28.04483" />
          <Vector3 X="-10564.42" Y="-1162.408" Z="27.40085" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>true</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition>return (Quest.GetQuestCompleted(68)  || new Vector3(-10564.42f, -1162.408f, 27.40085f).DistanceTo(ObjectManager.Me.Position) &lt; 20);</IsCompleteCondition>
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Wolves at Our Heels</Name>
      <QuestId>
        <int>226</int>
      </QuestId>
      <QuestType>KillAndLoot</QuestType>
      <QuestClass xsi:type="KillAndLootEasyQuestClass">
        <HotSpots>
          <Vector3 X="-10300.31" Y="529.7469" Z="40.55428" />
          <Vector3 X="-10230.12" Y="472.1119" Z="33.17046" />
          <Vector3 X="-10164.35" Y="340.4206" Z="30.04677" />
          <Vector3 X="-10189.83" Y="260.7354" Z="23.21611" />
          <Vector3 X="-10199.33" Y="102.7527" Z="29.27992" />
          <Vector3 X="-10187.13" Y="9.296657" Z="28.55438" />
          <Vector3 X="-10140.76" Y="-136.3903" Z="29.75907" />
        </HotSpots>
        <EntryTarget>
          <int>565</int>
          <int>213</int>
        </EntryTarget>
        <IsGrinderNotQuest>false</IsGrinderNotQuest>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>true</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>true</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>Zombie Juice</Name>
      <QuestId>
        <int>158</int>
      </QuestId>
      <QuestType>None</QuestType>
      <QuestClass />
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>false</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
    <EasyQuest>
      <Name>ROUTEStormwindToHermit</Name>
      <QuestId />
      <QuestType>FollowPath</QuestType>
      <QuestClass xsi:type="FollowPathEasyQuestClass">
        <Path>
          <Vector3 X="-8833.38" Y="628.628" Z="94.0066" />
          <Vector3 X="-8847.898" Y="608.1158" Z="92.46163" />
          <Vector3 X="-8872.076" Y="583.0723" Z="92.8296" />
          <Vector3 X="-8900.115" Y="562.1318" Z="92.93863" />
          <Vector3 X="-8907.703" Y="556.6055" Z="93.4662" />
          <Vector3 X="-8915.563" Y="550.6747" Z="93.97702" />
          <Vector3 X="-8923.959" Y="543.3618" Z="94.25758" />
          <Vector3 X="-8924.305" Y="534.1926" Z="94.72015" />
          <Vector3 X="-8917.457" Y="526.2541" Z="94.56045" />
          <Vector3 X="-8912.643" Y="517.0125" Z="93.86546" />
          <Vector3 X="-8913.945" Y="506.1036" Z="93.86952" />
          <Vector3 X="-8919.812" Y="498.3614" Z="93.87478" />
          <Vector3 X="-8929.925" Y="497.7468" Z="93.85213" />
          <Vector3 X="-8938.194" Y="505.002" Z="94.70457" />
          <Vector3 X="-8944.273" Y="512.3193" Z="96.36817" />
          <Vector3 X="-8952.341" Y="519.3653" Z="96.35705" />
          <Vector3 X="-8962.227" Y="515.5383" Z="96.35705" />
          <Vector3 X="-8973.551" Y="506.2207" Z="96.36861" />
          <Vector3 X="-8991.125" Y="492.3329" Z="96.56242" />
          <Vector3 X="-9011.722" Y="476.0582" Z="96.46775" />
          <Vector3 X="-9031.04" Y="460.7924" Z="93.32294" />
          <Vector3 X="-9052.913" Y="443.5086" Z="93.05616" />
          <Vector3 X="-9072.316" Y="428.3493" Z="93.05616" />
          <Vector3 X="-9095.23" Y="410.155" Z="92.25603" />
          <Vector3 X="-9124.644" Y="387.4323" Z="91.33241" />
          <Vector3 X="-9145.482" Y="370.6395" Z="90.48714" />
          <Vector3 X="-9162.648" Y="350.8857" Z="87.72218" />
          <Vector3 X="-9174.887" Y="327.7437" Z="81.80029" />
          <Vector3 X="-9180.009" Y="302.0717" Z="78.46261" />
          <Vector3 X="-9180.736" Y="274.2055" Z="75.20538" />
          <Vector3 X="-9183.744" Y="248.2003" Z="73.32438" />
          <Vector3 X="-9195.344" Y="226.5519" Z="71.67889" />
          <Vector3 X="-9213.309" Y="205.2731" Z="69.60393" />
          <Vector3 X="-9230.293" Y="185.2859" Z="67.78884" />
          <Vector3 X="-9247.631" Y="165.6321" Z="67.89357" />
          <Vector3 X="-9270.657" Y="153.3942" Z="67.05351" />
          <Vector3 X="-9295.521" Y="145.0387" Z="66.08766" />
          <Vector3 X="-9319.167" Y="133.6408" Z="64.44276" />
          <Vector3 X="-9340.908" Y="122.087" Z="63.30317" />
          <Vector3 X="-9366.199" Y="110.4137" Z="61.13762" />
          <Vector3 X="-9390.498" Y="100.4993" Z="59.14293" />
          <Vector3 X="-9413.445" Y="87.77002" Z="57.20588" />
          <Vector3 X="-9423.195" Y="81.67746" Z="56.67598" />
          <Vector3 X="-9431.52" Y="76.47275" Z="56.20427" />
          <Vector3 X="-9456.544" Y="64.90136" Z="55.97192" />
          <Vector3 X="-9464.749" Y="64.11924" Z="55.86138" />
          <Vector3 X="-9476.102" Y="62.29822" Z="56.14811" />
          <Vector3 X="-9496.38" Y="47.44281" Z="55.90163" />
          <Vector3 X="-9511.495" Y="24.0738" Z="56.54505" />
          <Vector3 X="-9518.892" Y="8.550118" Z="56.17239" />
          <Vector3 X="-9531.514" Y="-14.44872" Z="55.97178" />
          <Vector3 X="-9540.768" Y="-26.98457" Z="56.18782" />
          <Vector3 X="-9547.213" Y="-30.85974" Z="56.82044" />
          <Vector3 X="-9555.651" Y="-35.93809" Z="59.4258" />
          <Vector3 X="-9566.5" Y="-37.9767" Z="60.99018" />
          <Vector3 X="-9576.349" Y="-38.01779" Z="61.48813" />
          <Vector3 X="-9587.458" Y="-37.09702" Z="61.17641" />
          <Vector3 X="-9596.094" Y="-32.41888" Z="60.04759" />
          <Vector3 X="-9604.784" Y="-27.85535" Z="58.3938" />
          <Vector3 X="-9614.949" Y="-25.23256" Z="53.77015" />
          <Vector3 X="-9625.813" Y="-22.71829" Z="48.06918" />
          <Vector3 X="-9636" Y="-20.18314" Z="44.51253" />
          <Vector3 X="-9645.34" Y="-17.05966" Z="45.01196" />
          <Vector3 X="-9654.989" Y="-12.92105" Z="45.75452" />
          <Vector3 X="-9666.852" Y="-7.852117" Z="45.3804" />
          <Vector3 X="-9682.715" Y="-3.722333" Z="43.06641" />
          <Vector3 X="-9701.002" Y="-0.4043415" Z="41.01876" />
          <Vector3 X="-9715.018" Y="2.138826" Z="40.28526" />
          <Vector3 X="-9721.477" Y="3.197291" Z="40.32624" />
          <Vector3 X="-9738.728" Y="6.141634" Z="38.24888" />
          <Vector3 X="-9755.658" Y="10.52937" Z="34.59122" />
          <Vector3 X="-9772.755" Y="14.12768" Z="32.59377" />
          <Vector3 X="-9789.145" Y="13.59424" Z="31.91998" />
          <Vector3 X="-9807.326" Y="10.07977" Z="28.36427" />
          <Vector3 X="-9823.324" Y="3.01121" Z="26.39792" />
          <Vector3 X="-9839.889" Y="-2.503743" Z="26.38272" />
          <Vector3 X="-9855.963" Y="-5.831937" Z="26.53979" />
          <Vector3 X="-9874.391" Y="-8.173388" Z="26.49729" />
          <Vector3 X="-9891.864" Y="-9.095009" Z="30.38582" />
          <Vector3 X="-9909.227" Y="-11.26894" Z="31.94983" />
          <Vector3 X="-9926.679" Y="-12.41374" Z="32.15154" />
          <Vector3 X="-9944.176" Y="-12.76478" Z="34.05527" />
          <Vector3 X="-9961.675" Y="-12.92233" Z="34.18301" />
          <Vector3 X="-9978.084" Y="-12.61923" Z="35.40522" />
          <Vector3 X="-9996.588" Y="-10.89806" Z="34.68971" />
          <Vector3 X="-10014.02" Y="-9.499976" Z="35.0483" />
          <Vector3 X="-10031.37" Y="-11.36685" Z="32.32008" />
          <Vector3 X="-10044.03" Y="-14.82461" Z="28.76717" />
          <Vector3 X="-10057.41" Y="-19.61688" Z="24.12665" />
          <Vector3 X="-10069.45" Y="-25.15921" Z="19.61585" Type="Swimming" />
          <Vector3 X="-10073.73" Y="-27.11845" Z="20.18294" />
          <Vector3 X="-10078.05" Y="-29.02299" Z="19.88077" Type="Swimming" />
          <Vector3 X="-10082.38" Y="-30.90339" Z="19.88077" Type="Swimming" />
          <Vector3 X="-10086.78" Y="-32.81387" Z="19.88077" Type="Swimming" />
          <Vector3 X="-10091.04" Y="-34.66418" Z="19.88077" Type="Swimming" />
          <Vector3 X="-10095.44" Y="-36.57467" Z="19.88077" Type="Swimming" />
          <Vector3 X="-10099.78" Y="-38.45534" Z="19.88077" Type="Swimming" />
          <Vector3 X="-10106.67" Y="-43.16493" Z="22.01529" />
          <Vector3 X="-10111.75" Y="-50.42122" Z="24.04607" />
          <Vector3 X="-10117.59" Y="-58.7436" Z="25.50257" />
          <Vector3 X="-10121.17" Y="-63.84604" Z="25.9563" />
          <Vector3 X="-10190.28" Y="78.60307" Z="26.50083" />
          <Vector3 X="-10192.35" Y="83.93766" Z="26.66854" />
          <Vector3 X="-10196.26" Y="92.74776" Z="28.3329" />
          <Vector3 X="-10202.26" Y="101.7539" Z="30.1233" />
          <Vector3 X="-10208.12" Y="110.4468" Z="31.53183" />
          <Vector3 X="-10213.62" Y="119.3875" Z="31.50588" />
          <Vector3 X="-10221.17" Y="126.4306" Z="31.39943" />
          <Vector3 X="-10229.98" Y="128.8239" Z="32.49516" />
          <Vector3 X="-10241.43" Y="125.9062" Z="32.62914" />
          <Vector3 X="-10251.61" Y="123.3151" Z="34.80885" />
          <Vector3 X="-10261.49" Y="119.8145" Z="36.83038" />
          <Vector3 X="-10270.74" Y="115.5952" Z="37.75968" />
          <Vector3 X="-10280.58" Y="111.0617" Z="37.90079" />
          <Vector3 X="-10288.73" Y="104.573" Z="38.04141" />
          <Vector3 X="-10292.33" Y="94.90362" Z="38.38495" />
          <Vector3 X="-10289.66" Y="84.89054" Z="38.71374" />
        </Path>
        <IsCompleteWhenAtLastPath>true</IsCompleteWhenAtLastPath>
        <ForceToStartFirstPosition>false</ForceToStartFirstPosition>
        <IsHotSpots>false</IsHotSpots>
        <IsLoop>false</IsLoop>
      </QuestClass>
      <ObjectiveCount1>0</ObjectiveCount1>
      <ObjectiveCount2>0</ObjectiveCount2>
      <ObjectiveCount3>0</ObjectiveCount3>
      <ObjectiveCount4>0</ObjectiveCount4>
      <ObjectiveCount5>0</ObjectiveCount5>
      <AutoDetectObjectiveCount1>false</AutoDetectObjectiveCount1>
      <AutoDetectObjectiveCount2>false</AutoDetectObjectiveCount2>
      <AutoDetectObjectiveCount3>false</AutoDetectObjectiveCount3>
      <AutoDetectObjectiveCount4>false</AutoDetectObjectiveCount4>
      <AutoDetectObjectiveCount5>false</AutoDetectObjectiveCount5>
      <CanCondition />
      <IsCompleteCondition />
      <RepeatableQuest>false</RepeatableQuest>
      <NotRequiredInQuestLog>true</NotRequiredInQuestLog>
      <PickUpQuestOnItem>false</PickUpQuestOnItem>
      <PickUpQuestOnItemID>0</PickUpQuestOnItemID>
      <Comment />
      <GossipOptionRewardItem>1</GossipOptionRewardItem>
      <RequiredQuest>0</RequiredQuest>
      <MaxLevel>100</MaxLevel>
      <MinLevel>0</MinLevel>
      <WoWClass>None</WoWClass>
    </EasyQuest>
  </EasyQuests>
  <Script>using robotManager.Helpful;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Threading;
using wManager.Events;
using wManager.Wow.Bot.Tasks;
using wManager.Wow.Enums;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;
using System.ComponentModel;
using System.Configuration;
using System.Net;
using System.Windows.Forms;
using robotManager.Products;
using System.Threading.Tasks;



//FlightMaster
public class FlightMaster
{

    private int priority;

    public FlightMaster(int priority)
    {
        this.priority = priority;
    }

    public static void main(String[] args)
    {
        FlightMaster temp = new FlightMaster(1);
        Logging.Write("Stuff");
    }


    public static int timer = 0;
    public static Vector3 myPositionAtStart = new Vector3(0, 0, 0);
    public static bool _deleteOldPath = false;
    public static bool _isLaunched ;
    static bool longMoveState = false;
    static Vector3 checkDistanceToDestination;
    private static int travelDistance = 1250;
    private static float saveDistance;
    public static Vector3 destinationVector = new Vector3(0, 0, 0);

    //public static MovementEvents.MovementCancelableHandler MovementEventsOnOnMovementPulse { get; private set; }

    // public static List&lt;FlightMasterDB&gt; FML = fillDB();

    public void startFlightMaster()
    {
        Logging.Write("[FNV_Quester]: Flight Master initialized");
        _isLaunched = true;
        FNVQuesterFlightMaster.Load();
        //flightMasterLoop();
    }

    public void start()
    {
        //Logging.Write("Subscribing to event");
       // SubscribeToEvent();
       // watchForEvents();
    }

    public void stop()
    {
        //Logging.Write("Unsubscribing to event");
        //UnSubscribeEvents();
    }

    public static void disposeFlightMaster()
    {
        _isLaunched = false;
        FNVQuesterFlightMaster.CurrentSettings.Save();
        //clearOldPath();
        //_deleteOldPath = true;
        //UnSubscribeEvents();
        //MovementEvents.OnMovementPulse -= new MovementEvents.MovementCancelableHandler(FlightMaster.MovementEventsOnOnMovementPulse);
        //Logging.Write("[FNV_Quester]: Flight Master disposed");
    }

    public static void disposeFlightMaster(int wert)
    {
        _isLaunched = false;
        if(wert == 1)
        {
            Logging.Write("Flight Master stopped, dead");
        }
        else
        {
            Logging.Write("Flight Master stopped, combat");
        }
    }


    private void SubscribeToEvent()
    {
         MovementEvents.OnMovementPulse += MovementEventsOnOnMovementPulse;
    }

    public void UnSubscribeEvents()
    {
        MovementEvents.OnMovementPulse -= MovementEventsOnOnMovementPulse;
    }

    private void watchForEvents()
    {

        EventsLuaWithArgs.OnEventsLuaWithArgs += (LuaEventsId id, List&lt;string&gt; args) =&gt;
        {


            if (id == wManager.Wow.Enums.LuaEventsId.PLAYER_DEAD)
            {
                Logging.Write("[FNV_Quester]: Player died, stop Flight Master");
                disposeFlightMaster(1);
            }
            if (id == wManager.Wow.Enums.LuaEventsId.PLAYER_ENTER_COMBAT)
            {
                disposeFlightMaster(2);
          		  Logging.Write("[FNV_Quester]: Player entered combat, stop Flight Master");
            }

        };

    }


    private void MovementEventsOnOnMovementPulse(List&lt;Vector3&gt; path, CancelEventArgs cancelEventArgs)
    {
        if(timer &lt; 1)
        {
            checkDistanceToDestination = path.Last&lt;Vector3&gt;();
            longMove(path.Last&lt;Vector3&gt;());
            destinationVector = path.Last&lt;Vector3&gt;();
            if(ObjectManager.Me.Position.DistanceTo(destinationVector) &gt; 1000 &amp;&amp; !_isLaunched)
                startFlightMaster();
        }
        else
        {
            Logging.Write("[FNV_Quester]: Taxi in Pause");
        }
    }

    public bool longMove(Vector3 destination)
    {
        saveDistance = new Vector3(destination).DistanceTo(ObjectManager.Me.Position);
        if(new Vector3(destination).DistanceTo(ObjectManager.Me.Position) &lt; travelDistance)
        {
            longMoveState = false;
            return false;
        }
        else
        {
            longMoveState = true;
            return true;
        }
    }


    public static FlightMasterDB getClosestFlightMasterFrom()
    {
        List&lt;FlightMasterDB&gt; FMLnfmd = fillDB();
        float tempDistance = 99999;
        FlightMasterDB returnObject = new FlightMasterDB("null", 0, new Vector3(0, 0, 0), false);

        foreach(var a in FMLnfmd)
        {
            if(a.alreadyDiscovered &amp;&amp; a.position.DistanceTo(ObjectManager.Me.Position) &lt; tempDistance &amp;&amp; (a.continent == checkContinent()))
            {
                tempDistance = a.position.DistanceTo(ObjectManager.Me.Position);
                returnObject = a;
            }
        }
        return returnObject;
    }

    public static FlightMasterDB getClosestFlightMasterTo()
    {
        List&lt;FlightMasterDB&gt; FMLgcfmt = fillDB();
        float tempDistance = 99999;
        FlightMasterDB returnObject = new FlightMasterDB("null", 0, new Vector3(0, 0, 0), false);

        foreach(var a in FMLgcfmt)
        {
            if(a.alreadyDiscovered &amp;&amp; a.position.DistanceTo(destinationVector) &lt; tempDistance &amp;&amp; (a.continent == checkContinent()))
            {
                tempDistance = a.position.DistanceTo(destinationVector);
                returnObject = a;
            }
        }
        return returnObject;
    }

    public static bool checkContinent()
    {
        if(Usefuls.ContinentId == (int)ContinentId.Kalimdor)
        {
            return true;
        }
        else
        {
            return false;
        }
        
    }

    public static void waitFlying()
    {

        while(ObjectManager.Me.IsOnTaxi)
        {
            Logging.Write("[FNV_Quester]: On taxi, waiting");
            Thread.Sleep(30000);
        }

        Logging.Write("[FNV_Quester]: Arrived at destination Flight Master, finished waiting");
    }

    public static List&lt;FlightMasterDB&gt; fillDB()
    {
        //True = Kalimdor ; False = Eastern Kingdoms
        List&lt;FlightMasterDB&gt; FMListe = new List&lt;FlightMasterDB&gt;();
        FlightMasterDB Stormwind = new FlightMasterDB("Stormwind", 352, new Vector3(-8835.76f, 490.084f, 109.6157f), false);
        FMListe.Add(Stormwind);
        FlightMasterDB ArathiHighlands = new FlightMasterDB("Arathi", 2835, new Vector3(-1240.03f, -2513.96f, 21.92969f), false);
        FMListe.Add(ArathiHighlands);
        FlightMasterDB Ashenvale = new FlightMasterDB("Ashenvale", 4267, new Vector3(2828.4f, -284.3f, 106.7f), true);
        FMListe.Add(Ashenvale);
        FlightMasterDB Darkshore = new FlightMasterDB("Darkshore", 3841, new Vector3(6343.2f, 561.651f, 15.79876f), true);
        FMListe.Add(Darkshore);
        FlightMasterDB Stranglethorn = new FlightMasterDB("Stranglethorn", 2859, new Vector3(-14477.9f, 464.101f, 36.38163f), false);
        FMListe.Add(Stranglethorn);
        FlightMasterDB Duskwood = new FlightMasterDB("Duskwood", 2409, new Vector3(-10513.8f, -1258.79f, 41.43174f), false);
        FMListe.Add(Duskwood);
        FlightMasterDB FeralasFeathermoon = new FlightMasterDB("Feralas, Feathermoon", 8019, new Vector3(-4370.5f, 3340f, 12f), true);
        FMListe.Add(FeralasFeathermoon);
        FlightMasterDB FeralasThalanaar = new FlightMasterDB("Feralas, Thalanaar", 4319, new Vector3(-4491f, -781f, -40f), true);
        FMListe.Add(FeralasThalanaar);
        FlightMasterDB Tanaris = new FlightMasterDB("Tanaris", 7823, new Vector3(-7224.9f, -3738.2f, 8.4f), true);
        FMListe.Add(Tanaris);
        FlightMasterDB Hinterlands = new FlightMasterDB("The Hinterlands", 8018, new Vector3(282.1f, -2001.3f, 194.1f), false);
        FMListe.Add(Hinterlands);
        FlightMasterDB Ironforge = new FlightMasterDB("Ironforge", 1573, new Vector3(-4821.13f, -1152.4f, 502.2116f), false);
        FMListe.Add(Ironforge);
        FlightMasterDB Menethil = new FlightMasterDB("Wetlands", 1571, new Vector3(-3793.2f, -782.052f, 9.014864f), false);
        FMListe.Add(Menethil);
        FlightMasterDB TheBarrens = new FlightMasterDB("The Barrens", 16227, new Vector3(-898.246f, -3769.65f, 11.71021f), true);
        FMListe.Add(TheBarrens);
        FlightMasterDB Redridge = new FlightMasterDB("Redridge Mountains", 931, new Vector3(-9435.8f, -2234.79f, 69.43174f), false);
        FMListe.Add(Redridge);
        FlightMasterDB Teldrassil = new FlightMasterDB("Teldrassil", 3838, new Vector3(8640.58f, 841.118f, 23.26363f), true);
        FMListe.Add(Teldrassil);
        FlightMasterDB Southshore = new FlightMasterDB("Hillsbrad Foothiils", 2432, new Vector3(-715.146f, -512.134f, 26.54455f), false);
        FMListe.Add(Southshore);
        FlightMasterDB Stonetalon = new FlightMasterDB("Stonetalon Mountains", 4407, new Vector3(2682.83f, 1466.45f, 233.6483f), true);
        FMListe.Add(Stonetalon);
        FlightMasterDB Thelsamar = new FlightMasterDB("Loch Modan", 1572, new Vector3(-5424.85f, -2929.87f, 347.5623f), false);
        FMListe.Add(Thelsamar);
        FlightMasterDB Theramore = new FlightMasterDB("Dustwallow Marsh", 4321, new Vector3(-3828.88f, -4517.51f, 10.66067f), true);
        FMListe.Add(Theramore);
        FlightMasterDB WesternP = new FlightMasterDB("Western Pleaguelands", 12596, new Vector3(928.3f, -1429.1f, 64.8f), false);
        FMListe.Add(WesternP);
        FlightMasterDB Westfall = new FlightMasterDB("Westfall", 523, new Vector3(-10628.8f, 1037.79f, 34.43174f), false);
        FMListe.Add(Westfall);
        FlightMasterDB EasternP = new FlightMasterDB("Eastern Pleaguelands", 12617, new Vector3(2269.9f, -5345.4f, 86.9f), false);
        FMListe.Add(EasternP);
        FlightMasterDB SearingGorge = new FlightMasterDB("Searing Gorge", 2941, new Vector3(-6559.1f, -1169.4f, 309.8f), false);
        FMListe.Add(SearingGorge);
        FlightMasterDB BurningSteppes = new FlightMasterDB("Burning Steppes", 2299, new Vector3(-8365.1f, -2758.5f, 185.6f), false);
        FMListe.Add(BurningSteppes);
        FlightMasterDB Azshara = new FlightMasterDB("Azshara", 12577, new Vector3(2718.2f, -3880.8f, 101.4f), true);
        FMListe.Add(Azshara);
        FlightMasterDB Felwood = new FlightMasterDB("Felwood", 12578, new Vector3(6204.2f, -1951.4f, 571.3f), true);
        FMListe.Add(Felwood);
        FlightMasterDB Winterspring = new FlightMasterDB("Winterspring", 11138, new Vector3(6800.5f, -4742.4f, 701.5f), true);
        FMListe.Add(Winterspring);
        FlightMasterDB UngoroCreater = new FlightMasterDB("Ungoro Crater", 10583, new Vector3(-6110.5f, -1140.4f, -186.9f), true);
        FMListe.Add(UngoroCreater);
        FlightMasterDB Silithus = new FlightMasterDB("Silithus", 15177, new Vector3(-6758.6f, 775.6f, 89f), true);
        FMListe.Add(Silithus);
        FlightMasterDB Desolace = new FlightMasterDB("Desolace", 6706, new Vector3(136f, 1326f, 193f), true);
        FMListe.Add(Desolace);
        return FMListe;
    }

    public static bool validFlight(String from, String to)
    {
        bool von = false;
        bool zu = false;
        List&lt;FlightMasterDB&gt; FMLvf = fillDB();

        for(int i = 0; i &lt; FMLvf.Count; i++)
        {
            if(FMLvf[i].name.Contains(from))
            {
                von = FMLvf[i].continent;
            }
            if(FMLvf[i].name.Contains(to))
            {
                zu = FMLvf[i].continent;
            }
        }
        return von != zu;
    }

    public static bool discoveredTaxiNodes(String from, String to)
    {

        List&lt;FlightMasterDB&gt; FMLDTN = fillDB();

        foreach(var ele in FMLDTN)
        {
            if(ele.name.Contains(from))
            {
                if(!ele.alreadyDiscovered)
                {
                    Logging.Write("[FNV_Quester]: Taxi node from " + ele.name + " has not been discovered so far. Abort taking taxi.");
                    return false;
                }
            }
        }

        foreach(var ele in FMLDTN)
        {
            if(ele.name.Contains(to))
            {
                if(!ele.alreadyDiscovered)
                {
                    Logging.Write("[FNV_Quester]: Taxi node to " + ele.name + " has not been discovered so far. Abort taking taxi.");
                    return false;
                }
            }
        }
        return true;
    }

    public static void takeTaxi(String from, String to)
    {

        List&lt;FlightMasterDB&gt; FMLtt = fillDB();
        bool canProceed = true;
        try
        {
            FMLtt = fillDB();
        }
        catch(Exception e)
        {
            Logging.Write("Error: " + e);
        }


        Vector3 myPos = ObjectManager.Me.Position;

        if(Usefuls.MapZoneName.Contains(to))
        {
            canProceed = false;
            Logging.Write("[FNV_Quester]: Already in the zone we are going to travel to. Skip flying");
        }

        if(canProceed)
        {

            if(validFlight(from, to))
            {
                Logging.Write("[FNV_Quester]: Unable to fly between Kalimdor and Eastern Kingdoms");
            }

            var position = new Vector3();
            int npcEntryId = 0;

            for(int i = 0; i &lt; FMLtt.Count; i++)
            {
                if(FMLtt[i].name.Contains(from))
                {
                    position = FMLtt[i].position;
                    npcEntryId = FMLtt[i].NPCId;
                    FMLtt[i].name.Contains(from);
                }
            }


            if(!ObjectManager.Me.IsOnTaxi)
            {
                wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();

                while(!wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore) &amp;&amp; !Fight.InFight)
                {
                    wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
                    wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore);
                }
                if(wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore))
                {
                    while(!ObjectManager.Me.IsOnTaxi)
                    {
                        Usefuls.SelectGossipOption(GossipOptionsType.taxi);

                        int node = Lua.LuaDoString&lt;int&gt;("for i=0,30 do if string.find(TaxiNodeName(i),'" + to + "') then return i end end");
                        Lua.LuaDoString("TakeTaxiNode(" + node + ")");
                        Logging.Write("[FNV_Quester]: Taking Taxi from " + from + " to " + to);
                        Thread.Sleep(Usefuls.Latency + 2500);
                    }
                }
            }
            waitFlying();
            return;
        }
    }

    public static void discoverTaxi(String discoverName)
    {
        FNVQuesterFlightMaster.Load();
        List&lt;FlightMasterDB&gt; FMLdt = fillDB();

        var position = new Vector3();
        int npcEntryId = 0;
        int j = 0;
        bool alreadyDiscoveredFlightMaster = false;

        for(int i = 0; i &lt; FMLdt.Count; i++)
        {
            if(FMLdt[i].name.Contains(discoverName))
            {
                if(FMLdt[i].alreadyDiscovered)
                {
                    Logging.Write("[FNV_Quester]: Flight Master of " + FMLdt[i].name + " already discovered. Skip it.");
                    alreadyDiscoveredFlightMaster = true;
                    break;
                }

                position = FMLdt[i].position;
                npcEntryId = FMLdt[i].NPCId;
                j = i;
            }
        }

        if(!alreadyDiscoveredFlightMaster)
        {

            if(!ObjectManager.Me.IsOnTaxi)
            {
                wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();

                while(!wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore))
                {
                   // wManager.Wow.Helpers.Conditions.ForceIgnoreIsAttacked = true;
                    wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
                    wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore);
                }
                if(wManager.Wow.Bot.Tasks.GoToTask.ToPositionAndIntecractWithNpc(position, npcEntryId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore))
                {
                    Usefuls.SelectGossipOption(GossipOptionsType.taxi);
                    Thread.Sleep(Usefuls.Latency + 250);
                    //wManager.Wow.Helpers.Conditions.ForceIgnoreIsAttacked = true;
                }
            }
            Logging.Write("[FNV_Quester]: Flight Master " + FMLdt[j].name + " discovered");
            FMLdt[j].alreadyDiscovered = true;
            FNVQuesterFlightMaster.flightMasterSaveChanges(FMLdt[j]);
            //wManager.Wow.Helpers.Conditions.ForceIgnoreIsAttacked = false;
            
        }
        timer = 0;
        return;
    }

    }

    public class FlightMasterDB
    {
        public FlightMasterDB(String name, int NPCId, Vector3 position, bool continent, bool alreadyDiscovered)
        {
            this.name = name;
            this.NPCId = NPCId;
            this.position = position;
            this.continent = continent;
            this.alreadyDiscovered = alreadyDiscovered;
        }

        public FlightMasterDB(String name, int NPCId, Vector3 position, bool continent)
        {
            this.name = name;
            this.NPCId = NPCId;
            this.position = position;
            this.continent = continent;
            
        }

        public int NPCId { get; set; }
        public Vector3 position { get; set; }
        public String name { get; set; }
        public bool continent { get; set; }
        public bool alreadyDiscovered { get; set; }

    }

//Tram
public class Tram
{

    //Stormwind to Ironforge
    static Vector3 positionTramInIronforge = new Vector3(4.58065, 28.2097, 6.90526);
    static Vector3 positionTramInStormwind = new Vector3(4.581913, 2511.531, 7.091796);

    static Vector3 positionWaitTramIronforge = new Vector3(19.1, 28, -4.3);
    static Vector3 positionOnTramIronforge = new Vector3(4.8, 28.1, -4.3);

    static Vector3 positionWaitTramStormwind = new Vector3(15.3, 2510.4, -4.3);
    static Vector3 positionOnTramStormwind = new Vector3(4.3, 2510.6, -4.3);

    static Vector3 enterStormwindInside = new Vector3(67, 2490.7, -4.3);
    static Vector3 enterIronforgeInside = new Vector3(64.5, 10.2, -4.3);

    static Vector3 enterStormwindOutside = new Vector3(-8365, 536.9, 91.8);
    static Vector3 enterIronforgeOutside = new Vector3(-4836.7, -1304.6, 501.9);

    static Vector3 leavePosIronforge = new Vector3(-10.6, 30.2, -4.3);
    static Vector3 leavePosStormwind = new Vector3(-10.6, 2510.9, -4.3);

    static Vector3 playerFellDownIronforge = new Vector3(4.5, 28, -13.9);

    static int[] tramEntryArray = new int[6] { 176080, 176082, 176083, 176084, 176085, 176081 };

    //Ironforge to Stormwind
    static Vector3 waitPosPlayerInStormwindToIronforge = new Vector3(-32.8, 2512.1, -4.3);

    //Pos where upper Tram arrives and waits in Stormwind
    static Vector3 waitPosTramSwTramStormwind = new Vector3(-45.4007, 2512.15, 6.90526);
    //Pos where player waits on upper tram in Stormwind
    static Vector3 waitPosPlayerSwTramStormwind = new Vector3(-45.20206, 2512.266, -3.562748);

    static Vector3 waitPosSwTramIronforge = new Vector3(-45.399, 30.38013, 5.877773);

    static Vector3 leavePosSwTramIronforge = new Vector3(-61.8, 30.3, -4.3);
    static Vector3 waitPlayerOnTramPosSwTramIronforge = new Vector3(-34.49804, 2511.917, -4.3);
    static Vector3 posPlayerOnTramSwToIfInIronforge = new Vector3(-20.9837, 2459.93, -4.297);

    static Vector3 playerFellDownStormwind = new Vector3(-45, 2512.6, -13.9);

    static bool isRestarted = false;
    static Process[] pname = Process.GetProcessesByName(AppDomain.CurrentDomain.FriendlyName.Remove(AppDomain.CurrentDomain.FriendlyName.Length - 4));
    static Vector3 nullVector = new Vector3(0, 0, 0);


    public static void restartTram(String from)
    {
        switch(from)
        {
            case ("Stormwind"):
                takeTramStormwind();
                break;
            case ("Ironforge"):
                takeTramIronforge();
                break;
            default:
                Logging.Write("Something failed");
                break;
        }
    }

    public static void end()
    {
        Logging.Write("[FNV_Quester]: Ending Tream");
    }



    public static void takeTramStormwind()
    {
        Logging.Write("[FNV_Quester]: Taking Tram from Stormwind to Ironforge");

        if(!Usefuls.MapZoneName.Contains("Deep"))
        {
            while(!GoToTask.ToPosition(enterStormwindOutside))
            {
                GoToTask.ToPosition(enterStormwindOutside);
                Thread.Sleep(250);
            }

            wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;
            Logging.Write("[FNV_Quester]: Disable teleport during Tram");
            wManager.Wow.Helpers.MovementManager.Face(new Vector3(-8353.4, 521.4, 91.8));

            while(!Usefuls.MapZoneName.Contains("Deep"))
            {
                wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 250);
                Thread.Sleep(robotManager.Helpful.Others.Random(25, 50));
            }

        }

        if(Usefuls.MapZoneName.Contains("Deep"))
        {
            if(!GoToTask.ToPosition(enterStormwindInside))
            {
                GoToTask.ToPosition(enterStormwindInside);
                Thread.Sleep(250);
            }
            while(!GoToTask.ToPosition(waitPosPlayerInStormwindToIronforge))
            {
                GoToTask.ToPosition(waitPosPlayerInStormwindToIronforge);
                Thread.Sleep(250);
            }

            wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;
            var tram = (WoWGameObject)null;

            try
            {
                tram = chooseTramStormwind();
            }
            catch
            {

            }


            if(tram != null &amp;&amp; ObjectManager.Me.Position.DistanceTo(tram.Position) &lt; 200 &amp;&amp; !tram.Position.Equals(nullVector))
            {
                Logging.Write("[FNV_Quester]: Bad circle, restart... .");
                isRestarted = true;
                takeTramStormwind();
                end();
            }

            if(!isRestarted)
            {

                if(tram != null &amp;&amp; tram.Position.DistanceTo(nullVector) &gt; 1)
                {
                    while(tram.Position.DistanceTo(waitPosTramSwTramStormwind) &gt;= 5 || ObjectManager.Me.Position.DistanceTo(waitPosPlayerInStormwindToIronforge) &gt;= 5)
                    {
                        Thread.Sleep(500);
                    }

                    if(tram.Position.DistanceTo(waitPosTramSwTramStormwind) &lt; 5)
                    {
                        Lua.LuaDoString("ClearTarget()");
                        wManager.Wow.Helpers.MovementManager.Face(waitPosPlayerSwTramStormwind);

                        while(ObjectManager.Me.Position.DistanceTo(waitPosPlayerSwTramStormwind) &gt; 1)
                        {
                            MovementManager.MoveTo(waitPosPlayerSwTramStormwind);
                            Thread.Sleep(1000);

                            if(ObjectManager.Me.Position.DistanceTo(playerFellDownStormwind) &lt; 4)
                            {
                                Logging.Write("[FNV_Quester]: Fell down, while trying to take tram. Restart...");
                                restartTram("Stormwind");
                            }
                        }

                        GoToTask.ToPosition(waitPosPlayerSwTramStormwind);
                    }

                    while(tram.Position.DistanceTo(waitPosSwTramIronforge) &gt; 5)
                    {
                        Thread.Sleep(3000);
                    }

                    if(ObjectManager.Me.HaveBuff("Stealth"))
                    {
                        Lua.LuaDoString("CastSpellByName('Stealth')");
                    }

                    wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 1500);

                    if(ObjectManager.Me.Position.DistanceTo(posPlayerOnTramSwToIfInIronforge) &lt; 5)
                    {
                        MovementManager.MoveTo(leavePosSwTramIronforge);
                        Thread.Sleep(1000);

                        while(ObjectManager.Me.Position.DistanceTo(leavePosSwTramIronforge) &gt; 4)
                        {
                            MovementManager.MoveTo(leavePosSwTramIronforge);
                            Thread.Sleep(1000);
                        }
                    }

                    if(Usefuls.MapZoneName.Contains("Deep"))
                    {
                        if(!GoToTask.ToPosition(enterIronforgeInside))
                        {
                            GoToTask.ToPosition(enterIronforgeInside);
                            Thread.Sleep(250);
                        }
                    }

                    while(Usefuls.MapZoneName.Contains("Deep"))
                    {
                        wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 250);
                        Thread.Sleep(robotManager.Helpful.Others.Random(25, 50));
                    }

                    Logging.Write("[FNV_Quester]: Re enable teleport ");
                    wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;


                    while(!GoToTask.ToPosition(enterIronforgeOutside))
                    {
                        wManager.Wow.Helpers.MovementManager.Face(enterIronforgeOutside);
                        GoToTask.ToPosition(enterIronforgeOutside);
                        Thread.Sleep(250);
                    }

                }
                else if(Usefuls.MapZoneName.Contains("Tram") || Usefuls.MapZoneName.Contains("Stormwind"))
                {
                    Logging.Write("[FNV_Quester]: Unable to find tram, restart... .");
                    isRestarted = true;
                    restartTram("Stormwind");
                }

            }
        }

        isRestarted = false;
    }

    public static WoWGameObject chooseTramIronforge()
    {
        List&lt;WoWGameObject&gt; tramList = new List&lt;WoWGameObject&gt;();
        var tramTemp = (WoWGameObject)null;

        foreach(int ele in tramEntryArray)
        {
            tramTemp = null;
            try
            {
                tramTemp = ObjectManager.GetWoWGameObjectByEntry(ele).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
            }
            catch
            {
            }

            if(tramTemp != null &amp;&amp; tramTemp.IsValid &amp;&amp; !tramTemp.Equals((WoWGameObject)null) &amp;&amp; tramTemp.ToString().Contains("Subway"))
            {
                tramList.Add(tramTemp);
            }
            else
            {

            }
        }

        float distance = 0;
        float entryDistance = 0;
        foreach(var ele in tramList)
        {
            if(ObjectManager.Me.Position.DistanceTo(ele.Position) &gt;= distance)
            {
                distance = ObjectManager.Me.Position.DistanceTo(ele.Position);
                entryDistance = ele.Entry;
            }
        }

        foreach(var ele in tramList)
        {
            if(ele.Entry == entryDistance &amp;&amp; ele != null &amp;&amp; !ele.Position.Equals(nullVector))
            {
                if(ObjectManager.Me.Position.DistanceTo(ele.Position) &lt; 200)
                {
                    Logging.Write("[FNV_Quester]: Bad circle, restart... .");
                    restartTram("Ironforge");
                }

                Logging.Write("[FNV_Quester]: Choosing tram id: " + ele.Entry + " with a current position of " + ele.Position);
                return ele;
            }
        }
        return null;
    }

    public static WoWGameObject chooseTramStormwind()
    {
        List&lt;WoWGameObject&gt; tramList = new List&lt;WoWGameObject&gt;();
        var tramTemp = (WoWGameObject)null;

        foreach(int ele in tramEntryArray)
        {
            tramTemp = null;
            try
            {
                tramTemp = ObjectManager.GetWoWGameObjectByEntry(ele).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
            }
            catch
            {
            }

            if(tramTemp != null &amp;&amp; tramTemp.IsValid &amp;&amp; !tramTemp.Equals((WoWGameObject)null) &amp;&amp; tramTemp.ToString().Contains("Subway"))
            {
                tramList.Add(tramTemp);
            }
            else
            {

            }
        }

        float distance = 99999;
        float entryDistance = 0;
        foreach(var ele in tramList)
        {
            if(ObjectManager.Me.Position.DistanceTo(ele.Position) &lt;= distance)
            {
                distance = ObjectManager.Me.Position.DistanceTo(ele.Position);
                entryDistance = ele.Entry;
            }
        }

        foreach(var ele in tramList)
        {
            if(ele.Entry == entryDistance &amp;&amp; ele != null &amp;&amp; !ele.Position.Equals(nullVector))
            {
                if(ObjectManager.Me.Position.DistanceTo(ele.Position) &lt; 200)
                {
                    Logging.Write("[FNV_Quester]: Bad circle, restart... .");
                    restartTram("Stormwind");
                }

                Logging.Write("[FNV_Quester]: Choosing tram id: " + ele.Entry + " with a current position of " + ele.Position);
                return ele;
            }
        }

        return null;
    }

    public static void takeTramIronforge()
    {
        Logging.Write("[FNV_Quester]: Taking Tram from Ironforge to Stormwind");

        if(!Usefuls.MapZoneName.Contains("Deep"))
        {
            while(!GoToTask.ToPosition(enterIronforgeOutside))
            {
                GoToTask.ToPosition(enterIronforgeOutside);
                Thread.Sleep(250);
            }

            wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;
            Logging.Write("[FNV_Quester]: Disable teleport during Tram");
            wManager.Wow.Helpers.MovementManager.Face(new Vector3(-4839.4, -1320.9, 501.9));

            while(!Usefuls.MapZoneName.Contains("Deep"))
            {
                wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 250);
                Thread.Sleep(robotManager.Helpful.Others.Random(25, 50));
            }
        }

        if(Usefuls.MapZoneName.Contains("Deep"))
        {
            if(!GoToTask.ToPosition(enterIronforgeInside))
            {
                GoToTask.ToPosition(enterIronforgeInside);
                Thread.Sleep(250);
            }

            var pathEins = new List&lt;Vector3&gt;() {
new Vector3(42.56478f, 10.32987f, -4.29664f, "None"),
new Vector3(36.11083f, 10.30502f, -4.29664f, "None"),
new Vector3(29.11088f, 10.27806f, -4.29664f, "None"),
new Vector3(25.49891f, 10.26415f, -4.29664f, "None"),
new Vector3(20.57794f, 10.2452f, -4.29664f, "None"),
new Vector3(16.61328f, 11.97739f, -4.29664f, "None"),
new Vector3(17.03823f, 18.79025f, -4.29664f, "None"),
new Vector3(19.41723f, 25.35655f, -4.29664f, "None"),
};


                        while(ObjectManager.Me.Position.DistanceTo2D(pathEins.Last&lt;Vector3&gt;()) &gt; 5)
                        {
                            MovementManager.Go(pathEins); // or MovementManager.GoLoop(path);
                        }

            while(!GoToTask.ToPosition(positionWaitTramIronforge))
            {
                GoToTask.ToPosition(positionWaitTramIronforge);
                Thread.Sleep(250);
            }

            wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;

            var tram = (WoWGameObject)null;

            try
            {
                tram = chooseTramIronforge();
            }
            catch
            {

            }

            if(ObjectManager.Me.Position.DistanceTo(tram.Position) &lt; 200 &amp;&amp; tram != null &amp;&amp; !tram.Position.Equals(nullVector))
            {
                Logging.Write("[FNV_Quester]: Bad circle, restart... .");
                isRestarted = true;
                restartTram("Ironforge");
                end();
            }

            if(!isRestarted)
            {

                if(tram != null &amp;&amp; tram.Position.DistanceTo(nullVector) &gt; 1)
                {


                    while(tram.Position.DistanceTo(positionTramInIronforge) &gt;= 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep") &amp;&amp; !tram.Position.Equals(nullVector))
                    {
                        Thread.Sleep(1000);
                    }


                    if(tram.Position.DistanceTo(positionTramInIronforge) &lt; 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep"))
                    {
                        Lua.LuaDoString("ClearTarget()");
                        wManager.Wow.Helpers.MovementManager.Face(positionOnTramIronforge);

                        while(ObjectManager.Me.Position.DistanceTo(positionOnTramIronforge) &gt; 2)
                        {
                            MovementManager.MoveTo(positionOnTramIronforge);
                            Thread.Sleep(1000);

                            if(ObjectManager.Me.Position.DistanceTo(playerFellDownIronforge) &lt; 4)
                            {
                                Logging.Write("[FNV_Quester]: Fell down, while trying to take tram. Restart");
                                restartTram("Ironforge");
                            }
                        }

                        GoToTask.ToPosition(positionOnTramIronforge);
                    }


                    while(tram.Position.DistanceTo(positionTramInStormwind) &gt; 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep"))
                    {
                        Thread.Sleep(3000);
                    }

                    if(ObjectManager.Me.Position.DistanceTo(positionOnTramStormwind) &lt; 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep"))
                    {

                        Vector3 leavingTramPos = new Vector3(-4.500117, 2510.398, -4.18221, "None");
                        Vector3 leavingTramPosZwei = new Vector3(-8.363175, 2510.536, -4.291304, "None");

                        MovementManager.MoveTo(leavingTramPos);
                        Thread.Sleep(1000);
                        MovementManager.MoveTo(leavingTramPosZwei);
                        Thread.Sleep(1000);

                        var pathZwei = new List&lt;Vector3&gt;() {
new Vector3(-8.722651f, 2521.781f, -4.296569f, "None"),
new Vector3(-8.406331f, 2528.227f, -4.296569f, "None"),
new Vector3(-5.509378f, 2534.194f, -4.296569f, "None"),
new Vector3(1.102043f, 2536.338f, -4.296569f, "None"),
new Vector3(8.024714f, 2535.66f, -4.296569f, "None"),
new Vector3(13.7771f, 2531.926f, -4.296569f, "None"),
new Vector3(15.53208f, 2525.218f, -4.296569f, "None"),
new Vector3(19.39666f, 2520.334f, -4.296569f, "None"),
new Vector3(26.3053f, 2519.244f, -4.296569f, "None"),
new Vector3(31.07252f, 2514.534f, -4.296569f, "None"),
new Vector3(32.08603f, 2507.629f, -4.296569f, "None"),
new Vector3(32.20792f, 2500.735f, -4.296569f, "None"),
new Vector3(32.69915f, 2493.784f, -4.296569f, "None"),
new Vector3(38.39471f, 2490.469f, -4.296569f, "None"),
new Vector3(45.39016f, 2490.699f, -4.296569f, "None"),
new Vector3(52.39009f, 2490.728f, -4.296569f, "None"),
new Vector3(55.99506f, 2490.741f, -4.296569f, "None"),
new Vector3(62.99502f, 2490.766f, -4.296569f, "None"),
};


                        while(ObjectManager.Me.Position.DistanceTo2D(pathZwei.Last&lt;Vector3&gt;()) &gt; 5)
                        {
                            MovementManager.Go(pathZwei); // or MovementManager.GoLoop(path);

                            if(ObjectManager.Me.Position.DistanceTo2D(pathZwei.Last&lt;Vector3&gt;()) &lt;= 5)
                                break;
                        }


                        //MovementManager.MoveTo(leavePosStormwind);
                        /*
                        while(ObjectManager.Me.Position.DistanceTo(leavePosStormwind) &gt; 4)
                        {
                            MovementManager.MoveTo(leavePosStormwind);
                            Thread.Sleep(1000);

                        } */

                    }

                    if(Usefuls.MapZoneName.Contains("Deep"))
                    {
                        if(!GoToTask.ToPosition(enterStormwindInside))
                        {
                            GoToTask.ToPosition(enterStormwindInside);
                            Thread.Sleep(250);
                        }
                    }

                    while(Usefuls.MapZoneName.Contains("Deep"))
                    {
                        wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 250);
                        Thread.Sleep(robotManager.Helpful.Others.Random(25, 50));
                    }

                    Logging.Write("Re enable teleport ");
                    wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;


                    while(!GoToTask.ToPosition(enterStormwindOutside))
                    {
                        wManager.Wow.Helpers.MovementManager.Face(enterStormwindOutside);
                        GoToTask.ToPosition(enterStormwindOutside);
                        Thread.Sleep(250);
                    }

                }
                else if(Usefuls.MapZoneName.Contains("Tram") || Usefuls.MapZoneName.Contains("Ironforge"))
                {
                    Logging.Write("[FNV_Quester]: Unable to find tram, restart... .");
                    isRestarted = true;
                    restartTram("Ironforge");
                }

            }
        }
        isRestarted = false;
    }

    /*
    public static void takeTramIronforge()
    {
        Logging.Write("[FNV_Quester]: Taking Tram from Ironforge to Stormwind");

        if(!Usefuls.MapZoneName.Contains("Deep"))
        {
            while(!GoToTask.ToPosition(enterIronforgeOutside))
            {
                GoToTask.ToPosition(enterIronforgeOutside);
                Thread.Sleep(250);
            }

            wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;
            Logging.Write("[FNV_Quester]: Disable teleport during Tram");
            wManager.Wow.Helpers.MovementManager.Face(new Vector3(-4839.4, -1320.9, 501.9));

            while(!Usefuls.MapZoneName.Contains("Deep"))
            {
                wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 250);
                Thread.Sleep(robotManager.Helpful.Others.Random(25, 50));
            }
        }

        if(Usefuls.MapZoneName.Contains("Deep"))
        {
            if(!GoToTask.ToPosition(enterIronforgeInside))
            {
                GoToTask.ToPosition(enterIronforgeInside);
                Thread.Sleep(250);
            }

            GoToTask.ToPosition(new Vector3(26.31003, 9.936551, -4.29664));
            Thread.Sleep(250);
            GoToTask.ToPosition(new Vector3(17.09965, 12.71437, -4.29664));
            Thread.Sleep(250);
            GoToTask.ToPosition(new Vector3(18.14983, 22.89955, -4.29664));
            Thread.Sleep(250);

            while(!GoToTask.ToPosition(positionWaitTramIronforge))
            {
                GoToTask.ToPosition(positionWaitTramIronforge);
                Thread.Sleep(250);
            }

            wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;

            var tram = (WoWGameObject)null;

            try
            {
                tram = chooseTramIronforge();
            }
            catch
            {

            }

            if(ObjectManager.Me.Position.DistanceTo(tram.Position) &lt; 200 &amp;&amp; tram != null &amp;&amp; !tram.Position.Equals(nullVector))
            {
                Logging.Write("[FNV_Quester]: Bad circle, restart... .");
                isRestarted = true;
                restartTram("Ironforge");
                end();
            }

            if(!isRestarted)
            {

                if(tram != null &amp;&amp; tram.Position.DistanceTo(nullVector) &gt; 1)
                {


                    while(tram.Position.DistanceTo(positionTramInIronforge) &gt;= 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep") &amp;&amp; !tram.Position.Equals(nullVector))
                    {
                        Thread.Sleep(1000);
                    }


                    if(tram.Position.DistanceTo(positionTramInIronforge) &lt; 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep"))
                    {
                        Lua.LuaDoString("ClearTarget()");
                        wManager.Wow.Helpers.MovementManager.Face(positionOnTramIronforge);

                        while(ObjectManager.Me.Position.DistanceTo(positionOnTramIronforge) &gt; 2)
                        {
                            wManager.Wow.Helpers.MovementManager.Face(positionOnTramIronforge);
                            wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 125);
                            Thread.Sleep(robotManager.Helpful.Others.Random(10, 25));

                            if(ObjectManager.Me.Position.DistanceTo(playerFellDownIronforge) &lt; 4)
                            {
                                Logging.Write("[FNV_Quester]: Fell down, while trying to take tram. Restart");
                                restartTram("Ironforge");
                            }
                        }

                        GoToTask.ToPosition(positionOnTramIronforge);
                    }


                    while(tram.Position.DistanceTo(positionTramInStormwind) &gt; 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep"))
                    {
                        Thread.Sleep(3000);
                    }

                    if(ObjectManager.Me.Position.DistanceTo(positionOnTramStormwind) &lt; 5 &amp;&amp; Usefuls.MapZoneName.Contains("Deep"))
                    {

                        wManager.Wow.Helpers.Move.StrafeLeft(Move.MoveAction.PressKey, 350);

                        while(ObjectManager.Me.Position.DistanceTo(leavePosStormwind) &gt; 4)
                        {
                            wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 125);
                            Thread.Sleep(robotManager.Helpful.Others.Random(10, 25));

                        }

                    }

                    if(Usefuls.MapZoneName.Contains("Deep"))
                    {
                        if(!GoToTask.ToPosition(enterStormwindInside))
                        {
                            GoToTask.ToPosition(enterStormwindInside);
                            Thread.Sleep(250);
                        }
                    }

                    while(Usefuls.MapZoneName.Contains("Deep"))
                    {
                        wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 250);
                        Thread.Sleep(robotManager.Helpful.Others.Random(25, 50));
                    }

                    Logging.Write("Re enable teleport ");
                    wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;


                    while(!GoToTask.ToPosition(enterStormwindOutside))
                    {
                        wManager.Wow.Helpers.MovementManager.Face(enterStormwindOutside);
                        GoToTask.ToPosition(enterStormwindOutside);
                        Thread.Sleep(250);
                    }

                }
                else if(Usefuls.MapZoneName.Contains("Tram") || Usefuls.MapZoneName.Contains("Ironforge"))
                {
                    Logging.Write("[FNV_Quester]: Unable to find tram, restart... .");
                    isRestarted = true;
                    restartTram("Ironforge");
                }

            }
        }
        isRestarted = false;
    }
    */
}

//Additional functions for quests
public class Quests
{
    public static void abandon(string questName)
    {
        wManager.Wow.Helpers.Lua.LuaDoString("local name = '" + questName + "' for i=1,GetNumQuestLogEntries() do local questTitle, level, questTag, suggestedGroup, isHeader, isCollapsed, isComplete = GetQuestLogTitle(i) if string.find(questTitle, name) then SelectQuestLogEntry(i) SetAbandonQuest() AbandonQuest() end end");

    }

    public static bool hasFailed(string questName)
    {
        int temp = 0;
        temp = wManager.Wow.Helpers.Lua.LuaDoString&lt;int&gt;("local name = '" + questName + "'  for i=1,GetNumQuestLogEntries() do local questTitle, level, questTag, suggestedGroup, isHeader, isCollapsed, isComplete = GetQuestLogTitle(i) if string.find(questTitle, name) then SelectQuestLogEntry(i) local questTimer = GetQuestLogTimeLeft() return questTimer end end");

        if(temp &gt; 8)
        {
            return false;
        }
        else
        {
            return true;
        }
    }

    public static bool isComplete(string questName)
    {
        int temp;
        temp = wManager.Wow.Helpers.Lua.LuaDoString&lt;int&gt;("local name = '" + questName + "'  for i=1,GetNumQuestLogEntries() do local questTitle, level, questTag, isHeader, isCollapsed, isComplete = GetQuestLogTitle(i) if string.find(questTitle, name) then local questTitleZ, levelZ, questTagZ, isHeaderZ, isCollapsedZ, isCompleteZ = GetQuestLogTitle(i) return isCompleteZ end end");

        if(temp == 1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    public static bool isFailed(string questName)
    {
        int temp;
        temp = wManager.Wow.Helpers.Lua.LuaDoString&lt;int&gt;("local name = '" + questName + "'  for i=1,GetNumQuestLogEntries() do local questTitle, level, questTag, isHeader, isCollapsed, isComplete = GetQuestLogTitle(i) if string.find(questTitle, name) then local questTitleZ, levelZ, questTagZ, isHeaderZ, isCollapsedZ, isCompleteZ = GetQuestLogTitle(i) return isCompleteZ end end");

        if(temp == -1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}


public class ProgressSettings : Settings
{
    public static bool inProgress = false;
        public static void Initialize()
        {
            ProgressSettings.Load();
        }

        public static void Dispose()
        {
            ProgressSettings.CurrentSettings.Save();
            //isLaunched = false;
        }

        public void Settings()
        {
            ProgressSettings.Load();
            ProgressSettings.CurrentSettings.ToForm();
            ProgressSettings.CurrentSettings.Save();
        }

    public ProgressSettings()
    {
        this.launcher = 2;
        this.dwarfStart = 1 + 1;
        this.humanStart = 1 + 1;
        this.nightelfStart = 1 + 1;
        this.dwarfHunter = 1 + 1;
        this.nightelfHunter = 1 + 1;
        this.nightelfDruid = 1 + 1;
        this.warlock = 1 + 1;
        this.kharanos = 1 + 1;
        this.elwynn = 1 + 1;
        this.westfallEins = 1 + 1;
        this.lochModanEins = 1 + 1;
        this.darkshoreEins = 10 + 1;
        this.westfallZwei = 1 + 1;
        this.lochModanZwei = 1 + 1;
        this.darkshoreZwei = 6 + 1;
        this.westfallDrei = 1 + 1;
        this.redridge = 1 + 1;
        this.duskwoodEins = 1 + 1;
        this.stonetalon = 14 + 1;
        this.darkshoreDrei = 1 + 1;
        this.duskwoodZwei = 1 + 1;
        this.wetlandsEins = 1 + 1;
        this.ashenvaleEins = 7 + 1;
        this.wetlandsZwei = 1 + 1;
        this.duskwoodDrei = 2 + 1;
        this.ashenvaleZwei = 7 + 1;
        this.duskwoodVier = 2 + 1;
        this.ashenvaleDrei = 6 + 1;
        this.thousandNeedles = 7 + 1;
        this.desolaceEins = 7 + 1;
        this.hillsbradEins = 2 + 1;
        this.stranglethornEins = 2 + 1;
        this.stranglethornZwei = 2 + 1;
        this.hillsbradZwei = 2 + 1;
        this.arathiEins = 2 + 1;
        this.stranglethornDrei = 2 + 1;
        this.dustwallowEins = 10 + 1;
        this.desolaceZwei = 9 + 1;
        this.swampOfSorrowsEins = 2 + 1;
        this.stranglethornVier = 2 + 1;
        this.badlandsEins = 2 + 1;
        this.alteracMountain = 2 + 1;
        this.badlandsZwei = 2 + 1;
        this.tanarisEins = 7 + 1;
        this.stranglethornFünf  = 2 + 1;
        this.hinterlandsEins = 2 + 1;
        this.feralasEins = 7 + 1;
        this.hinterlandsZwei = 2 + 1;

                //48+

        this.hinterlandsDrei = 2 + 1;
        this.blastedLandsEins = 2 + 1;
        this.blastedLandsZwei = 2 + 1;
        this.blastedLandsDrei = 2 + 1;
        this.burningSteppesEins = 2 + 1;
        this.burningSteppesZwei = 2 + 1;
        this.burningSteppesDrei = 2 + 1;
        this.easternPleaguelandsEins = 2 + 1;
        this.easternPleaguelandsZwei = 2 + 1;
        this.easternPleaguelandsDrei = 2 + 1;
        this.searingGorgeEins = 2 + 1;
        this.searingGorgeZwei = 2 + 1;
        this.searingGorgeDrei = 2 + 1;
        this.swampOfSorrowsZwei = 2 + 1;
        this.westernPleaguelandsEins = 2 + 1;
        this.westernPleaguelandsZwei = 2 + 1;
        this.westernPleaguelandsDrei = 2 + 1;

        //48+ Kalimdor

        this.azsharaEins = 7 + 1;
        this.azsharaZwei = 7 + 1;
        this.azsharaDrei = 7 + 1;
        this.felwoodEins = 7 + 1;
        this.felwoodZwei = 7 + 1;
        this.felwoodDrei = 7 + 1;
        this.silithusEins = 7 + 1;
        this.silithusZwei = 7 + 1;
        this.silithusDrei = 7 + 1;
        this.feralasZwei = 7 + 1;
        this.feralasDrei = 7 + 1;
        this.feralasVier = 7 + 1;
        this.tanarisZwei = 7 + 1;
        this.tanarisDrei = 7 + 1;
        this.ungoroEins = 7 + 1;
        this.ungoroZwei = 7 + 1;
        this.ungoroDrei = 7 + 1;
        this.winterspringEins = 7 + 1; 
        this.winterspringZwei = 7 + 1;
        this.winterspringDrei = 7 + 1;
        this.winterspringVier = 7 + 1;
    }
    

      public static ProgressSettings CurrentSettings { get; set; }

        public bool Save()
        {
            try
            {
                return Save(AdviserFilePathAndName("FNV_Progress", ObjectManager.Me.Name + "." + Usefuls.RealmName));
            }
            catch(Exception e)
            {
                Logging.WriteDebug("FNV_Progress =&gt; Save(): " + e);
                return false;
            }
        }

        public static bool Load()
        {
            try
            {
                if(File.Exists(AdviserFilePathAndName("FNV_Progress", ObjectManager.Me.Name + "." + Usefuls.RealmName)))
                {
                    CurrentSettings = Load&lt;ProgressSettings&gt;(AdviserFilePathAndName("FNV_Progress", ObjectManager.Me.Name + "." + Usefuls.RealmName));
                    return true;
                }

                ProgressSettings.CurrentSettings = new ProgressSettings();
            }
            catch(Exception e)
            {
                Logging.WriteDebug("FNV_Progress =&gt; Load(): " + e);
            }
            return false;
        }

    public static bool ResetCurrentCharactersProgressSaver()
    {
        try
        {
            if(File.Exists(AdviserFilePathAndName("FNV_Progress", ObjectManager.Me.Name + "." + Usefuls.RealmName)))
            {
                File.Delete(AdviserFilePathAndName("FNV_Progress", ObjectManager.Me.Name + "." + Usefuls.RealmName));
                ProgressSettings.CurrentSettings = new ProgressSettings();
                Logging.Write("[FNV_Quester]: FNV_Progress file of " + ObjectManager.Me.Name + " on server " + Usefuls.RealmName + " successfully deleted");
                return true;
            }
            else
            {
                Logging.Write("[FNV_Quester]: No FNV_Progress file found for " + ObjectManager.Me.Name + " on server " + Usefuls.RealmName);
                return false;
            }
        }
        catch(Exception e)
        {
            Logging.WriteDebug("FNV_Progress =&gt; Load(): " + e);
        }
         return false;
    }

        public int launcher { get; set; }
        public int dwarfStart { get; set; }
        public int dwarfHunter { get; set; }
        public int nightelfHunter { get; set; }
        public int nightelfDruid { get; set; }
        public int warlock { get; set; }
        public int nightelfStart { get; set; }
        public int humanStart { get; set; }
        public int kharanos { get; set; }
        public int elwynn { get; set; }
        public int westfallEins { get; set; }
        public int lochModanEins { get; set; }
        public int darkshoreEins { get; set; }
        public int westfallZwei { get; set; }
        public int lochModanZwei { get; set; }
        public int darkshoreZwei { get; set; }
        public int westfallDrei { get; set; }
        public int redridge { get; set; }
        public int duskwoodEins { get; set; }
        public int darkshoreDrei { get; set; }
        public int stonetalon { get; set; }
        public int duskwoodZwei { get; set; }
        public int wetlandsEins { get; set; }
        public int ashenvaleEins { get; set; }
        public int wetlandsZwei { get; set; }
        public int duskwoodDrei { get; set; }
        public int ashenvaleZwei { get; set; }
        public int duskwoodVier { get; set; }
        public int ashenvaleDrei { get; set; }
        public int thousandNeedles { get; set; }
        public int desolaceEins { get; set; }
        public int hillsbradEins { get; set; }
        public int stranglethornEins { get; set; }
        public int stranglethornZwei{ get; set; }
        public int hillsbradZwei { get; set; }
        public int arathiEins { get; set; }
        public int stranglethornDrei { get; set; }
        public int dustwallowEins { get; set; }
        public int desolaceZwei { get; set; }
        public int badlandsEins { get; set; }
        public int swampOfSorrowsEins { get; set; }
        public int stranglethornVier { get; set; }
        public int alteracMountain { get; set; }
        public int badlandsZwei { get; set; }
        public int tanarisEins { get; set; }
        public int stranglethornFünf { get; set; }
        public int hinterlandsEins { get; set; }
        public int feralasEins { get; set; }
        public int hinterlandsZwei { get; set; }

        //48+ Eastern Kingdoms
        public int hinterlandsDrei { get; set; }
        public int blastedLandsEins { get; set; }
        public int blastedLandsZwei { get; set; }
        public int blastedLandsDrei { get; set; }
        public int burningSteppesEins { get; set; }
        public int burningSteppesZwei { get; set; }
        public int burningSteppesDrei { get; set; }
        public int easternPleaguelandsEins { get; set; }
        public int easternPleaguelandsZwei { get; set; }
        public int easternPleaguelandsDrei { get; set; }
        public int searingGorgeEins { get; set; }
        public int searingGorgeZwei { get; set; }
        public int searingGorgeDrei { get; set; }
        public int swampOfSorrowsZwei { get; set; }
        public int westernPleaguelandsEins { get; set; }
        public int westernPleaguelandsZwei { get; set; }
        public int westernPleaguelandsDrei { get; set; }

        //48+ Kalimdor

        public int azsharaEins { get; set; }
        public int azsharaZwei { get; set; }
        public int azsharaDrei { get; set; }
        public int felwoodEins { get; set; }
        public int felwoodZwei { get; set; }
        public int felwoodDrei { get; set; }
        public int silithusEins { get; set; }
        public int silithusZwei { get; set; }
        public int silithusDrei { get; set; }
        public int feralasZwei { get; set; }
        public int feralasDrei { get; set; }
        public int feralasVier { get; set; }
        public int tanarisZwei { get; set; }
        public int tanarisDrei { get; set; }
        public int ungoroEins { get; set; }
        public int ungoroZwei { get; set; }
        public int ungoroDrei { get; set; }
        public int winterspringEins { get; set; }
        public int winterspringZwei { get; set; }
        public int winterspringDrei { get; set; }
        public int winterspringVier { get; set; }





}


/*
    //Settings   
    public class QuesterSettings
    {
        private static bool isLaunched;

        public static void Initialize()
        {
            isLaunched = true;
            FNVSettings.Load();

            while(isLaunched &amp; Products.IsStarted)
            {
                Thread.Sleep(500);
                Dispose();
            }
        }

        public static void Dispose()
        {
            FNVSettings.CurrentSettings.Save();
            //isLaunched = false;
        }

        public void Settings()
        {
            FNVSettings.Load();
            FNVSettings.CurrentSettings.ToForm();
            FNVSettings.CurrentSettings.Save();
        }
    }

    */

    [Serializable]
    public class FNVSettings : Settings
    {

        public static bool inProgress = false;
        public static void Initialize()
        {
            FNVSettings.Load();
        }

        public static void Dispose()
        {
            FNVSettings.CurrentSettings.Save();
            //isLaunched = false;
        }

        public void Settings()
        {
            FNVSettings.Load();
            FNVSettings.CurrentSettings.ToForm();
            FNVSettings.CurrentSettings.Save();
        }

        public FNVSettings()
        {
        //Completed profiles -&gt; True == completed
        this.launcher = false;
        this.dwarfStart = false;
        this.humanStart = false;
        this.nightelfStart = false;
        this.dwarfHunter = false;
        this.nightelfHunter = false;
        this.nightelfDruid = false;
        this.warlock = false;
        this.kharanos = false;
        this.elwynn = false;
        this.westfallEins = false;
        this.lochModanEins = false;
        this.darkshoreEins = false;
        this.westfallZwei = false;
        this.lochModanZwei = false;
        this.darkshoreZwei = false;
        this.westfallDrei = false;
        this.redridge = false;
        this.duskwoodEins = false;
        this.darkshoreDrei = false;
        this.stonetalon = false;
        this.duskwoodZwei = false;
        this.wetlandsEins = false;
        this.ashenvaleEins = false;
        this.wetlandsZwei = false;
        this.duskwoodDrei = false;
        this.ashenvaleZwei = false;
        this.duskwoodVier = false;
        this.ashenvaleDrei = false;
        this.thousandNeedles = false;
        this.desolaceEins = false; 
        this.hillsbradEins = false; 
        this.stranglethornEins = false;
        this.stranglethornZwei = false;
        this.hillsbradZwei = false;
        this.arathiEins = false;
        this.stranglethornDrei = false;
        this.dustwallowEins = false; 
        this.desolaceZwei = false; 
        this.swampOfSorrowsEins = false; 
        this.stranglethornVier = false; 
        this.badlandsEins = false; 
        this.alteracMountain = false;
        this.badlandsZwei = false;
        this.tanarisEins = false;
        this.stranglethornFünf  = false;
        this.hinterlandsEins = false;
        this.feralasEins = false; 
        this.hinterlandsZwei = false; 

        //48+

        this.hinterlandsDrei = false; 
        this.blastedLandsEins = false; 
        this.blastedLandsZwei = false; 
        this.blastedLandsDrei = false; 
        this.burningSteppesEins = false; 
        this.burningSteppesZwei = false; 
        this.burningSteppesDrei = false; 
        this.easternPleaguelandsEins = false; 
        this.easternPleaguelandsZwei = false; 
        this.easternPleaguelandsDrei = false; 
        this.searingGorgeEins = false; 
        this.searingGorgeZwei = false; 
        this.searingGorgeDrei = false; 
        this.swampOfSorrowsZwei = false; 
        this.westernPleaguelandsEins = false; 
        this.westernPleaguelandsZwei = false; 
        this.westernPleaguelandsDrei = false; 

        //48+ Kalimdor

        this.azsharaEins = false; 
        this.azsharaZwei = false; 
        this.azsharaDrei = false; 
        this.felwoodEins = false; 
        this.felwoodZwei = false; 
        this.felwoodDrei = false; 
        this.silithusEins = false; 
        this.silithusZwei = false; 
        this.silithusDrei = false; 
        this.feralasZwei = false; 
        this.feralasDrei = false; 
        this.feralasVier = false; 
        this.tanarisZwei = false; 
        this.tanarisDrei = false; 
        this.ungoroEins = false; 
        this.ungoroZwei = false; 
        this.ungoroDrei = false; 
        this.winterspringEins = false; 
        this.winterspringZwei = false; 
        this.winterspringDrei = false; 
        this.winterspringVier = false; 

            //FlightMaster discovered
            //Eastern Kingdoms
            this.ArathiHighlands = false;
            this.Wetlands = false;
            this.WesternPlaguelands = false;
            this.EasternPlaguelands = false;
            this.HillsbradFoothills = false;
            this.TheHinterlands = false;
            this.LochModan = false;
            this.Ironforge = false;
            this.SearingGorge = false;
            this.BurningSteppes = false;
            this.RedridgeMountains = false;
            this.Stormwind = false;
            this.Westfall = false;
            this.Duskwood = false;
            this.StranglethornValley = false;

            //Kalimdor
            this.Teldrassil = false;
            this.Darkshore = false;
            this.Winterspring = false;
            this.Azshara = false;
            this.Ashenvale = false;
            this.StonetalonMountains = false;
            this.Desolace = false;
            this.TheBarrens = false;
            this.Tanaris = false;
            this.FeralasFeathermoon = false;
            this.FeralasThalanaar = false;
            this.UngoroCrater = false;
            this.DustwallowMarsh = false;
            this.Silithus = false;
            this.Moonglade = false;
            this.Felwood = false;

        }

    public static void flightMasterSaveChanges(FlightMasterDB needToChange)
    {

        if(needToChange.name.Contains("Arathi"))
            CurrentSettings.ArathiHighlands = true;

        if(needToChange.name.Contains("Wetlands"))
            CurrentSettings.Wetlands = true;

        if(needToChange.name.Contains("Western"))
            CurrentSettings.WesternPlaguelands = true;

        if(needToChange.name.Contains("Eastern"))
            CurrentSettings.EasternPlaguelands = true;

        if(needToChange.name.Contains("Hillsbrad"))
            CurrentSettings.HillsbradFoothills = true;

        if(needToChange.name.Contains("Hinterlands"))
            CurrentSettings.TheHinterlands = true;

        if(needToChange.name.Contains("Modan"))
            CurrentSettings.LochModan = true;

        if(needToChange.name.Contains("Ironforge"))
            CurrentSettings.Ironforge = true;

        if(needToChange.name.Contains("Searing"))
            CurrentSettings.SearingGorge = true;

        if(needToChange.name.Contains("Burning"))
            CurrentSettings.BurningSteppes = true;

        if(needToChange.name.Contains("Redridge"))
            CurrentSettings.RedridgeMountains = true;

        if(needToChange.name.Contains("Stormwind"))
            CurrentSettings.Stormwind = true;

        if(needToChange.name.Contains("Westfall"))
            CurrentSettings.Westfall = true;

        if(needToChange.name.Contains("Duskwood"))
            CurrentSettings.Duskwood = true;

        if(needToChange.name.Contains("Stranglethorn"))
            CurrentSettings.StranglethornValley = true;


        if(needToChange.name.Contains("Teldrassil"))
            CurrentSettings.Teldrassil = true;

        if(needToChange.name.Contains("Darkshore"))
            CurrentSettings.Darkshore = true;

        if(needToChange.name.Contains("Winterspring"))
            CurrentSettings.Winterspring = true;

        if(needToChange.name.Contains("Azshara"))
            CurrentSettings.Azshara = true;

        if(needToChange.name.Contains("Ashenvale"))
            CurrentSettings.Ashenvale = true;

        if(needToChange.name.Contains("Stonetalon"))
            CurrentSettings.StonetalonMountains = true;

        if(needToChange.name.Contains("Desolace"))
            CurrentSettings.Desolace = true;

        if(needToChange.name.Contains("TheBarrens"))
            CurrentSettings.TheBarrens = true;

        if(needToChange.name.Contains("Tanaris"))
            CurrentSettings.Tanaris = true;

        if(needToChange.name.Contains("TheBarrens"))
            CurrentSettings.TheBarrens = true;

        if(needToChange.name.Contains("Feathermoon"))
            CurrentSettings.FeralasFeathermoon = true;

        if(needToChange.name.Contains("Thalanaar"))
            CurrentSettings.FeralasThalanaar = true;

        if(needToChange.name.Contains("ro Crater"))
            CurrentSettings.UngoroCrater = true;

        if(needToChange.name.Contains("Dustwallow"))
            CurrentSettings.DustwallowMarsh = true;

        if(needToChange.name.Contains("Silithus"))
            CurrentSettings.Silithus = true;

        if(needToChange.name.Contains("Felwood"))
            CurrentSettings.Felwood = true;
            
            FNVSettings.CurrentSettings.Save();
            Logging.Write("[FNV_Quester]: Settings saved of Flight Master " + needToChange.name);
            return;
    }

        public static void flightMasterSaveChanges(String needToChange)
    {

        if(needToChange.Contains("Arathi"))
            CurrentSettings.ArathiHighlands = true;

        if(needToChange.Contains("Wetlands"))
            CurrentSettings.Wetlands = true;

        if(needToChange.Contains("Western"))
            CurrentSettings.WesternPlaguelands = true;

        if(needToChange.Contains("Eastern"))
            CurrentSettings.EasternPlaguelands = true;

        if(needToChange.Contains("Hillsbrad"))
            CurrentSettings.HillsbradFoothills = true;

        if(needToChange.Contains("Hinterlands"))
            CurrentSettings.TheHinterlands = true;

        if(needToChange.Contains("Modan"))
            CurrentSettings.LochModan = true;

        if(needToChange.Contains("Ironforge"))
            CurrentSettings.Ironforge = true;

        if(needToChange.Contains("Searing"))
            CurrentSettings.SearingGorge = true;

        if(needToChange.Contains("Burning"))
            CurrentSettings.BurningSteppes = true;

        if(needToChange.Contains("Redridge"))
            CurrentSettings.RedridgeMountains = true;

        if(needToChange.Contains("Stormwind"))
            CurrentSettings.Stormwind = true;

        if(needToChange.Contains("Westfall"))
            CurrentSettings.Westfall = true;

        if(needToChange.Contains("Duskwood"))
            CurrentSettings.Duskwood = true;

        if(needToChange.Contains("Stranglethorn"))
            CurrentSettings.StranglethornValley = true;

        if(needToChange.Contains("Blasted"))

        if(needToChange.Contains("Teldrassil"))
            CurrentSettings.Teldrassil = true;

        if(needToChange.Contains("Darkshore"))
            CurrentSettings.Darkshore = true;

        if(needToChange.Contains("Winterspring"))
            CurrentSettings.Winterspring = true;

        if(needToChange.Contains("Azshara"))
            CurrentSettings.Azshara = true;

        if(needToChange.Contains("Ashenvale"))
            CurrentSettings.Ashenvale = true;

        if(needToChange.Contains("Stonetalon"))
            CurrentSettings.StonetalonMountains = true;

        if(needToChange.Contains("Desolace"))
            CurrentSettings.Desolace = true;

        if(needToChange.Contains("TheBarrens"))
            CurrentSettings.TheBarrens = true;

        if(needToChange.Contains("Tanaris"))
            CurrentSettings.Tanaris = true;

        if(needToChange.Contains("TheBarrens"))
            CurrentSettings.TheBarrens = true;

        if(needToChange.Contains("Feathermoon"))
            CurrentSettings.FeralasFeathermoon = true;

        if(needToChange.Contains("Thalanaar"))
            CurrentSettings.FeralasThalanaar = true;

        if(needToChange.Contains("ro Crater"))
            CurrentSettings.UngoroCrater = true;

        if(needToChange.Contains("Dustwallow"))
            CurrentSettings.DustwallowMarsh = true;

        if(needToChange.Contains("Silithus"))
            CurrentSettings.Silithus = true;

        if(needToChange.Contains("Felwood"))
            CurrentSettings.Felwood = true;
            
            FNVSettings.CurrentSettings.Save();
            Logging.Write("[FNV_Quester]: Settings saved of Flight Master " + needToChange);
            return;
    }

        public static FNVSettings CurrentSettings { get; set; }

        public bool Save()
        {
            try
            {
                return Save(AdviserFilePathAndName("FNV_Quester", ObjectManager.Me.Name + "." + Usefuls.RealmName));
            }
            catch(Exception e)
            {
                Logging.WriteDebug("FNV_Quester =&gt; Save(): " + e);
                return false;
            }
        }

        public static bool Load()
        {
            try
            {
                if(File.Exists(AdviserFilePathAndName("FNV_Quester", ObjectManager.Me.Name + "." + Usefuls.RealmName)))
                {
                    CurrentSettings = Load&lt;FNVSettings&gt;(AdviserFilePathAndName("FNV_Quester", ObjectManager.Me.Name + "." + Usefuls.RealmName));
                    return true;
                }

                FNVSettings.CurrentSettings = new FNVSettings();
            }
            catch(Exception e)
            {
                Logging.WriteDebug("FNV_Quester =&gt; Load(): " + e);
            }
            return false;
        }

        //Finished profiles -&gt; True == completed
        public bool launcher { get; set; }
        public bool dwarfStart { get; set; }
        public bool dwarfHunter { get; set; }
        public bool nightelfHunter { get; set; }
        public bool nightelfDruid { get; set; }
        public bool warlock { get; set; }
        public bool nightelfStart { get; set; }
        public bool humanStart { get; set; }
        public bool kharanos { get; set; }
        public bool elwynn { get; set; }
        public bool westfallEins { get; set; }
        public bool lochModanEins { get; set; }
        public bool darkshoreEins { get; set; }
        public bool westfallZwei { get; set; }
        public bool lochModanZwei { get; set; }
        public bool darkshoreZwei { get; set; }
        public bool westfallDrei { get; set; }
        public bool redridge { get; set; }
        public bool duskwoodEins { get; set; }
        public bool darkshoreDrei { get; set; }
        public bool stonetalon { get; set; }
        public bool duskwoodZwei { get; set; }
        public bool wetlandsEins { get; set; }
        public bool ashenvaleEins { get; set; }
        public bool wetlandsZwei { get; set; }
        public bool duskwoodDrei { get; set; }
        public bool ashenvaleZwei { get; set; }
        public bool duskwoodVier { get; set; }
        public bool ashenvaleDrei { get; set; }
        public bool thousandNeedles { get; set; }
        public bool desolaceEins { get; set; }
        public bool hillsbradEins { get; set; }
        public bool stranglethornEins { get; set; }
        public bool stranglethornZwei{ get; set; }
        public bool hillsbradZwei { get; set; }
        public bool arathiEins { get; set; }
        public bool stranglethornDrei { get; set; }
        public bool dustwallowEins { get; set; }
        public bool desolaceZwei { get; set; }
        public bool swampOfSorrowsEins { get; set; }
        public bool stranglethornVier { get; set; }
        public bool badlandsEins { get; set; }
        public bool alteracMountain { get; set; }
        public bool badlandsZwei { get; set; }
        public bool tanarisEins { get; set; }
        public bool stranglethornFünf { get; set; }
        public bool hinterlandsEins { get; set; }
        public bool feralasEins { get; set; }
        public bool hinterlandsZwei { get; set; }

                //48+ Eastern Kingdoms
        public bool hinterlandsDrei { get; set; }
        public bool blastedLandsEins { get; set; }
        public bool blastedLandsZwei { get; set; }
        public bool blastedLandsDrei { get; set; }
        public bool burningSteppesEins { get; set; }
        public bool burningSteppesZwei { get; set; }
        public bool burningSteppesDrei { get; set; }
        public bool easternPleaguelandsEins { get; set; }
        public bool easternPleaguelandsZwei { get; set; }
        public bool easternPleaguelandsDrei { get; set; }
        public bool searingGorgeEins { get; set; }
        public bool searingGorgeZwei { get; set; }
        public bool searingGorgeDrei { get; set; }
        public bool swampOfSorrowsZwei { get; set; }
        public bool westernPleaguelandsEins { get; set; }
        public bool westernPleaguelandsZwei { get; set; }
        public bool westernPleaguelandsDrei { get; set; }

        //48+ Kalimdor

        public bool azsharaEins { get; set; }
        public bool azsharaZwei { get; set; }
        public bool azsharaDrei { get; set; }
        public bool felwoodEins { get; set; }
        public bool felwoodZwei { get; set; }
        public bool felwoodDrei { get; set; }
        public bool silithusEins { get; set; }
        public bool silithusZwei { get; set; }
        public bool silithusDrei { get; set; }
        public bool feralasZwei { get; set; }
        public bool feralasDrei { get; set; }
        public bool feralasVier { get; set; }
        public bool tanarisZwei { get; set; }
        public bool tanarisDrei { get; set; }
        public bool ungoroEins { get; set; }
        public bool ungoroZwei { get; set; }
        public bool ungoroDrei { get; set; }
        public bool winterspringEins { get; set; }
        public bool winterspringZwei { get; set; }
        public bool winterspringDrei { get; set; }
        public bool winterspringVier { get; set; }



       // public bool hinterlandsZwei { get; set; }

        public bool defaultSettings { get; set; }
       // public bool dwarfStart { get; set; }
       // public bool nightelfStart { get; set; }
        //public bool humanStart { get; set; }
      //  public bool westfallEins { get; set; }
        public bool lochModan { get; set; }
        public bool auberdine { get; set; }
       // public bool westfallZwei { get; set; }
        public bool lakeshire { get; set; }
        public bool wetlands { get; set; }
        public bool ashenvale { get; set; }
       // public bool thousandNeedles { get; set; }
        public bool dustwallow { get; set; }
        public bool badlands { get; set; }
        public bool alterac { get; set; }
        public bool swampOfSorrows { get; set; }
        public bool tanaris { get; set; }
        public bool stranglethorn { get; set; }
        //public bool hinterlandsEins { get; set; }
        public bool feralas { get; set; }
       // public bool hinterlandsZwei { get; set; }

        //FlightMaster
        //Eastern Kingdoms
        public bool Stormwind { get; set; }
        public bool Westfall { get; set; }
        public bool RedridgeMountains { get; set; }
        public bool Duskwood { get; set; }
        public bool StranglethornValley { get; set; }
        public bool Ironforge { get; set; }
        public bool BurningSteppes { get; set; }
        public bool SearingGorge { get; set; }
        public bool LochModan { get; set; }
        public bool Wetlands { get; set; }
        public bool ArathiHighlands { get; set; }
        public bool HillsbradFoothills { get; set; }
        public bool WesternPlaguelands { get; set; }
        public bool EasternPlaguelands { get; set; }
        public bool TheHinterlands { get; set; }

        //Kalimdor
        public bool Ashenvale { get; set; }
        public bool Azshara { get; set; }
        public bool Darkshore { get; set; }
        public bool Teldrassil { get; set; }
        public bool Desolace { get; set; }
        public bool DustwallowMarsh { get; set; }
        public bool Felwood { get; set; }
        public bool FeralasFeathermoon { get; set; }
        public bool FeralasThalanaar { get; set; }
        public bool Moonglade { get; set; }
        public bool Silithus { get; set; }
        public bool StonetalonMountains { get; set; }
        public bool Tanaris { get; set; }
        public bool TheBarrens { get; set; }
        public bool UngoroCrater { get; set; }
        public bool Winterspring { get; set; }

    }

    //Buy and check bags
    public class bags
    {
        public static bool bagsStarted = false;

        public static int bagsEquipped()
        {
            int returnValue = 0;
            string empty = "";

            for(int i = 20; i &lt;= 23; i++)
            {
                empty = wManager.Wow.Helpers.Lua.LuaDoString&lt;string&gt;("return GetInventoryItemLink('player', " + i + ")");

                if(empty.Contains("o"))
                    returnValue++;
            }

            return returnValue;
        }

        public static string checkMoney()
        {
            string returnVariableNameZ = "";

            returnVariableNameZ = wManager.Wow.Helpers.Lua.LuaDoString("returnVariableNameZ = GetMoney() return returnVariableNameZ", returnVariableNameZ);

            return returnVariableNameZ;
        }

        public static bool canEquip()
        {
            string returnVariableName = "";

            returnVariableName = wManager.Wow.Helpers.Lua.LuaDoString("returnVariableName = GetInventoryItemLink('player', 23 ) return returnVariableName", returnVariableName);


            if(returnVariableName.Equals(""))
            {
                return true;
            }
            else
            {
                return false;
            }

        }

    }


    //Abandon Quests
    public class abandonQuest
    {

        public static void abandon(string questName)
        {

            string name = questName;

            wManager.Wow.Helpers.Lua.LuaDoString("local name = '" + name + "' for i=1,GetNumQuestLogEntries() do local questTitle, level, questTag, suggestedGroup, isHeader, isCollapsed, isComplete = GetQuestLogTitle(i) if string.find(questTitle, name) then SelectQuestLogEntry(i) SetAbandonQuest() AbandonQuest() end end");


        }

    }



    //Throw away items - by Reapler
    public class throwAway
    {
        public static int GetItemQuantity(string itemName)
        {
            var execute =
                "local itemCount = 0; " +
                "for b=0,4 do " +
                    "if GetBagName(b) then " +
                        "for s=1, GetContainerNumSlots(b) do " +
                            "local itemLink = GetContainerItemLink(b, s) " +
                            "if itemLink then " +
                                "local _, stackCount = GetContainerItemInfo(b, s)\t " +
                                "if string.find(itemLink, \"" + itemName + "\") then " +
                                    "itemCount = itemCount + stackCount; " +
                                "end " +
                            "end " +
                        "end " +
                    "end " +
                "end; " +
                "return itemCount; ";
            return Lua.LuaDoString&lt;int&gt;(execute);
        }

        /// &lt;summary&gt;
        /// Used to delete all items by name.
        /// &lt;/summary&gt;
        /// &lt;param name="itemName"&gt;The item to delete.&lt;/param&gt;
        /// &lt;param name="leaveAmount"&gt;The amount of items which remain in the bag.&lt;/param&gt;
        /// &lt;remarks&gt;Bug at links with "-"&lt;/remarks&gt;
        public static void DeleteItems(string itemName, int leaveAmount)
        {
            var itemQuantity = GetItemQuantity(itemName) - leaveAmount;
            if(string.IsNullOrWhiteSpace(itemName) || itemQuantity &lt;= 0)
                return;
            var execute =
                "local itemCount = " + itemQuantity + "; " +
                "local deleted = 0; " +
                "for b=0,4 do " +
                    "if GetBagName(b) then " +
                        "for s=1, GetContainerNumSlots(b) do " +
                            "local itemLink = GetContainerItemLink(b, s) " +
                            "if itemLink then " +
                                "local _, stackCount = GetContainerItemInfo(b, s)\t " +
                                "local leftItems = itemCount - deleted; " +
                                "if string.find(itemLink, \"" + itemName + "\") and leftItems &gt; 0 then " +
                                    "if stackCount &lt;= 1 then " +
                                        "PickupContainerItem(b, s); " +
                                        "DeleteCursorItem(); " +
                                        "deleted = deleted + 1; " +
                                    "else " +
                                        "if (leftItems &gt; stackCount) then " +
                                            "SplitContainerItem(b, s, stackCount); " +
                                            "DeleteCursorItem(); " +
                                            "deleted = deleted + stackCount; " +
                                        "else " +
                                            "SplitContainerItem(b, s, leftItems); " +
                                            "DeleteCursorItem(); " +
                                            "deleted = deleted + leftItems; " +
                                        "end " +
                                    "end " +
                                "end " +
                            "end " +
                        "end " +
                    "end " +
                "end; ";
            Lua.LuaDoString(execute);
        }
    }


public class Darnassus
{
    private static Vector3 darnassusEnterPos = new Vector3(8775.104, 962.8825, 30.33067);
    private static Vector3 darnassusLeavePos = new Vector3(9945.827, 2598.705, 1316.187);

    public static void enter()
    {
        Logging.Write("[FNV_Quester]: Moving to position to enter Darnassus portal...");

        GoToTask.ToPosition(darnassusEnterPos);

        Logging.Write("[FNV_Quester]: Enter Darnassus, disable teleport...");

        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;

        Vector3 pos = new Vector3(8812.807f, 972.6884f, 32.50122f);

        while(ObjectManager.Me.Position.DistanceTo(pos) &gt; 1 &amp;&amp; Usefuls.SubMapZoneName.Contains("theran Village"))
        {
            wManager.Wow.Helpers.MovementManager.Face(pos);
            wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 125);
            Thread.Sleep(robotManager.Helpful.Others.Random(10, 25));
        }

        Logging.Write("[FNV_Quester]: Reenable teleport");

        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;
    }

    public static void leave()
    {
        Logging.Write("[FNV_Quester]: Moving to position to leave Darnassus portal...");

        GoToTask.ToPosition(darnassusLeavePos);

        Logging.Write("[FNV_Quester]: Leave Darnassus, disable teleport...");

        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;

        Vector3 pos = new Vector3(9946.378f, 2642.551f, 1316.749f);

        while(ObjectManager.Me.Position.DistanceTo(pos) &gt; 1 &amp;&amp; Usefuls.MapZoneName.Contains("Darnassus"))
        {
            wManager.Wow.Helpers.MovementManager.Face(pos);
            wManager.Wow.Helpers.Move.Forward(Move.MoveAction.PressKey, 125);
            Thread.Sleep(robotManager.Helpful.Others.Random(10, 25));
        }

        Logging.Write("[FNV_Quester]: Reenable teleport");
        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;
    }
}

    [Serializable]
    public class FNVQuesterFlightMaster : Settings
    {
        public FNVQuesterFlightMaster()
        {
            //FlightMaster discovered
            //Eastern Kingdoms
            this.ArathiHighlands = false;
            this.Wetlands = false;
            this.WesternPlaguelands = false;
            this.EasternPlaguelands = false;
            this.HillsbradFoothills = false;
            this.TheHinterlands = false;
            this.LochModan = false;
            this.Ironforge = false;
            this.SearingGorge = false;
            this.BurningSteppes = false;
            this.RedridgeMountains = false;
            this.Stormwind = false;
            this.Westfall = false;
            this.Duskwood = false;
            this.StranglethornValley = false;

            //Kalimdor
            this.Teldrassil = false;
            this.Darkshore = false;
            this.Winterspring = false;
            this.Azshara = false;
            this.Ashenvale = false;
            this.StonetalonMountains = false;
            this.Desolace = false;
            this.TheBarrens = false;
            this.Tanaris = false;
            this.FeralasFeathermoon = false;
            this.FeralasThalanaar = false;
            this.UngoroCrater = false;
            this.DustwallowMarsh = false;
            this.Silithus = false;
            this.Moonglade = false;
            this.Felwood = false;

        }

    public static void flightMasterSaveChanges(FlightMasterDB needToChange)
    {

        if(needToChange.name.Contains("Arathi"))
            CurrentSettings.ArathiHighlands = true;

        if(needToChange.name.Contains("Wetlands"))
            CurrentSettings.Wetlands = true;

        if(needToChange.name.Contains("Western"))
            CurrentSettings.WesternPlaguelands = true;

        if(needToChange.name.Contains("Eastern"))
            CurrentSettings.EasternPlaguelands = true;

        if(needToChange.name.Contains("Hillsbrad"))
            CurrentSettings.HillsbradFoothills = true;

        if(needToChange.name.Contains("Hinterlands"))
            CurrentSettings.TheHinterlands = true;

        if(needToChange.name.Contains("Modan"))
            CurrentSettings.LochModan = true;

        if(needToChange.name.Contains("Ironforge"))
            CurrentSettings.Ironforge = true;

        if(needToChange.name.Contains("Searing"))
            CurrentSettings.SearingGorge = true;

        if(needToChange.name.Contains("Burning"))
            CurrentSettings.BurningSteppes = true;

        if(needToChange.name.Contains("Redridge"))
            CurrentSettings.RedridgeMountains = true;

        if(needToChange.name.Contains("Stormwind"))
            CurrentSettings.Stormwind = true;

        if(needToChange.name.Contains("Westfall"))
            CurrentSettings.Westfall = true;

        if(needToChange.name.Contains("Duskwood"))
            CurrentSettings.Duskwood = true;

        if(needToChange.name.Contains("Stranglethorn"))
            CurrentSettings.StranglethornValley = true;


        if(needToChange.name.Contains("Teldrassil"))
            CurrentSettings.Teldrassil = true;

        if(needToChange.name.Contains("Darkshore"))
            CurrentSettings.Darkshore = true;

        if(needToChange.name.Contains("Winterspring"))
            CurrentSettings.Winterspring = true;

        if(needToChange.name.Contains("Azshara"))
            CurrentSettings.Azshara = true;

        if(needToChange.name.Contains("Ashenvale"))
            CurrentSettings.Ashenvale = true;

        if(needToChange.name.Contains("Stonetalon"))
            CurrentSettings.StonetalonMountains = true;

        if(needToChange.name.Contains("Desolace"))
            CurrentSettings.Desolace = true;

        if(needToChange.name.Contains("Tanaris"))
            CurrentSettings.Tanaris = true;

        if(needToChange.name.Contains("The Barrens"))
            CurrentSettings.TheBarrens = true;

        if(needToChange.name.Contains("Feathermoon"))
            CurrentSettings.FeralasFeathermoon = true;

        if(needToChange.name.Contains("Thalanaar"))
            CurrentSettings.FeralasThalanaar = true;

        if(needToChange.name.Contains("ro Crater"))
            CurrentSettings.UngoroCrater = true;

        if(needToChange.name.Contains("Dustwallow"))
            CurrentSettings.DustwallowMarsh = true;

        if(needToChange.name.Contains("Silithus"))
            CurrentSettings.Silithus = true;

        if(needToChange.name.Contains("Felwood"))
            CurrentSettings.Felwood = true;

        FNVQuesterFlightMaster.CurrentSettings.Save();
        Logging.Write("[FNV_FlightMaster]: Settings saved of Flight Master " + needToChange.name);
        return;
    }

        public static FNVQuesterFlightMaster CurrentSettings { get; set; }

        public bool Save()
        {
            try
            {
                return Save(AdviserFilePathAndName("FNVQuesterFlightMaster", ObjectManager.Me.Name + "." + Usefuls.RealmName));
            }
            catch(Exception e)
            {
                Logging.WriteDebug("FNVQuesterFlightMaster =&gt; Save(): " + e);
                return false;
            }
        }

        public static bool Load()
        {
            try
            {
                if(File.Exists(AdviserFilePathAndName("FNVQuesterFlightMaster", ObjectManager.Me.Name + "." + Usefuls.RealmName)))
                {
                    CurrentSettings = Load&lt;FNVQuesterFlightMaster&gt;(AdviserFilePathAndName("FNVQuesterFlightMaster", ObjectManager.Me.Name + "." + Usefuls.RealmName));
                    return true;
                }

                FNVQuesterFlightMaster.CurrentSettings = new FNVQuesterFlightMaster();
            }
            catch(Exception e)
            {
                Logging.WriteDebug("FNVQuesterFlightMaster =&gt; Load(): " + e);
            }
            return false;
        }


        //FlightMaster
        //Eastern Kingdoms
        public bool Stormwind { get; set; }
        public bool Westfall { get; set; }
        public bool RedridgeMountains { get; set; }
        public bool Duskwood { get; set; }
        public bool StranglethornValley { get; set; }
        public bool Ironforge { get; set; }
        public bool BurningSteppes { get; set; }
        public bool SearingGorge { get; set; }
        public bool LochModan { get; set; }
        public bool Wetlands { get; set; }
        public bool ArathiHighlands { get; set; }
        public bool HillsbradFoothills { get; set; }
        public bool WesternPlaguelands { get; set; }
        public bool EasternPlaguelands { get; set; }
        public bool TheHinterlands { get; set; }

        //Kalimdor

        public bool Ashenvale { get; set; }
        public bool Azshara { get; set; }
        public bool Darkshore { get; set; }
        public bool Teldrassil { get; set; }
        public bool Desolace { get; set; }
        public bool DustwallowMarsh { get; set; }
        public bool Felwood { get; set; }
        public bool FeralasFeathermoon { get; set; }
        public bool FeralasThalanaar { get; set; }
        public bool Moonglade { get; set; }
        public bool Silithus { get; set; }
        public bool StonetalonMountains { get; set; }
        public bool Tanaris { get; set; }
        public bool TheBarrens { get; set; }
        public bool UngoroCrater { get; set; }
        public bool Winterspring { get; set; }

    }

public class Boat
{
    private static bool _boatTaken = false;

    public static void menethilToAuberdine()
    {

        // Settings
        var zeppelinEntryId = 176310; // Zeppelin/Ship EntryId
                                      // From
        var fromZeppelinWaitPosition = new Vector3(-3709.475, -575.0988, 0); // Position where Zeppelin/Ship waits players (from)
        var fromPlayerWaitPosition = new Vector3(-3727.4, -581.3, 6.2); // Position where the player waits Zeppelin/Ship (from)
        var fromPlayerInZeppelinPosition = new Vector3(-3713.333, -571.7416, 6.098111); // Position where the player waits in the Zeppelin/Ship (from)
                                                                                        // To
        var toZeppelinWaitPosition = new Vector3(6406.216, 823.0809, 0); // Position where Zeppelin/Ship waits players (to)
        var toPlayerLeavePosition = new Vector3(6461.408, 806.1595, 6.770809); // Position to go out the Zeppelin/Ship (to)
                                                                               //Pos1
        var enterPos1 = new Vector3(-3724.827, -581.0698, 6.191196);
        //Pos2
        var enterPos2 = new Vector3(-3723.727, -580.3727, 6.184784);
        _boatTaken = false;

        if(!_boatTaken)
        {
            // Change WRobot settings:
            Logging.Write("[FNV_Quester]: Taking boat from Menethil to Auberdine");
            wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;
            wManager.wManagerSetting.CurrentSetting.Repair = false;
            wManager.wManagerSetting.CurrentSetting.Selling = false;
            wManager.wManagerSetting.CurrentSetting.UsePathsFinder = false;

            // Code:
            if(!Conditions.InGameAndConnectedAndProductStartedNotInPause)
                return;

            while(Products.IsStarted &amp;&amp; !_boatTaken)
            {
                while(Usefuls.ContinentId != (int)ContinentId.Kalimdor)
                {
                    if(!ObjectManager.Me.InTransport)
                    {
                        if(GoToTask.ToPosition(fromPlayerWaitPosition))
                        {
                            var zeppelin = ObjectManager.GetWoWGameObjectByEntry(zeppelinEntryId).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
                            if(zeppelin != null &amp;&amp; zeppelin.Position.DistanceTo(fromZeppelinWaitPosition) &lt; 1)
                            {

                                MovementManager.MoveTo(enterPos1);
                                if(GoToTask.ToPosition(enterPos1))
                                    MovementManager.MoveTo(enterPos2);

                                Lua.LuaDoString("ClearTarget()");

                                //wManager.Wow.Helpers.MovementManager.Face(new Vector3(-3713.333, -571.7416, 6.098111));

                                MovementManager.MoveTo(fromPlayerInZeppelinPosition);
                            }
                        }
                    }
                }
                while(Usefuls.ContinentId == (int)ContinentId.Kalimdor)
                {
                    if(ObjectManager.Me.InTransport)
                    {
                        var zeppelin = ObjectManager.GetWoWGameObjectByEntry(zeppelinEntryId).OrderBy(o =&gt; o.GetDistance).FirstOrDefault();
                        if(zeppelin != null &amp;&amp; zeppelin.Position.DistanceTo(toZeppelinWaitPosition) &lt; 1)
                        {
                            MovementManager.MoveTo(toPlayerLeavePosition);
                            break;
                        }
                    }
                }

                Logging.Write("[FNV_Quester]: Boat taken from Menethil to Auberdine");

                wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;
                wManager.wManagerSetting.CurrentSetting.Repair = true;
                wManager.wManagerSetting.CurrentSetting.Selling = true;
                wManager.wManagerSetting.CurrentSetting.UsePathsFinder = true;
                _boatTaken = true;
            }
            return;
        }
        return;
    }
}

public class Key
{
    public static bool haveKey(int keyId)
    {
        bool haveKey = Lua.LuaDoString&lt;bool&gt;("local itemIdSearch = " + keyId + "; local bag = KEYRING_CONTAINER; for slot = 1,MAX_CONTAINER_ITEMS do local itemLink = GetContainerItemLink(bag,slot); local _, itemCount = GetContainerItemInfo(bag,slot); if itemLink and itemCount then local _,_,itemId = string.find(itemLink, '.*|Hitem:(%d+):.*'); if itemId and tonumber(itemId) == itemIdSearch then return true end end end return false");
        return haveKey;
    }
}




public class Authentication
{
    
    private readonly string orderId;
    private readonly string productId;
    private readonly string wRobotAuthKey;

    private readonly BackgroundWorker _validationThread = new BackgroundWorker();
    private bool _isRunning = false;
    private string authUrl;

    public Authentication(string orderId, string productId)
    {
    
        return;  if (orderId == null)
        {
            MessageBox.Show("You need to enter your transaction id (from your Rocketr email) into the plugin settings to use this!");
        }

        this.orderId = orderId;
        this.productId = productId;

        this.wRobotAuthKey = robotManager.Helpful.Others.StringBetween(authManager.LoginServer.GetSubcriptionInfoThread(), robotManager.Translate.Get("License Key") + ": ", "...  - " + robotManager.Translate.Get("Subscription time expire"));
            authUrl = "http://51.38.127.249:8080/authenticate?orderId=" + orderId.Trim() + "&amp;productId=" + productId + "&amp;wRobotAuthKey=" + wRobotAuthKey;
        


        _isRunning = true;
        _validationThread.DoWork += CheckValidiation;
        _validationThread.RunWorkerAsync();
    }
    
    ~Authentication()
    {
        _isRunning = false;
        _validationThread.DoWork -= CheckValidiation;
        _validationThread.Dispose();
    }

    private void CheckValidiation(object sender, DoWorkEventArgs e)
    {
        while (Products.IsStarted &amp;&amp; _isRunning)
        {
            try
            {
                bool timedOut = false;
                HttpWebResponse content = null;
                try
                {
                    var request = (HttpWebRequest)WebRequest.Create(authUrl);
                    request.Timeout = 30000;
                    request.ReadWriteTimeout = 30000;
                    content = (HttpWebResponse)request.GetResponse();
                }
                catch (Exception ex)
                {
                    timedOut = true;
                }
                
                //give it another try
                if ((content != null &amp;&amp; content.StatusCode != HttpStatusCode.OK) || timedOut)
                {
                    Thread.Sleep(60 * 1000);
                    try
                    {
                        var request = (HttpWebRequest)WebRequest.Create(authUrl);
                        request.Timeout = 30000;
                        request.ReadWriteTimeout = 30000;
                        content = (HttpWebResponse)request.GetResponse();
                        timedOut = false;
                    }
                    catch (Exception ex)
                    {
                        timedOut = true;
                    }
                }

                string result = content != null ? new StreamReader(content.GetResponseStream()).ReadToEnd() : "false";

                if (!bool.Parse(result) || (content != null &amp;&amp; content.StatusCode != HttpStatusCode.OK) || timedOut)
                {
                    Products.ProductStop();
                    _isRunning = false;
                    _validationThread.DoWork -= CheckValidiation;
                    _validationThread.Dispose();
                    MessageBox.Show("You are trying to use a different wRobot key with the same order Id or your wRobot key is used by more than 10 IPs. \n\nBot name: " + ObjectManager.Me.Name + "\n\nIf your wRobot key has changed recently (f.e. after purchasing a new one), please contact FNV316");
                    return;
                }

                Thread.Sleep(60 * 1000);
            }
            catch (Exception exp)
            {
                Logging.WriteError("" + exp);
            }
        }
    }
}

    /*
    static ControlAuthentication()
    {
        new Thread(() =&gt;
        {
            while (!Conditions.InGameAndConnectedAndAliveAndProductStarted)
            {
                Thread.Sleep(500);
            }
            Thread.Sleep(30000);
            string status = Logging.Status;
            if (_controlVariable != 5 &amp;&amp; !status.Contains("To Town") &amp;&amp; !status.Contains("Regeneration") &amp;&amp; !status.Contains("Attacked") &amp;&amp; !status.Contains("Trainers") &amp;&amp; !status.Contains("Ressurect") &amp;&amp; !status.Contains("Started"))
            {
                Products.ProductStop();
                MessageBox.Show("Please enter your ID faster, restart the Bot now.");
            }
            Logging.Write("[FNV_Quester]: Launcher authentication sucessful");
        }).Start();
    }
    */

public class ControlAuthentication
{
    private static volatile int _controlVariable = 0;
    private static int _timeout = 0;
    private static bool _isRunning = true;
    private static bool disposeAuthThread = false;
    private static string profileName = "";

    public static void SetControl(int control)
    {
        _controlVariable = control;
    }

    static ControlAuthentication()
    {
        new Thread(() =&gt;
        {
            profileName = wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName;

            while(_isRunning &amp;&amp; !disposeAuthThread &amp;&amp; (wManager.Wow.Helpers.Conditions.ProductIsStarted || wManager.Wow.Helpers.Conditions.ProductInPause))
            {
                if(!wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                {
                    disposeAuthThread = true;
                    break;
                }

                if(!wManager.Wow.Helpers.Conditions.ProductIsStarted)
                {
                    disposeAuthThread = true;
                    break;
                }

                while(wManager.Wow.Helpers.Quest.QuesterCurrentContext.CurrentStep &lt; 2)
                {
                    Thread.Sleep(500);

                    if(_controlVariable == 5 || !wManager.Wow.Helpers.Conditions.ProductIsStarted)
                        break;

                    _timeout += 500;

                    if(_timeout &gt;= 910000)
                    {
                        Products.ProductStop();
                        MessageBox.Show("[FNV_Quester]: Timeout error. Unable to authenticate for more than 15 minutes. \n\nBot name: " + ObjectManager.Me.Name);
                        break;
                    }
                }

                _isRunning = false;

                if(wManager.Wow.Helpers.Conditions.ProductIsStarted || wManager.Wow.Helpers.Conditions.ProductInPause)
                {
                    Thread.Sleep(60000);

                    if(_controlVariable != 5)
                    {
                        Products.ProductStop();
                        MessageBox.Show("[FNV_Quester]: Please enter your ID faster or make sure the authentication step is enabled (#0 START_FNVLauncher_V2 -&gt; Step [1], any other profile -&gt; Step [0]). \nRestart the Bot now. \n\nBot name: " + ObjectManager.Me.Name);
                    }
                    /*
                    else
                    {
                        if(!disposeAuthThread &amp;&amp; wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName) &amp;&amp; Conditions.ProductIsStarted)
                            Logging.Write("[FNV_Quester]: Authentication sucessful");
                    }
                    */
                    _timeout = 0;
                    _isRunning = true;
                }
            }

        }).Start();
    }
    
}

[Serializable]
public class FNVQuesterAuthSettings : robotManager.Helpful.Settings
{
    [Setting]
    [Category("__IMPORTANT__")]
    [DisplayName("Rocketr Order id")]
    [Description("This is your tracking number for when you purchased this product, it is required to use this consistently. You can find it within your product delivery e-mail")]
    public string TransactionId { get { return "free"; } set { } }

    public FNVQuesterAuthSettings()
    {
        TransactionId = null;
    }
    
    public static FNVQuesterAuthSettings CurrentSetting { get; set; }

    public bool Save()
    {
        try
        {
            return Save(AdviserFilePathAndName("FNVQuester_AuthSettings", "Vanilla_Alliance"));
        }
        catch (Exception e)
        {
            robotManager.Helpful.Logging.Write("FNVQuester_AuthSettings &gt; Save(): " + e);
            return false;
        }
    }

    public static bool Load()
    {
        try
        {
            if (File.Exists(AdviserFilePathAndName("FNVQuester_AuthSettings", "Vanilla_Alliance")))
            {
                CurrentSetting =
                    Load&lt;FNVQuesterAuthSettings&gt;(AdviserFilePathAndName("FNVQuester_AuthSettings", "Vanilla_Alliance"));
                return true;
            }
            CurrentSetting = new FNVQuesterAuthSettings();
        }
        catch (Exception e)
        {
            robotManager.Helpful.Logging.Write("FNVQuester_AuthSettings &gt; Load(): " + e);
        }
        return false;
    }
}

public class SearingGorge
{
     private static bool _isStarted = false;
     private static bool _inPause = false;
     private static int gateId = 161536;
     private static Vector3 gatePosition = new Vector3(-6756, -1166, 187);

    public static void initializeGateDetection()
    {
        if(!_isStarted)
        {
            Logging.Write("[FNV_Quester]: Searing Gorge gate detection initialized");
            _isStarted = true;
            MovementEvents.OnSeemStuck += MovementEventsOnOnSeemStuck;
        }
    }

    private static void pause()
    {
        for(int i = 0; i &lt; 15000; i += 1000)
        {
            Thread.Sleep(1000);
        }
        _inPause = false;
        return;
    }

    public static void disposeGateDetection()
    {
        if(_isStarted)
        {
            Logging.Write("[FNV_Quester]: Searing Gorge gate detection disposed");
            _isStarted = false;
            MovementEvents.OnSeemStuck -= MovementEventsOnOnSeemStuck;
        }
    }

    private static void MovementEventsOnOnSeemStuck()
    {
        Logging.Write("SeemStuck detected");

        if(ObjectManager.Me.Position.DistanceTo(gatePosition) &lt;= 10 &amp;&amp; !_inPause)
        {
            Logging.Write("[FNV_Quester]: Stuck at Quarry Gate, trying to open it...");

            GoToTask.ToPositionAndIntecractWithGameObject(gatePosition, gateId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore);
            
            if(GoToTask.ToPositionAndIntecractWithGameObject(gatePosition, gateId, -1, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore))
            {
               // _inPause = true;
               // pause();
            }
        }
    }
}

public class SearingGorgeFixedPathfinding
{
    private static List&lt;Vector3&gt; brokenLocationNodes = new List&lt;Vector3&gt;();
    private static bool _inProcessing;
    private static Vector3 currentDestination = new Vector3(0, 0, 0);
    private static string status = "";

    private static void ApplyNodes()
    {
        Vector3 thoriumPoint = new Vector3(-6514, -1162, 308);
        brokenLocationNodes.Add(thoriumPoint);
    }

    public static void Initialize()
    {
        Logging.Write("[FNV_Quester]: Thorium Point pathfinder workaround started");
        MovementEvents.OnMovementPulse += MovementEventsOnOnMovementPulse;
        MovementEvents.OnSeemStuck += MovementEventsOnOnSeemStuck;
        Logging.OnChanged += LoggingEvents_OnChangedStatus;
        ApplyNodes();
        _inProcessing = false;
    }

    public static void Dispose()
    {
        MovementEvents.OnMovementPulse -= MovementEventsOnOnMovementPulse;
        MovementEvents.OnSeemStuck -= MovementEventsOnOnSeemStuck;
        Logging.OnChanged -= LoggingEvents_OnChangedStatus;
    }

    private static void MovementEventsOnOnSeemStuck()
    {
        _inProcessing = false;
    }

    private static void MovementEventsOnOnMovementPulse(List&lt;Vector3&gt; points, CancelEventArgs cancelable)
    {  
        //status = Logging.Status;
        if(CheckDestination(points.LastOrDefault&lt;Vector3&gt;()) &amp;&amp; !_inProcessing &amp;&amp; ObjectManager.Me.Position.DistanceTo(points.Last&lt;Vector3&gt;()) &gt; 50 &amp;&amp; !status.Contains("Follow Path"))
        {
            _inProcessing = true;
            Logging.Write("[FNV_Quester]: Destination vector within broken path finder range. Using custom path for movement to enter instead");
            cancelable.Cancel = true;
            UseCustomPathIn(points.LastOrDefault&lt;Vector3&gt;());
            cancelable.Cancel = false;
            _inProcessing = false;
        }

        if(CheckDestination(ObjectManager.Me.Position) &amp;&amp; !_inProcessing &amp;&amp; ObjectManager.Me.Position.DistanceTo(points.Last&lt;Vector3&gt;()) &gt; 50 &amp;&amp; !status.Contains("Follow Path"))
        {
            _inProcessing = true;
            Logging.Write("[FNV_Quester]: Starting vector within broken path finder range. Using custom path for movement to leave instead");
            cancelable.Cancel = true;
            UseCustomPathOut(points.LastOrDefault&lt;Vector3&gt;());
            cancelable.Cancel = false;
            _inProcessing = false;
        }

        if(CheckDestination(ObjectManager.Me.Position) &amp;&amp; !_inProcessing &amp;&amp; CheckDestination(points.Last&lt;Vector3&gt;()) &amp;&amp; ObjectManager.Me.Position.DistanceTo(points.Last&lt;Vector3&gt;()) &gt; 10 &amp;&amp; !status.Contains("Follow Path"))
        {
            _inProcessing = true;
            currentDestination = points.Last&lt;Vector3&gt;();
            Logging.Write("[FNV_Quester]: Starting and destination vector within broken path finder range. Using custom path for movement instead");
            cancelable.Cancel = true;
            UseCustomPathLoop(points.LastOrDefault&lt;Vector3&gt;());
            cancelable.Cancel = false;
            _inProcessing = false;
        }
    }

    
    private static void LoggingEvents_OnChangedStatus(object sender, Logging.LoggingChangeEventArgs e)
    {
        status = Logging.Status;
    }
    

    private static bool CheckDestination(Vector3 destination)
    {
        foreach(var ele in brokenLocationNodes)
        {
            //Logging.Write("Distance is: " + destination.DistanceTo(ele)); 
            if(destination.DistanceTo(ele) &lt;= 60)
                return true;
        }
        return false;
    }

    private static void UseCustomPathIn(Vector3 destination)
    {

        Vector3 currentDestination = new Vector3(0, 0, 0);

        var path = new List&lt;Vector3&gt;() {
new Vector3(-6605.966f, -1023.291f, 244.5074f, "None"),
new Vector3(-6601.826f, -1023.744f, 244.9385f, "None"),
new Vector3(-6597.218f, -1026.855f, 248.186f, "None"),
new Vector3(-6593.908f, -1031.353f, 252.414f, "None"),
new Vector3(-6591.3f, -1036.307f, 255.8175f, "None"),
new Vector3(-6588.852f, -1041.541f, 258.5742f, "None"),
new Vector3(-6586.07f, -1046.571f, 260.5392f, "None"),
new Vector3(-6582.013f, -1050.151f, 262.3918f, "None"),
new Vector3(-6577.125f, -1052.881f, 264.4617f, "None"),
new Vector3(-6572.03f, -1055.201f, 266.5196f, "None"),
new Vector3(-6566.89f, -1057.423f, 268.521f, "None"),
new Vector3(-6561.761f, -1059.671f, 270.6708f, "None"),
new Vector3(-6556.499f, -1062.034f, 272.971f, "None"),
new Vector3(-6551.548f, -1064.268f, 275.2576f, "None"),
new Vector3(-6546.625f, -1066.932f, 277.3527f, "None"),
new Vector3(-6541.8f, -1069.774f, 279.032f, "None"),
new Vector3(-6536.636f, -1071.892f, 280.7285f, "None"),
new Vector3(-6531.107f, -1072.746f, 282.576f, "None"),
new Vector3(-6525.543f, -1073.38f, 284.4381f, "None"),
new Vector3(-6519.98f, -1074.023f, 286.3544f, "None"),
new Vector3(-6514.447f, -1074.884f, 288.3375f, "None"),
new Vector3(-6508.975f, -1076.073f, 290.369f, "None"),
new Vector3(-6503.632f, -1077.715f, 292.0928f, "None"),
new Vector3(-6498.638f, -1080.577f, 293.695f, "None"),
new Vector3(-6494.001f, -1083.713f, 295.3442f, "None"),
new Vector3(-6490.028f, -1087.634f, 296.9394f, "None"),
new Vector3(-6486.872f, -1092.256f, 298.4525f, "None"),
new Vector3(-6484.295f, -1097.215f, 300.1746f, "None"),
new Vector3(-6483.278f, -1102.701f, 301.5711f, "None"),
new Vector3(-6483.816f, -1108.252f, 302.851f, "None"),
new Vector3(-6485.005f, -1113.707f, 304.0922f, "None"),
new Vector3(-6487.139f, -1118.884f, 305.0337f, "None"),
new Vector3(-6489.344f, -1124.032f, 305.7626f, "None"),
new Vector3(-6491.585f, -1129.163f, 306.1504f, "None"),
new Vector3(-6494.281f, -1134.475f, 306.4971f, "None"),
new Vector3(-6497.214f, -1139.442f, 306.8915f, "None"),
new Vector3(-6500.032f, -1144.085f, 307.3696f, "None"),
new Vector3(-6503.025f, -1149.016f, 307.632f, "None"),
new Vector3(-6505.93f, -1153.804f, 307.8793f, "None"),
new Vector3(-6508.76f, -1158.441f, 307.9853f, "None"),
new Vector3(-6512.148f, -1162.893f, 308.3222f, "None"),
new Vector3(-6517.508f, -1163.161f, 308.5844f, "None"),
            };

        foreach(var ele in path)
        {
            if(ele.DistanceTo(destination) &lt; ele.DistanceTo(currentDestination))
                currentDestination = ele;
        }

        if(wManager.Wow.Bot.Tasks.GoToTask.ToPosition(path.First&lt;Vector3&gt;(), 3.5f, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore))
        {
            wManager.Wow.Bot.Tasks.GoToTask.ToPosition(path.First&lt;Vector3&gt;(), 3.5f, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore);
        }

        while(ObjectManager.Me.Position.DistanceTo(currentDestination) &gt; 5 &amp;&amp; !currentDestination.Equals((Vector3)null) &amp;&amp; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore)
        {
            MovementManager.Go(path);
            Thread.Sleep(100);
        }

        //Logging.Write("Finished takeCustomPath");
        //Reenable();
        _inProcessing = false;
        return;
    }

    private static void UseCustomPathOut(Vector3 destination)
    {

        Vector3 currentDestination = new Vector3(0, 0, 0);

        var path = new List&lt;Vector3&gt;() {
new Vector3(-6520.889f, -1186.334f, 309.2557f, "None"),
new Vector3(-6511.543f, -1163.732f, 308.3743f, "None"),
new Vector3(-6508.988f, -1161.179f, 308.1429f, "None"),
new Vector3(-6504.05f, -1156.218f, 308.0315f, "None"),
new Vector3(-6501.398f, -1153.294f, 308.1518f, "None"),
new Vector3(-6495.091f, -1144.908f, 307.875f, "None"),
new Vector3(-6489.66f, -1136.319f, 307.1272f, "None"),
new Vector3(-6484.931f, -1126.579f, 306.6054f, "None"),
new Vector3(-6481.782f, -1116.925f, 305.3705f, "None"),
new Vector3(-6480.768f, -1106.506f, 302.6744f, "None"),
new Vector3(-6483.211f, -1096.021f, 299.9566f, "None"),
new Vector3(-6488.722f, -1087.545f, 297.2002f, "None"),
new Vector3(-6496.905f, -1080.999f, 294.2147f, "None"),
new Vector3(-6506.868f, -1076.894f, 291.0374f, "None"),
new Vector3(-6516.972f, -1075.943f, 287.6053f, "None"),
new Vector3(-6527.435f, -1075.096f, 283.8497f, "None"),
new Vector3(-6537.802f, -1073.449f, 280.6175f, "None"),
new Vector3(-6548.082f, -1070.127f, 276.9659f, "None"),
new Vector3(-6556.992f, -1065.242f, 273.4804f, "None"),
new Vector3(-6566.444f, -1059.943f, 269.1368f, "None"),
new Vector3(-6575.575f, -1055.484f, 265.3927f, "None"),
new Vector3(-6585.064f, -1050.99f, 261.5944f, "None"),
new Vector3(-6592.596f, -1046.345f, 258.3036f, "None"),
new Vector3(-6594.945f, -1035.768f, 253.8222f, "None"),
new Vector3(-6598.657f, -1026.457f, 247.278f, "None"),
new Vector3(-6605.125f, -1027.011f, 244.9202f, "None"),
new Vector3(-6614.792f, -1030.953f, 244.2407f, "None"),
};

        foreach(var ele in path)
        {
            if(ele.DistanceTo(destination) &lt; ele.DistanceTo(currentDestination))
                currentDestination = ele;
        }

        if(wManager.Wow.Bot.Tasks.GoToTask.ToPosition(path.First&lt;Vector3&gt;(), 3.5f, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore))
        {
            wManager.Wow.Bot.Tasks.GoToTask.ToPosition(path.First&lt;Vector3&gt;(), 3.5f, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore);
        }

        while(ObjectManager.Me.Position.DistanceTo(currentDestination) &gt; 5 &amp;&amp; !currentDestination.Equals((Vector3)null) &amp;&amp; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore)
        {
            MovementManager.Go(path);
            Thread.Sleep(100);
        }

       // Logging.Write("Finished takeCustomPathOut");
        //Reenable();
        _inProcessing = false;
        return;
    }

    private static void UseCustomPathLoop(Vector3 destination)
    {

var path = new List&lt;Vector3&gt;() {
new Vector3(-6511.968f, -1178.022f, 309.2499f, "None"),
new Vector3(-6514.226f, -1180.391f, 309.2652f, "None"),
new Vector3(-6514.92f, -1183.646f, 309.2562f, "None"),
new Vector3(-6512.791f, -1186.548f, 309.2562f, "None"),
new Vector3(-6510.783f, -1189.414f, 309.2562f, "None"),
new Vector3(-6509.006f, -1192.427f, 309.2562f, "None"),
new Vector3(-6512.155f, -1191.501f, 309.2562f, "None"),
new Vector3(-6515.301f, -1190.243f, 309.2562f, "None"),
new Vector3(-6518.614f, -1189.136f, 309.2562f, "None"),
new Vector3(-6522.209f, -1188.875f, 309.2562f, "None"),
new Vector3(-6524.712f, -1188.661f, 309.2562f, "None"),
new Vector3(-6522.414f, -1187.187f, 309.2562f, "None"),
new Vector3(-6521.051f, -1184.315f, 309.2562f, "None"),
new Vector3(-6522.533f, -1181.164f, 309.5719f, "None"),
new Vector3(-6525.171f, -1178.908f, 310.5407f, "None"),
new Vector3(-6528.434f, -1177.668f, 311.458f, "None"),
new Vector3(-6531.906f, -1176.674f, 311.5628f, "None"),
new Vector3(-6535.271f, -1175.711f, 311.0577f, "None"),
new Vector3(-6538.62f, -1174.692f, 310.2652f, "None"),
new Vector3(-6541.887f, -1173.795f, 309.7975f, "None"),
new Vector3(-6545.396f, -1172.942f, 309.3479f, "None"),
new Vector3(-6548.806f, -1172.151f, 309.2578f, "None"),
new Vector3(-6552.216f, -1171.361f, 309.2927f, "None"),
new Vector3(-6555.617f, -1170.538f, 309.4913f, "None"),
new Vector3(-6558.993f, -1169.615f, 309.787f, "None"),
new Vector3(-6559.922f, -1167.805f, 309.8352f, "None"),
new Vector3(-6556.908f, -1165.864f, 310.0252f, "None"),
new Vector3(-6553.557f, -1164.877f, 310.0215f, "None"),
new Vector3(-6550.08f, -1164.484f, 309.926f, "None"),
new Vector3(-6544.97f, -1163.94f, 309.7741f, "None"),
new Vector3(-6534.195f, -1162.793f, 309.3187f, "None"),
new Vector3(-6523.741f, -1161.811f, 309.0215f, "None"),
new Vector3(-6513.615f, -1160.933f, 308.2635f, "None"),
new Vector3(-6506.418f, -1160.309f, 308.1041f, "None"),
new Vector3(-6502.819f, -1159.997f, 308.3569f, "None"),
new Vector3(-6499.444f, -1159.705f, 308.7631f, "None"),
new Vector3(-6496.717f, -1159.744f, 309.0773f, "None"),
new Vector3(-6495.118f, -1161.894f, 309.1303f, "None"),
new Vector3(-6493f, -1162.4f, 309.2f, "None"),
new Vector3(-6495.47f, -1165.365f, 309.19f, "None"),
new Vector3(-6496.578f, -1168.801f, 309.2209f, "None"),
new Vector3(-6497.424f, -1172.189f, 309.2521f, "None"),
new Vector3(-6496.599f, -1175.496f, 311.4286f, "None"),
new Vector3(-6494.471f, -1178.274f, 314.4402f, "None"),
new Vector3(-6492.365f, -1181.069f, 316.9778f, "None"),
new Vector3(-6490.402f, -1183.967f, 319.4284f, "None"),
new Vector3(-6488.469f, -1186.885f, 322.0103f, "None"),
new Vector3(-6486.568f, -1189.69f, 324.5566f, "None"),
new Vector3(-6484.392f, -1192.128f, 325.7157f, "None"),
new Vector3(-6479.565f, -1189.753f, 325.8502f, "None"),
new Vector3(-6477.512f, -1187.101f, 325.9147f, "None"),
new Vector3(-6478.307f, -1183.857f, 325.7819f, "None"),
new Vector3(-6480.627f, -1181.089f, 325.6377f, "None"),
new Vector3(-6482.864f, -1178.397f, 325.7611f, "None"),
new Vector3(-6485f, -1175.625f, 325.7878f, "None"),
new Vector3(-6487.067f, -1172.94f, 325.5157f, "None"),
new Vector3(-6489.333f, -1170.127f, 325.4131f, "None"),
new Vector3(-6492.227f, -1171.737f, 325.9383f, "None"),
new Vector3(-6495.255f, -1173.477f, 326.5012f, "None"),
new Vector3(-6498.819f, -1173.806f, 326.2171f, "None"),
new Vector3(-6501.867f, -1173.776f, 325.811f, "None"),
new Vector3(-6504.835f, -1175.808f, 325.9436f, "None"),
new Vector3(-6507.222f, -1178.351f, 326.3931f, "None"),
new Vector3(-6507.92f, -1181.704f, 326.9203f, "None"),
new Vector3(-6506.445f, -1184.833f, 327.1803f, "None"),
new Vector3(-6504.251f, -1187.702f, 326.8068f, "None"),
new Vector3(-6502.15f, -1190.501f, 326.4582f, "None"),
new Vector3(-6500.116f, -1193.21f, 326.1217f, "None"),
new Vector3(-6498.121f, -1196.085f, 325.64f, "None"),
new Vector3(-6496.097f, -1199.072f, 325.2523f, "None"),
new Vector3(-6493.148f, -1199.734f, 325.4391f, "None"),
new Vector3(-6490.279f, -1197.56f, 325.5786f, "None"),
new Vector3(-6488.075f, -1194.888f, 325.6983f, "None"),
new Vector3(-6489.056f, -1191.798f, 324.8035f, "None"),
new Vector3(-6491.162f, -1189.002f, 322.1753f, "None"),
new Vector3(-6493.301f, -1186.232f, 319.5414f, "None"),
new Vector3(-6495.447f, -1183.467f, 316.7057f, "None"),
new Vector3(-6497.518f, -1180.777f, 313.957f, "None"),
new Vector3(-6499.785f, -1177.831f, 311.3158f, "None"),
new Vector3(-6501.965f, -1175.094f, 309.255f, "None"),
new Vector3(-6504.853f, -1173.284f, 309.1891f, "None"),
new Vector3(-6507.97f, -1174.138f, 309.1942f, "None"),
new Vector3(-6511.066f, -1175.981f, 309.2368f, "None"),
new Vector3(-6513.179f, -1177.529f, 309.2469f, "None"),
};


        foreach(var ele in path)
        {
            if(ele.DistanceTo(destination) &lt; ele.DistanceTo(currentDestination))
                currentDestination = ele;
        }

        if(wManager.Wow.Bot.Tasks.GoToTask.ToPosition(path.First&lt;Vector3&gt;(), 3.5f, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore))
        {
            wManager.Wow.Bot.Tasks.GoToTask.ToPosition(path.First&lt;Vector3&gt;(), 3.5f, false, context =&gt; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore);
        }
        

        while(ObjectManager.Me.Position.DistanceTo(currentDestination) &gt; 2 &amp;&amp; !currentDestination.Equals((Vector3)null) &amp;&amp; Conditions.InGameAndConnectedAndAliveAndProductStartedNotInPause &amp;&amp; !Conditions.IsAttackedAndCannotIgnore)
        {
            if(ObjectManager.Me.Position.DistanceTo(currentDestination) &lt;= 2)
            {
                break;
            }
            
            MovementManager.Go(path);
            Thread.Sleep(100);
        }

        MovementManager.MoveTo(currentDestination);

        //Logging.Write("Finished takeCustomPathLoop");
        currentDestination = new Vector3(0, 0, 0);
        //Reenable();
        _inProcessing = false;
        return;
    }

    //By Matenia
    private static async void Reenable()
    {
        //Logging.Write("Enter reenable");
        await Task.Run(() =&gt;
        {
            Products.InPause = true;
            if(ObjectManager.Me.WowClass == WoWClass.Hunter)
                Lua.LuaDoString("RotaOn = false");
            MovementManager.StopMove();
            MovementManager.CurrentPath.Clear();
            MovementManager.CurrentPathOrigine.Clear();
            Thread.Sleep(5000);
            Products.InPause = false;
            if(ObjectManager.Me.WowClass == WoWClass.Hunter)
                Lua.LuaDoString("RotaOn = true");
            Logging.Write("[VanillaFlightMaster]: Resetting pathing");
        });
    }

}

public class QuesterSettings
{

    public static void ClassSettings()
    {
        if(ObjectManager.Me.WowClass == WoWClass.Warlock)
        {
            switch(ObjectManager.Me.Level / 10)
            {
                case (1):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (2):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (3):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (4):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 45;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 45;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (5):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (6):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                default:
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;
            }

            if(wManager.wManagerSetting.CurrentSetting.DrinkName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.DrinkIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.DrinkName = "Refreshing Spring Water";
            }


            if(wManager.wManagerSetting.CurrentSetting.FoodName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.FoodIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.FoodName = "Tough Hunk of Bread";
            }

            Logging.Write("[FNV_Quester]: Using default food / drink settings for Warlock");
        }

        if(ObjectManager.Me.WowClass == WoWClass.Warrior)
        {
            switch(ObjectManager.Me.Level / 10)
            {

                case (1):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (2):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (3):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 60;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 70;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (4):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 80;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (5):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 100;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 80;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (6):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 120;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 80;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                default:
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;
            }

            if(wManager.wManagerSetting.CurrentSetting.FoodName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.FoodIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.FoodName = "Tough Hunk of Bread";
            }

            Logging.Write("[FNV_Quester]: Using default food / drink settings for Warrior");
        }

        if(ObjectManager.Me.WowClass == WoWClass.Rogue)
        {
            switch(ObjectManager.Me.Level / 10)
            {
                case (1):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (2):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (3):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (4):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 75;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (5):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 100;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 80;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                case (6):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 120;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 80;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;

                default:
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 0;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = false;
                    break;
            }


            if(wManager.wManagerSetting.CurrentSetting.FoodName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.FoodIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.FoodName = "Tough Hunk of Bread";
            }

            Logging.Write("[FNV_Quester]: Using default food / drink settings for Rogue");
        }

        if(ObjectManager.Me.WowClass == WoWClass.Mage)
        {
            switch(ObjectManager.Me.Level / 10)
            {
                case (1):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (2):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (3):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (4):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 60;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 70;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (5):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 60;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 75;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (6):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 60;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 75;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                default:
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;
            }

            if(wManager.wManagerSetting.CurrentSetting.DrinkName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.DrinkIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.DrinkName = "Refreshing Spring Water";
            }


            if(wManager.wManagerSetting.CurrentSetting.FoodName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.FoodIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.FoodName = "Tough Hunk of Bread";
            }

            Logging.Write("[FNV_Quester]: Using default food / drink settings for Mage");
        }

        if(ObjectManager.Me.WowClass == WoWClass.Druid)
        {
            switch(ObjectManager.Me.Level / 10)
            {
                case (1):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (2):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (3):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (4):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 45;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (5):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (6):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                default:
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;
            }

            if(wManager.wManagerSetting.CurrentSetting.DrinkName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.DrinkIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.DrinkName = "Refreshing Spring Water";
            }

            if(wManager.wManagerSetting.CurrentSetting.FoodName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.FoodName = "Healing Touch";
                wManager.wManagerSetting.CurrentSetting.FoodIsSpell = true;
            }

            Logging.Write("[FNV_Quester]: Using default food / drink settings for Druid");
        }

        if(ObjectManager.Me.WowClass == WoWClass.Paladin)
        {

            switch(ObjectManager.Me.Level / 10)
            {
                case (1):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (2):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (3):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 60;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (4):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 45;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (5):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 50;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (6):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 100;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 55;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                default:
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 0;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 15;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;
            }

            if(wManager.wManagerSetting.CurrentSetting.DrinkName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.DrinkIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.DrinkName = "Refreshing Spring Water";
            }

            if(wManager.wManagerSetting.CurrentSetting.FoodName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.FoodName = "Holy Light";
                wManager.wManagerSetting.CurrentSetting.FoodIsSpell = true;
            }


            Logging.Write("[FNV_Quester]: Using default food / drink settings for Paladin");
        }

        if(ObjectManager.Me.WowClass == WoWClass.Hunter)
        {
            switch(ObjectManager.Me.Level / 10)
            {
                case (1):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    Lua.LuaDoString("DEFAULT_CHAT_FRAME:AddMessage('[FNV_Quester]: Do not forget that wRobot counts empty bag slots of ammo bags as free bag space!')");
                    break;

                case (2):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (3):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 40;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (4):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 60;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 60;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (5):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                case (6):
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 80;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    break;

                default:
                    wManager.wManagerSetting.CurrentSetting.DrinkAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.FoodAmount = 20;
                    wManager.wManagerSetting.CurrentSetting.DrinkMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.FoodMaxPercent = 95;
                    wManager.wManagerSetting.CurrentSetting.DrinkPercent = 35;
                    wManager.wManagerSetting.CurrentSetting.FoodPercent = 65;
                    wManager.wManagerSetting.CurrentSetting.RestingMana = true;
                    Lua.LuaDoString("DEFAULT_CHAT_FRAME:AddMessage('[FNV_Quester]: Do not forget that wRobot counts empty bag slots of ammo bags as free bag space!')");
                    break;
            }

            if(wManager.wManagerSetting.CurrentSetting.DrinkName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.DrinkIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.DrinkName = "Refreshing Spring Water";
            }

            if(wManager.wManagerSetting.CurrentSetting.FoodName.Length &lt; 2)
            {
                wManager.wManagerSetting.CurrentSetting.FoodIsSpell = false;
                wManager.wManagerSetting.CurrentSetting.FoodName = "Tough Hunk of Bread";
            }

            Logging.Write("[FNV_Quester]: Using default food / drink settings for Hunter");

        }
    }

    public static void SettingsEasternKingdoms()
    {
        //Eastern Kingdoms only
        wManager.wManagerSetting.CurrentSetting.TrainNewSkills = true;

        wManager.wManagerSetting.CurrentSetting.DontStartFighting = false;
        wManager.wManagerSetting.CurrentSetting.DetectNodesStuck = true;
        wManager.wManagerSetting.CurrentSetting.CanAttackUnitsAlreadyInFight = false;
        wManager.wManagerSetting.CurrentSetting.AvoidBlacklistedZonesPathFinder = true;
        wManager.wManagerSetting.CurrentSetting.AttackElite = false;
        wManager.wManagerSetting.CurrentSetting.AttackBeforeBeingAttacked = true;
        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;
        wManager.wManagerSetting.CurrentSetting.FlightMasterTaxiUse = true;
        wManager.wManagerSetting.CurrentSetting.IgnoreFightWhenInMove = false;

        wManager.wManagerSetting.CurrentSetting.Repair = true;
        wManager.wManagerSetting.CurrentSetting.SellGray = true;
        wManager.wManagerSetting.CurrentSetting.SellGreen = true;
        wManager.wManagerSetting.CurrentSetting.Selling = true;
        wManager.wManagerSetting.CurrentSetting.SellWhite = true;
        wManager.wManagerSetting.CurrentSetting.MinFreeBagSlotsToGoToTown = 4;

        wManager.wManagerSetting.CurrentSetting.SearchRadius = 100;
        wManager.wManagerSetting.CurrentSetting.MaxUnitsNear = 100;

        wManager.wManagerSetting.CurrentSetting.WallDistancePathFinder = 2;
        wManager.wManagerSetting.CurrentSetting.AddToNpcDb = false;
        wManager.wManagerSetting.CurrentSetting.BlackListIfNotCompletePath = false;
        wManager.wManagerSetting.CurrentSetting.UseCTM = true;
        wManager.wManagerSetting.CurrentSetting.UseLuaToMove = true;

        wManager.wManagerSetting.CurrentSetting.NpcScanAuctioneer = false;
        wManager.wManagerSetting.CurrentSetting.NpcScanMailboxes = false;
        wManager.wManagerSetting.CurrentSetting.NpcScanRepair = false;
        wManager.wManagerSetting.CurrentSetting.NpcScanVendor = false;

        wManager.wManagerSetting.CurrentSetting.HarvestHerbs = false;
        wManager.wManagerSetting.CurrentSetting.HarvestMinerals = false;

        wManager.wManagerSetting.CurrentSetting.AvoidBlacklistedZonesPathFinder = true;
        wManager.wManagerSetting.CurrentSetting.AvoidWallWithRays = true;
        wManager.wManagerSetting.CurrentSetting.BlackListTrainingDummy = true;
        wManager.wManagerSetting.CurrentSetting.BlackListZoneWhereDead = false;
        wManager.wManagerSetting.CurrentSetting.CalcuCombatRange = false;
        wManager.wManagerSetting.CurrentSetting.CanAttackUnitsAlreadyInFight = false;
        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;
        wManager.wManagerSetting.CurrentSetting.DetectNodesStuck = true;
        wManager.wManagerSetting.CurrentSetting.DontStartFighting = false;
        wManager.wManagerSetting.CurrentSetting.FlightMasterDiscoverRange = 50;
        wManager.wManagerSetting.CurrentSetting.FlightMasterTaxiUse = true;
        wManager.wManagerSetting.CurrentSetting.HarvestAvoidPlayersRadius = 1;
        wManager.wManagerSetting.CurrentSetting.HarvestDuringLongMove = false;
        wManager.wManagerSetting.CurrentSetting.HarvestTimber = false;
        wManager.wManagerSetting.CurrentSetting.HelpingGroupMembers = true;
        wManager.wManagerSetting.CurrentSetting.IgnoreCombatWithPet = false;
        wManager.wManagerSetting.CurrentSetting.IgnoreFightDuringFarmIfDruidForm = false;
        wManager.wManagerSetting.CurrentSetting.IgnoreFightGoundMount = true;
        wManager.wManagerSetting.CurrentSetting.LootChests = false;
        wManager.wManagerSetting.CurrentSetting.LootMobs = true;
        wManager.wManagerSetting.CurrentSetting.MountDistance = 100;
        wManager.wManagerSetting.CurrentSetting.Relogger = true;
        wManager.wManagerSetting.CurrentSetting.SecurityPauseBotIfNerbyPlayer = false;
        wManager.wManagerSetting.CurrentSetting.RecordChatInLog = true;
        wManager.wManagerSetting.CurrentSetting.SecurityShutdownComputer = false;
        wManager.wManagerSetting.CurrentSetting.UsePathsFinder = true;
        wManager.wManagerSetting.CurrentSetting.UseSpiritHealer = false;
        wManager.wManagerSetting.CurrentSetting.WaitResurrectionSickness = true;
        wManager.wManagerSetting.CurrentSetting.WallDistancePathFinder = 2;

        ClassSettings();

        if(Conditions.ForceIgnoreIsAttacked)
        {
            Logging.Write("[FNV_Quester]: Force ignore attack is enabled, going to disable it...");
            Conditions.ForceIgnoreIsAttacked = false;
        }

         wManager.wManagerSetting.CurrentSetting.Save();
         Thread.Sleep(500);
         wManager.wManagerSetting.CurrentSetting.Save();

        wManager.Wow.Forms.UserControlTabGeneralSettings.ReloadGeneralSettings();

        Logging.Write("[FNV_Quester]: Applied default settings for Eastern Kingdoms");

        return;
    }

    public static void SettingsKalimdor()
    {
        //Kalimdor only
        wManager.wManagerSetting.CurrentSetting.TrainNewSkills = false;

        wManager.wManagerSetting.CurrentSetting.DontStartFighting = false;
        wManager.wManagerSetting.CurrentSetting.DetectNodesStuck = true;
        wManager.wManagerSetting.CurrentSetting.CanAttackUnitsAlreadyInFight = false;
        wManager.wManagerSetting.CurrentSetting.AvoidBlacklistedZonesPathFinder = true;
        wManager.wManagerSetting.CurrentSetting.AttackElite = false;
        wManager.wManagerSetting.CurrentSetting.AttackBeforeBeingAttacked = true;
        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = true;
        wManager.wManagerSetting.CurrentSetting.FlightMasterTaxiUse = true;
        wManager.wManagerSetting.CurrentSetting.IgnoreFightWhenInMove = false;

        wManager.wManagerSetting.CurrentSetting.Repair = true;
        wManager.wManagerSetting.CurrentSetting.SellGray = true;
        wManager.wManagerSetting.CurrentSetting.SellGreen = true;
        wManager.wManagerSetting.CurrentSetting.Selling = true;
        wManager.wManagerSetting.CurrentSetting.SellWhite = true;
        wManager.wManagerSetting.CurrentSetting.MinFreeBagSlotsToGoToTown = 4;

        wManager.wManagerSetting.CurrentSetting.SearchRadius = 100;
        wManager.wManagerSetting.CurrentSetting.MaxUnitsNear = 100;

        wManager.wManagerSetting.CurrentSetting.WallDistancePathFinder = 2;
        wManager.wManagerSetting.CurrentSetting.AddToNpcDb = false;
        wManager.wManagerSetting.CurrentSetting.BlackListIfNotCompletePath = false;
        wManager.wManagerSetting.CurrentSetting.UseCTM = true;
        wManager.wManagerSetting.CurrentSetting.UseLuaToMove = true;

        wManager.wManagerSetting.CurrentSetting.NpcScanAuctioneer = false;
        wManager.wManagerSetting.CurrentSetting.NpcScanMailboxes = false;
        wManager.wManagerSetting.CurrentSetting.NpcScanRepair = false;
        wManager.wManagerSetting.CurrentSetting.NpcScanVendor = false;

        wManager.wManagerSetting.CurrentSetting.HarvestHerbs = false;
        wManager.wManagerSetting.CurrentSetting.HarvestMinerals = false;

        wManager.wManagerSetting.CurrentSetting.AvoidBlacklistedZonesPathFinder = true;
        wManager.wManagerSetting.CurrentSetting.AvoidWallWithRays = true;
        wManager.wManagerSetting.CurrentSetting.BlackListTrainingDummy = true;
        wManager.wManagerSetting.CurrentSetting.BlackListZoneWhereDead = false;
        wManager.wManagerSetting.CurrentSetting.CalcuCombatRange = false;
        wManager.wManagerSetting.CurrentSetting.CanAttackUnitsAlreadyInFight = false;
        wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;
        wManager.wManagerSetting.CurrentSetting.DetectNodesStuck = true;
        wManager.wManagerSetting.CurrentSetting.DontStartFighting = false;
        wManager.wManagerSetting.CurrentSetting.FlightMasterDiscoverRange = 50;
        wManager.wManagerSetting.CurrentSetting.FlightMasterTaxiUse = true;
        wManager.wManagerSetting.CurrentSetting.HarvestAvoidPlayersRadius = 1;
        wManager.wManagerSetting.CurrentSetting.HarvestDuringLongMove = false;
        wManager.wManagerSetting.CurrentSetting.HarvestTimber = false;
        wManager.wManagerSetting.CurrentSetting.HelpingGroupMembers = true;
        wManager.wManagerSetting.CurrentSetting.IgnoreCombatWithPet = false;
        wManager.wManagerSetting.CurrentSetting.IgnoreFightDuringFarmIfDruidForm = false;
        wManager.wManagerSetting.CurrentSetting.IgnoreFightGoundMount = true;
        wManager.wManagerSetting.CurrentSetting.LootChests = false;
        wManager.wManagerSetting.CurrentSetting.LootMobs = true;
        wManager.wManagerSetting.CurrentSetting.MountDistance = 100;
        wManager.wManagerSetting.CurrentSetting.Relogger = true;
        wManager.wManagerSetting.CurrentSetting.SecurityPauseBotIfNerbyPlayer = false;
        wManager.wManagerSetting.CurrentSetting.RecordChatInLog = true;
        wManager.wManagerSetting.CurrentSetting.SecurityShutdownComputer = false;
        wManager.wManagerSetting.CurrentSetting.UsePathsFinder = true;
        wManager.wManagerSetting.CurrentSetting.UseSpiritHealer = false;
        wManager.wManagerSetting.CurrentSetting.WaitResurrectionSickness = true;
        wManager.wManagerSetting.CurrentSetting.WallDistancePathFinder = 2;

        ClassSettings();

        if(Conditions.ForceIgnoreIsAttacked)
        {
            Logging.Write("[FNV_Quester]: Force ignore attack is enabled, going to disable it...");
            Conditions.ForceIgnoreIsAttacked = false;
        }

         wManager.wManagerSetting.CurrentSetting.Save();
         Thread.Sleep(500);
         wManager.wManagerSetting.CurrentSetting.Save();

        wManager.Wow.Forms.UserControlTabGeneralSettings.ReloadGeneralSettings();

        Logging.Write("[FNV_Quester]: Applied default settings for Kalimdor");

        return;
    }

}


public class Blackspots
{
   

    public static void StartThread()
    {

    Thread BlackspotValidation = new Thread(() =&gt;
    {
        Logging.Write("[FNV_Quester]: Blackspot validation started");
        Dictionary&lt;Vector3, float&gt; blackspots = new Dictionary&lt;Vector3, float&gt;();
        bool _isStarted = false;

        string profileName = "FNV_V2\\#0 START_FNVLauncher_V2.xml";
        string currentProfileName = wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName;
        int counter = 0;

        if(!_isStarted)
        {
            _isStarted = true;

            while(wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName) &amp;&amp; Conditions.ProductIsStarted)
            {
                Thread.Sleep(1000);
            }

            while(Conditions.ProductIsStarted || Conditions.ProductInPause)
            {

                if(wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                    break;

                if(counter &gt; 300)
                {
                    Logging.Write("[FNV_Quester]: Clear blacklist of current product session");
                    wManager.wManagerSetting.ClearBlacklistOfCurrentProductSession();
                    counter = 0;
                }

                if(wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported)
                    wManager.wManagerSetting.CurrentSetting.CloseIfPlayerTeleported = false;

                if(!wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(currentProfileName))
                {
                    Logging.Write("[FNV_Quester]: Profile has been changed. Reset current blackspots and save blackspots of loaded profile...");
                    currentProfileName = wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName;

                    blackspots.Clear();

                    foreach(var temp in wManager.wManagerSetting.GetListZoneBlackListed())
                    {
                        blackspots.Add(temp.GetPosition(), temp.Radius);
                    }
                }

                if(blackspots.Count &gt; wManager.wManagerSetting.GetListZoneBlackListed().Count)
                {
                    Logging.Write("[FNV_Quester]: Reaply default blackspots");
                    try
                    {
                        foreach(var temp in blackspots)
                        {
                            if (!wManager.wManagerSetting.GetListZoneBlackListed().Any(b =&gt; b.GetPosition().DistanceTo(temp.Key) &lt; 0.1 &amp;&amp; System.Math.Abs(b.Radius - temp.Value) &lt; 0.1))
                                wManager.wManagerSetting.AddBlackListZone(temp.Key, temp.Value, true);
                        }
                    }
                    catch(Exception e)
                    {
                    }
                }

                if(wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                    break;

                counter++;
                Thread.Sleep(1000);
            }
        }
        _isStarted = false;
        Logging.Write("[FNV_Quester]: Blackspot validation disposed");

    });

        BlackspotValidation.Start();
    }
}

public class ProfileRestarter
{
    private static bool _IsAfk = false;
    private static Vector3 afkPosition = (Vector3)null;
    private static int timer = 0;
    private static bool _isSubscribed = false;
    private static void WatchForEvents()
    {
        if(!_isSubscribed)
        {
            _isSubscribed = true;

            EventsLuaWithArgs.OnEventsLuaWithArgs += (LuaEventsId id, List&lt;string&gt; args) =&gt;
            {
                if(id == wManager.Wow.Enums.LuaEventsId.CHAT_MSG_SYSTEM &amp;&amp; Conditions.ProductIsStartedNotInPause)
                {

                    if(args.FirstOrDefault().Contains("You are now AFK"))
                    {
                        _IsAfk = true;
                        timer = 0;
                        afkPosition = ObjectManager.Me.Position;
                    }
                }
            };
        }
    }

    public static void StartProfileRestarter()
    {

        Thread ProfileRestarterThread = new Thread(() =&gt;
        {
            Logging.Write("[FNV_Quester]: Profile Restarter initialized");

            string profileName = "FNV_V2\\#0 START_FNVLauncher_V2.xml";
            string currentProfileName = wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName;


            while((wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName) || !ObjectManager.Me.GetMove) &amp;&amp; Conditions.ProductIsStarted)
            {
                Thread.Sleep(1000);
            }

            if(!_isSubscribed)
            {
                Thread.Sleep(Usefuls.Latency + 500);
                WatchForEvents();
            }

            while(Conditions.ProductIsStarted || Conditions.ProductInPause)
            {

                if(wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                    break;

                while(_IsAfk &amp;&amp; timer &lt; 600 &amp;&amp; !wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName.Equals(profileName))
                {
                    Thread.Sleep(1000);
                    timer++;
                }

                if(_IsAfk &amp;&amp; timer &gt;= 600 &amp;&amp; ObjectManager.Me.Position.DistanceTo(afkPosition) &lt; 25)
                {
                    Logging.Write("[FNV_Quester]: Bot seems to stopped / went AFK for too long. Restart of profile in process...");
                    wManager.Wow.Helpers.Quest.QuesterCurrentContext.ProfileName = profileName;
                    robotManager.Products.Products.ProductRestart();
                    break;
                }

                timer = 0;
                _IsAfk = false;
                Thread.Sleep(10000);
            }

            Logging.Write("[FNV_Quester]: Profile Restarter disposed");

        });

        ProfileRestarterThread.Start();
    }
}


class test
{


    public static void testen()
    {

    }
}
    </Script>
  <OffMeshConnections>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-10529.47" Y="-1166.154" Z="28.1017" />
        <Vector3 X="-10534.82" Y="-1166.311" Z="28.1017" />
        <Vector3 X="-10535.86" Y="-1162.973" Z="28.09595" />
        <Vector3 X="-10537.53" Y="-1158.676" Z="28.08722" />
        <Vector3 X="-10546.25" Y="-1160.208" Z="27.94324" />
      </Path>
      <ContinentId>0</ContinentId>
      <Type>Unidirectional</Type>
      <TryToUseEvenIfCanFindPathSuccess>false</TryToUseEvenIfCanFindPathSuccess>
      <Name>Scarlet Raven Tavern #Duskwood</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-9472.049" Y="17.86269" Z="62.31624" />
        <Vector3 X="-9471.124" Y="25.33782" Z="63.82122" />
        <Vector3 X="-9467.394" Y="23.05803" Z="63.82122" />
        <Vector3 X="-9464.04" Y="17.03801" Z="63.82122" />
      </Path>
      <ContinentId>0</ContinentId>
      <Type>Unidirectional</Type>
      <TryToUseEvenIfCanFindPathSuccess>false</TryToUseEvenIfCanFindPathSuccess>
      <Name>Goldshire Inn Top floor in</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-9462.233" Y="14.1469" Z="63.82122" />
        <Vector3 X="-9468.347" Y="25.00818" Z="63.82122" />
        <Vector3 X="-9471.639" Y="20.84374" Z="63.82122" />
        <Vector3 X="-9471.947" Y="18.4557" Z="62.6772" />
      </Path>
      <ContinentId>0</ContinentId>
      <Type>Unidirectional</Type>
      <TryToUseEvenIfCanFindPathSuccess>false</TryToUseEvenIfCanFindPathSuccess>
      <Name>Goldshire Inn Top floor out</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-9464.054" Y="18.76228" Z="63.82133" />
        <Vector3 X="-9470.727" Y="25.34731" Z="63.82133" />
      </Path>
      <ContinentId>0</ContinentId>
      <Type>Unidirectional</Type>
      <TryToUseEvenIfCanFindPathSuccess>false</TryToUseEvenIfCanFindPathSuccess>
      <Name>Stalvan Out Goldshire Inn</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-9461.536" Y="10.16156" Z="63.8206" />
        <Vector3 X="-9469.536" Y="25.72165" Z="63.8206" />
      </Path>
      <ContinentId>0</ContinentId>
      <Type>Unidirectional</Type>
      <TryToUseEvenIfCanFindPathSuccess>false</TryToUseEvenIfCanFindPathSuccess>
      <Name>Stalvan Out 2 Goldshire Inn</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-9465.877" Y="20.27746" Z="63.82076" />
        <Vector3 X="-9469.448" Y="24.41542" Z="63.82076" />
      </Path>
      <ContinentId>0</ContinentId>
      <Type>Unidirectional</Type>
      <TryToUseEvenIfCanFindPathSuccess>false</TryToUseEvenIfCanFindPathSuccess>
      <Name>Stalvan 3 Goldshire Inn out</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-9463.415" Y="16.15585" Z="63.82076" />
        <Vector3 X="-9469.903" Y="25.08971" Z="63.82076" />
        <Vector3 X="-9472.346" Y="13.18986" Z="60.18996" />
        <Vector3 X="-9478.192" Y="13.95129" Z="60.18341" />
        <Vector3 X="-9475.958" Y="23.86714" Z="56.33947" />
        <Vector3 X="-9467.675" Y="26.95093" Z="56.33947" />
        <Vector3 X="-9466.577" Y="36.5004" Z="56.96678" />
        <Vector3 X="-9459.884" Y="37.57339" Z="56.95062" />
        <Vector3 X="-9458.387" Y="51.04664" Z="56.50296" />
      </Path>
      <ContinentId>0</ContinentId>
      <Type>Unidirectional</Type>
      <TryToUseEvenIfCanFindPathSuccess>false</TryToUseEvenIfCanFindPathSuccess>
      <Name>Stalvan 3 Full path out</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-8789.863" Y="481.2978" Z="93.97941" Type="Swimming" />
        <Vector3 X="-8769.908" Y="515.6658" Z="93.93523" Type="Swimming" />
        <Vector3 X="-8761.912" Y="527.9545" Z="95.73936" />
        <Vector3 X="-8759.606" Y="531.4144" Z="96.78197" />
        <Vector3 X="-8767.842" Y="537.7168" Z="97.39477" />
      </Path>
      <ContinentId>0</ContinentId>
      <Type>Unidirectional</Type>
      <TryToUseEvenIfCanFindPathSuccess>false</TryToUseEvenIfCanFindPathSuccess>
      <Name>The Canals 1</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-8753.704" Y="492.9089" Z="93.94806" Type="Swimming" />
        <Vector3 X="-8771.255" Y="514.8374" Z="93.94806" Type="Swimming" />
        <Vector3 X="-8764.096" Y="525.4178" Z="93.94806" Type="Swimming" />
        <Vector3 X="-8761.814" Y="528.5378" Z="95.81828" />
        <Vector3 X="-8760.045" Y="531.2517" Z="96.80842" />
        <Vector3 X="-8766.222" Y="537.5814" Z="97.39487" />
      </Path>
      <ContinentId>0</ContinentId>
      <Type>Unidirectional</Type>
      <TryToUseEvenIfCanFindPathSuccess>false</TryToUseEvenIfCanFindPathSuccess>
      <Name>The Canals 2</Name>
    </OffMeshConnection>
    <OffMeshConnection>
      <Path>
        <Vector3 X="-8773.404" Y="514.6235" Z="94.03193" Type="Swimming" />
        <Vector3 X="-8764.824" Y="525.9484" Z="94.03193" Type="Swimming" />
        <Vector3 X="-8762.129" Y="528.757" Z="95.81823" />
        <Vector3 X="-8760.183" Y="531.4589" Z="96.82935" />
        <Vector3 X="-8765.33" Y="535.9702" Z="97.39488" />
      </Path>
      <ContinentId>0</ContinentId>
      <Type>Unidirectional</Type>
      <TryToUseEvenIfCanFindPathSuccess>false</TryToUseEvenIfCanFindPathSuccess>
      <Name>The Canals 3</Name>
    </OffMeshConnection>
  </OffMeshConnections>
  <BlacklistNpc>
    <BlackNpc UniqueId="F1300038150074C2" Name="" />
  </BlacklistNpc>
  <BlacklistNpcType />
  <Blackspots>
    <Blackspot X="-9031.259" Y="-2413.22681" Z="129.6612" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-8936.033" Y="-2312.47632" Z="132.4605" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-8997.893" Y="-2271.83569" Z="144.338623" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-8980.99" Y="-2184.14917" Z="132.58165" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-9100.671" Y="-2031.03638" Z="128.652" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-8970.131" Y="-2009.5127" Z="135.476151" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-8989.517" Y="-2261.5542" Z="138.67601" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-9170.803" Y="-2408.82642" Z="105.785507" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-9490.203" Y="-1933.312" Z="78.74044" Radius="20" Continent="None" Comment="" />
    <Blackspot X="-9464.116" Y="-1896.8374" Z="82.42526" Radius="20" Continent="None" Comment="" />
    <Blackspot X="-9796.434" Y="-2210.36475" Z="58.609745" Radius="20" Continent="None" Comment="" />
    <Blackspot X="-9772.197" Y="-2270.77637" Z="59.3990746" Radius="20" Continent="None" Comment="" />
    <Blackspot X="-9775.969" Y="-2323.14014" Z="69.60802" Radius="20" Continent="None" Comment="" />
    <Blackspot X="-9605.377" Y="-2515.6106" Z="59.2976227" Radius="20" Continent="None" Comment="" />
    <Blackspot X="-9604.781" Y="-2606.64844" Z="56.40342" Radius="20" Continent="None" Comment="" />
    <Blackspot X="-9613.827" Y="-2631.54517" Z="57.74059" Radius="20" Continent="None" Comment="" />
    <Blackspot X="-9586.917" Y="-2662.13647" Z="59.3254547" Radius="20" Continent="None" Comment="" />
    <Blackspot X="-10362.4512" Y="-1287.778" Z="35.3078766" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10349.4014" Y="-1254.34863" Z="35.3020325" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10331.78" Y="-1206.31909" Z="37.0842972" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10367.9268" Y="-1201.468" Z="42.49768" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10272.5049" Y="-1243.2937" Z="35.68231" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10263.832" Y="-1014.65918" Z="40.09455" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10238.7939" Y="-983.372131" Z="42.5319252" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10212.62" Y="-923.2685" Z="37.8861237" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10211.29" Y="-869.8806" Z="42.8696976" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10202.4326" Y="-794.373047" Z="45.3811951" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10197.87" Y="-727.800049" Z="39.36084" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10236.8867" Y="-712.909241" Z="46.2710228" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10382.82" Y="-959.5652" Z="45.4892769" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10473.0205" Y="-972.4106" Z="45.91205" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10560.9551" Y="-979.3537" Z="50.236042" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10606.1631" Y="-942.624939" Z="53.9150734" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10638.041" Y="-849.7335" Z="53.02724" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10643.3008" Y="-796.183" Z="61.16024" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10659.3418" Y="-718.2224" Z="50.0895081" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10359.7891" Y="218.1391" Z="32.8826675" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10368.3545" Y="271.477875" Z="37.14759" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10389.7871" Y="341.560333" Z="45.0547" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10405.3174" Y="387.499451" Z="46.7842026" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10336.3545" Y="358.928833" Z="60.5417061" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-9517.548" Y="-2496.83228" Z="40.7267342" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-9771.029" Y="-2273.15942" Z="59.66354" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-9771.029" Y="-2273.15942" Z="59.66354" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-9771.029" Y="-2273.15942" Z="59.66354" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-9771.029" Y="-2273.15942" Z="59.66354" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-9772.636" Y="-2280.27222" Z="60.3789825" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-9772.636" Y="-2280.27222" Z="60.3789825" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-9460.596" Y="-2697.59448" Z="54.7263374" Radius="150" Continent="None" Comment="" />
    <Blackspot X="-9388.31" Y="-2816.02637" Z="54.7263374" Radius="150" Continent="None" Comment="" />
    <Blackspot X="-9353.225" Y="-2811.18579" Z="54.7263374" Radius="150" Continent="None" Comment="" />
    <Blackspot X="-9447.74" Y="-2799.3125" Z="54.63536" Radius="150" Continent="None" Comment="" />
    <Blackspot X="-9242.321" Y="-2456.13184" Z="56.8518562" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-8949.005" Y="-2076.04858" Z="134.695023" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-8887.908" Y="-2167.40576" Z="132.448" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-9717.465" Y="-3178.30469" Z="58.6093025" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-9824.754" Y="-3264.30469" Z="60.9432" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-9547.705" Y="-3256.79639" Z="49.0161667" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-10040.4629" Y="-957.948" Z="33.959198" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-9404.164" Y="-2562.536" Z="54.5154648" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-9337.501" Y="-2594.51343" Z="54.7151947" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-9475.776" Y="-2531.701" Z="54.624218" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-9539.379" Y="-2485.93262" Z="54.624218" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-9565.268" Y="-2586.966" Z="54.71706" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10350.63" Y="-88.5928345" Z="44.49279" Radius="50" Continent="None" Comment="" />
    <Blackspot X="-10268.7148" Y="51.8694839" Z="42.84478" Radius="15" Continent="None" Comment="" />
    <Blackspot X="-10268.3125" Y="42.8484764" Z="45.16699" Radius="15" Continent="None" Comment="" />
    <Blackspot X="-10276.4268" Y="43.9863777" Z="45.48926" Radius="15" Continent="None" Comment="" />
    <Blackspot X="-11010.6045" Y="-1120.769" Z="38.67702" Radius="80" Continent="None" Comment="" />
    <Blackspot X="-11056.3955" Y="-1138.66443" Z="38.6275139" Radius="35" Continent="None" Comment="" />
    <Blackspot X="-11018.3037" Y="-1112.13538" Z="39.95748" Radius="35" Continent="None" Comment="" />
    <Blackspot X="-10980.0342" Y="-1109.02527" Z="38.71564" Radius="35" Continent="None" Comment="" />
    <Blackspot X="-10929.3887" Y="-1115.27454" Z="37.95986" Radius="35" Continent="None" Comment="" />
    <Blackspot X="-10943.043" Y="-1145.83228" Z="39.14587" Radius="35" Continent="None" Comment="" />
    <Blackspot X="-10990.9932" Y="-1170.37744" Z="39.87504" Radius="35" Continent="None" Comment="" />
    <Blackspot X="-10335.4863" Y="239.831345" Z="33.7994957" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-10326.1943" Y="212.701035" Z="33.16227" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-10328.86" Y="179.398178" Z="34.6667862" Radius="20" Continent="None" Comment="" />
    <Blackspot X="-10316.0527" Y="144.871948" Z="38.8818169" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-10316.7637" Y="158.594711" Z="37.7302475" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-10317.2441" Y="186.48497" Z="35.4808464" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-10317.6895" Y="212.1815" Z="33.5115776" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-10316.709" Y="241.233841" Z="34.7663422" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-10314.9131" Y="265.918762" Z="37.80359" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-10314.3438" Y="288.4528" Z="41.5144463" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-10314.8213" Y="310.580078" Z="50.4213333" Radius="30" Continent="None" Comment="" />
    <Blackspot X="-10564.6865" Y="-1170.91956" Z="32.4077034" Radius="7" Continent="Azeroth" Comment="Duskwood &gt; Darkshire" />
  </Blackspots>
</EasyQuestProfile>